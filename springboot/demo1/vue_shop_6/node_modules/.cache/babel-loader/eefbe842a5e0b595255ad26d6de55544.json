{"ast":null,"code":"import { onBeforeMount } from 'vue';\nimport { isClient } from '@vueuse/core';\nimport '../../utils/index.mjs';\nimport { useGlobalConfig } from '../use-global-config/index.mjs';\nimport { defaultNamespace } from '../use-namespace/index.mjs';\nimport { generateId } from '../../utils/rand.mjs';\nlet cachedContainer;\nconst namespace = useGlobalConfig(\"namespace\", defaultNamespace);\nconst POPPER_CONTAINER_ID = `${namespace.value}-popper-container-${generateId()}`;\nconst POPPER_CONTAINER_SELECTOR = `#${POPPER_CONTAINER_ID}`;\n\nconst createContainer = () => {\n  const container = document.createElement(\"div\");\n  container.id = POPPER_CONTAINER_ID;\n  document.body.appendChild(container);\n  return container;\n};\n\nconst usePopperContainer = () => {\n  onBeforeMount(() => {\n    if (!isClient) return;\n\n    if (process.env.NODE_ENV === \"test\" || !cachedContainer || !document.body.querySelector(POPPER_CONTAINER_SELECTOR)) {\n      cachedContainer = createContainer();\n    }\n  });\n};\n\nexport { POPPER_CONTAINER_ID, POPPER_CONTAINER_SELECTOR, usePopperContainer };","map":{"version":3,"mappings":";;;;;;AAKA,IAAIA,eAAJ;AACA,MAAMC,SAAS,GAAGC,eAAe,CAAC,WAAD,EAAcC,gBAAd,CAAjC;AACY,MAACC,mBAAmB,GAAI,GAAEH,SAAS,CAACI,KAAM,qBAAoBC,UAAU,EAAG,EAA3E;AACA,MAACC,yBAAyB,GAAI,IAAGH,mBAAoB,EAArD;;AACZ,MAAMI,eAAe,GAAG,MAAM;EAC5B,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;EACAF,SAAS,CAACG,EAAV,GAAeR,mBAAf;EACAM,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,SAA1B;EACA,OAAOA,SAAP;AACD,CALD;;AAMY,MAACM,kBAAkB,GAAG,MAAM;EACtCC,aAAa,CAAC,MAAM;IAClB,IAAI,CAACC,QAAL,EACE;;IACF,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAAzB,IAAmC,CAACpB,eAApC,IAAuD,CAACU,QAAQ,CAACG,IAAT,CAAcQ,aAAd,CAA4Bd,yBAA5B,CAA5D,EAAoH;MAClHP,eAAe,GAAGQ,eAAe,EAAjC;IACD;EACF,CANY,CAAb;AAOF,CARY","names":["cachedContainer","namespace","useGlobalConfig","defaultNamespace","POPPER_CONTAINER_ID","value","generateId","POPPER_CONTAINER_SELECTOR","createContainer","container","document","createElement","id","body","appendChild","usePopperContainer","onBeforeMount","isClient","process","env","NODE_ENV","querySelector"],"sources":["../../../../../packages/hooks/use-popper-container/index.ts"],"sourcesContent":["import { onBeforeMount } from 'vue'\nimport { isClient } from '@vueuse/core'\nimport { generateId } from '@element-plus/utils'\nimport { useGlobalConfig } from '../use-global-config'\nimport { defaultNamespace } from '../use-namespace'\n\nlet cachedContainer: HTMLElement\n\nconst namespace = useGlobalConfig('namespace', defaultNamespace)\n\nexport const POPPER_CONTAINER_ID = `${\n  namespace.value\n}-popper-container-${generateId()}`\n\nexport const POPPER_CONTAINER_SELECTOR = `#${POPPER_CONTAINER_ID}`\n\nconst createContainer = () => {\n  const container = document.createElement('div')\n  container.id = POPPER_CONTAINER_ID\n  document.body.appendChild(container)\n  return container\n}\n\nexport const usePopperContainer = () => {\n  onBeforeMount(() => {\n    if (!isClient) return\n\n    // This is for bypassing the error that when under testing env, we often encounter\n    // document.body.innerHTML = '' situation\n    // for this we need to disable the caching since it's not really needed\n    if (\n      process.env.NODE_ENV === 'test' ||\n      !cachedContainer ||\n      !document.body.querySelector(POPPER_CONTAINER_SELECTOR)\n    ) {\n      cachedContainer = createContainer()\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}