{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent, getCurrentInstance, ref, computed, nextTick, watch, watchEffect, provide, reactive, onMounted, h } from 'vue';\nimport { useResizeObserver } from '@vueuse/core';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { More } from '@element-plus/icons-vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport Menu$1 from './utils/menu-bar.mjs';\nimport ElMenuCollapseTransition from './menu-collapse-transition.mjs';\nimport SubMenu from './sub-menu.mjs';\nimport { useMenuCssVar } from './use-menu-css-var.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nimport { isString, isObject } from '@vue/shared';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { flattedChildren } from '../../../utils/vue/vnode.mjs';\nconst menuProps = buildProps({\n  mode: {\n    type: String,\n    values: [\"horizontal\", \"vertical\"],\n    default: \"vertical\"\n  },\n  defaultActive: {\n    type: String,\n    default: \"\"\n  },\n  defaultOpeneds: {\n    type: definePropType(Array),\n    default: () => mutable([])\n  },\n  uniqueOpened: Boolean,\n  router: Boolean,\n  menuTrigger: {\n    type: String,\n    values: [\"hover\", \"click\"],\n    default: \"hover\"\n  },\n  collapse: Boolean,\n  backgroundColor: String,\n  textColor: String,\n  activeTextColor: String,\n  collapseTransition: {\n    type: Boolean,\n    default: true\n  },\n  ellipsis: {\n    type: Boolean,\n    default: true\n  }\n});\n\nconst checkIndexPath = indexPath => Array.isArray(indexPath) && indexPath.every(path => isString(path));\n\nconst menuEmits = {\n  close: (index, indexPath) => isString(index) && checkIndexPath(indexPath),\n  open: (index, indexPath) => isString(index) && checkIndexPath(indexPath),\n  select: (index, indexPath, item, routerResult) => isString(index) && checkIndexPath(indexPath) && isObject(item) && (routerResult === void 0 || routerResult instanceof Promise)\n};\nvar Menu = defineComponent({\n  name: \"ElMenu\",\n  props: menuProps,\n  emits: menuEmits,\n\n  setup(props, {\n    emit,\n    slots,\n    expose\n  }) {\n    const instance = getCurrentInstance();\n    const router = instance.appContext.config.globalProperties.$router;\n    const menu = ref();\n    const nsMenu = useNamespace(\"menu\");\n    const nsSubMenu = useNamespace(\"sub-menu\");\n    const sliceIndex = ref(-1);\n    const openedMenus = ref(props.defaultOpeneds && !props.collapse ? props.defaultOpeneds.slice(0) : []);\n    const activeIndex = ref(props.defaultActive);\n    const items = ref({});\n    const subMenus = ref({});\n    const isMenuPopup = computed(() => {\n      return props.mode === \"horizontal\" || props.mode === \"vertical\" && props.collapse;\n    });\n\n    const initMenu = () => {\n      const activeItem = activeIndex.value && items.value[activeIndex.value];\n      if (!activeItem || props.mode === \"horizontal\" || props.collapse) return;\n      const indexPath = activeItem.indexPath;\n      indexPath.forEach(index => {\n        const subMenu = subMenus.value[index];\n        subMenu && openMenu(index, subMenu.indexPath);\n      });\n    };\n\n    const openMenu = (index, indexPath) => {\n      if (openedMenus.value.includes(index)) return;\n\n      if (props.uniqueOpened) {\n        openedMenus.value = openedMenus.value.filter(index2 => indexPath.includes(index2));\n      }\n\n      openedMenus.value.push(index);\n      emit(\"open\", index, indexPath);\n    };\n\n    const closeMenu = (index, indexPath) => {\n      const i = openedMenus.value.indexOf(index);\n\n      if (i !== -1) {\n        openedMenus.value.splice(i, 1);\n      }\n\n      emit(\"close\", index, indexPath);\n    };\n\n    const handleSubMenuClick = ({\n      index,\n      indexPath\n    }) => {\n      const isOpened = openedMenus.value.includes(index);\n\n      if (isOpened) {\n        closeMenu(index, indexPath);\n      } else {\n        openMenu(index, indexPath);\n      }\n    };\n\n    const handleMenuItemClick = menuItem => {\n      if (props.mode === \"horizontal\" || props.collapse) {\n        openedMenus.value = [];\n      }\n\n      const {\n        index,\n        indexPath\n      } = menuItem;\n      if (index === void 0 || indexPath === void 0) return;\n\n      if (props.router && router) {\n        const route = menuItem.route || index;\n        const routerResult = router.push(route).then(res => {\n          if (!res) activeIndex.value = index;\n          return res;\n        });\n        emit(\"select\", index, indexPath, {\n          index,\n          indexPath,\n          route\n        }, routerResult);\n      } else {\n        activeIndex.value = index;\n        emit(\"select\", index, indexPath, {\n          index,\n          indexPath\n        });\n      }\n    };\n\n    const updateActiveIndex = val => {\n      const itemsInData = items.value;\n      const item = itemsInData[val] || activeIndex.value && itemsInData[activeIndex.value] || itemsInData[props.defaultActive];\n\n      if (item) {\n        activeIndex.value = item.index;\n      } else {\n        activeIndex.value = val;\n      }\n    };\n\n    const calcSliceIndex = () => {\n      var _a, _b;\n\n      if (!menu.value) return -1;\n      const items2 = Array.from((_b = (_a = menu.value) == null ? void 0 : _a.childNodes) != null ? _b : []).filter(item => item.nodeName !== \"#text\" || item.nodeValue);\n      const moreItemWidth = 64;\n      const paddingLeft = Number.parseInt(getComputedStyle(menu.value).paddingLeft, 10);\n      const paddingRight = Number.parseInt(getComputedStyle(menu.value).paddingRight, 10);\n      const menuWidth = menu.value.clientWidth - paddingLeft - paddingRight;\n      let calcWidth = 0;\n      let sliceIndex2 = 0;\n      items2.forEach((item, index) => {\n        calcWidth += item.offsetWidth || 0;\n\n        if (calcWidth <= menuWidth - moreItemWidth) {\n          sliceIndex2 = index + 1;\n        }\n      });\n      return sliceIndex2 === items2.length ? -1 : sliceIndex2;\n    };\n\n    const debounce = (fn, wait = 33.34) => {\n      let timmer;\n      return () => {\n        timmer && clearTimeout(timmer);\n        timmer = setTimeout(() => {\n          fn();\n        }, wait);\n      };\n    };\n\n    let isFirstTimeRender = true;\n\n    const handleResize = () => {\n      const callback = () => {\n        sliceIndex.value = -1;\n        nextTick(() => {\n          sliceIndex.value = calcSliceIndex();\n        });\n      };\n\n      isFirstTimeRender ? callback() : debounce(callback)();\n      isFirstTimeRender = false;\n    };\n\n    watch(() => props.defaultActive, currentActive => {\n      if (!items.value[currentActive]) {\n        activeIndex.value = \"\";\n      }\n\n      updateActiveIndex(currentActive);\n    });\n    watch(() => props.collapse, value => {\n      if (value) openedMenus.value = [];\n    });\n    watch(items.value, initMenu);\n    let resizeStopper;\n    watchEffect(() => {\n      if (props.mode === \"horizontal\" && props.ellipsis) resizeStopper = useResizeObserver(menu, handleResize).stop;else resizeStopper == null ? void 0 : resizeStopper();\n    });\n    {\n      const addSubMenu = item => {\n        subMenus.value[item.index] = item;\n      };\n\n      const removeSubMenu = item => {\n        delete subMenus.value[item.index];\n      };\n\n      const addMenuItem = item => {\n        items.value[item.index] = item;\n      };\n\n      const removeMenuItem = item => {\n        delete items.value[item.index];\n      };\n\n      provide(\"rootMenu\", reactive({\n        props,\n        openedMenus,\n        items,\n        subMenus,\n        activeIndex,\n        isMenuPopup,\n        addMenuItem,\n        removeMenuItem,\n        addSubMenu,\n        removeSubMenu,\n        openMenu,\n        closeMenu,\n        handleMenuItemClick,\n        handleSubMenuClick\n      }));\n      provide(`subMenu:${instance.uid}`, {\n        addSubMenu,\n        removeSubMenu,\n        mouseInChild: ref(false),\n        level: 0\n      });\n    }\n    onMounted(() => {\n      if (props.mode === \"horizontal\") {\n        new Menu$1(instance.vnode.el, nsMenu.namespace.value);\n      }\n    });\n    {\n      const open = index => {\n        const {\n          indexPath\n        } = subMenus.value[index];\n        indexPath.forEach(i => openMenu(i, indexPath));\n      };\n\n      expose({\n        open,\n        close: closeMenu,\n        handleResize\n      });\n    }\n    return () => {\n      var _a, _b;\n\n      let slot = (_b = (_a = slots.default) == null ? void 0 : _a.call(slots)) != null ? _b : [];\n      const vShowMore = [];\n\n      if (props.mode === \"horizontal\" && menu.value) {\n        const originalSlot = flattedChildren(slot);\n        const slotDefault = sliceIndex.value === -1 ? originalSlot : originalSlot.slice(0, sliceIndex.value);\n        const slotMore = sliceIndex.value === -1 ? [] : originalSlot.slice(sliceIndex.value);\n\n        if ((slotMore == null ? void 0 : slotMore.length) && props.ellipsis) {\n          slot = slotDefault;\n          vShowMore.push(h(SubMenu, {\n            index: \"sub-menu-more\",\n            class: nsSubMenu.e(\"hide-arrow\")\n          }, {\n            title: () => h(ElIcon, {\n              class: nsSubMenu.e(\"icon-more\")\n            }, {\n              default: () => h(More)\n            }),\n            default: () => slotMore\n          }));\n        }\n      }\n\n      const ulStyle = useMenuCssVar(props, 0);\n      const vMenu = h(\"ul\", {\n        key: String(props.collapse),\n        role: \"menubar\",\n        ref: menu,\n        style: ulStyle.value,\n        class: {\n          [nsMenu.b()]: true,\n          [nsMenu.m(props.mode)]: true,\n          [nsMenu.m(\"collapse\")]: props.collapse\n        }\n      }, [...slot, ...vShowMore]);\n\n      if (props.collapseTransition && props.mode === \"vertical\") {\n        return h(ElMenuCollapseTransition, () => vMenu);\n      }\n\n      return vMenu;\n    };\n  }\n\n});\nexport { Menu as default, menuEmits, menuProps };","map":{"version":3,"mappings":"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","names":["menuProps","buildProps","mode","type","String","values","default","defaultActive","defaultOpeneds","definePropType","Array","mutable","uniqueOpened","Boolean","router","menuTrigger","collapse","backgroundColor","textColor","activeTextColor","collapseTransition","ellipsis","checkIndexPath","indexPath","isArray","every","path","isString","menuEmits","close","index","open","select","item","routerResult","isObject","Promise","defineComponent","name","props","emits","setup","emit","slots","expose","instance","getCurrentInstance","appContext","config","globalProperties","$router","menu","ref","nsMenu","useNamespace","nsSubMenu","sliceIndex","openedMenus","slice","activeIndex","items","subMenus","isMenuPopup","computed","initMenu","activeItem","value","forEach","subMenu","openMenu","includes","filter","index2","push","closeMenu","i","indexOf","splice","handleSubMenuClick","isOpened","handleMenuItemClick","menuItem","route","then","res","updateActiveIndex","val","itemsInData","calcSliceIndex","_a","_b","items2","from","childNodes","nodeName","nodeValue","moreItemWidth","paddingLeft","Number","parseInt","getComputedStyle","paddingRight","menuWidth","clientWidth","calcWidth","sliceIndex2","offsetWidth","length","debounce","fn","wait","timmer","clearTimeout","setTimeout","isFirstTimeRender","handleResize","callback","nextTick","watch","currentActive","resizeStopper","watchEffect","useResizeObserver","stop","addSubMenu","removeSubMenu","addMenuItem","removeMenuItem","provide","reactive","uid","mouseInChild","level","onMounted","Menubar","vnode","el","namespace","slot","call","vShowMore","originalSlot","flattedChildren","slotDefault","slotMore","h","ElSubMenu","class","e","title","ElIcon","More","ulStyle","useMenuCssVar","vMenu","key","role","style","b","m","ElMenuCollapseTransition"],"sources":["../../../../../../packages/components/menu/src/menu.ts"],"sourcesContent":["import {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  h,\n  nextTick,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue'\nimport { useResizeObserver } from '@vueuse/core'\nimport ElIcon from '@element-plus/components/icon'\nimport { More } from '@element-plus/icons-vue'\nimport {\n  buildProps,\n  definePropType,\n  flattedChildren,\n  isObject,\n  isString,\n  mutable,\n} from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport Menubar from './utils/menu-bar'\nimport ElMenuCollapseTransition from './menu-collapse-transition.vue'\nimport ElSubMenu from './sub-menu'\nimport { useMenuCssVar } from './use-menu-css-var'\n\nimport type { MenuItemClicked, MenuProvider, SubMenuProvider } from './types'\nimport type { NavigationFailure, Router } from 'vue-router'\nimport type { ExtractPropTypes, VNode } from 'vue'\nimport type { UseResizeObserverReturn } from '@vueuse/core'\n\nexport const menuProps = buildProps({\n  mode: {\n    type: String,\n    values: ['horizontal', 'vertical'],\n    default: 'vertical',\n  },\n  defaultActive: {\n    type: String,\n    default: '',\n  },\n  defaultOpeneds: {\n    type: definePropType<string[]>(Array),\n    default: () => mutable([] as const),\n  },\n  uniqueOpened: Boolean,\n  router: Boolean,\n  menuTrigger: {\n    type: String,\n    values: ['hover', 'click'],\n    default: 'hover',\n  },\n  collapse: Boolean,\n  backgroundColor: String,\n  textColor: String,\n  activeTextColor: String,\n  collapseTransition: {\n    type: Boolean,\n    default: true,\n  },\n  ellipsis: {\n    type: Boolean,\n    default: true,\n  },\n} as const)\nexport type MenuProps = ExtractPropTypes<typeof menuProps>\n\nconst checkIndexPath = (indexPath: unknown): indexPath is string[] =>\n  Array.isArray(indexPath) && indexPath.every((path) => isString(path))\n\nexport const menuEmits = {\n  close: (index: string, indexPath: string[]) =>\n    isString(index) && checkIndexPath(indexPath),\n\n  open: (index: string, indexPath: string[]) =>\n    isString(index) && checkIndexPath(indexPath),\n\n  select: (\n    index: string,\n    indexPath: string[],\n    item: MenuItemClicked,\n    routerResult?: Promise<void | NavigationFailure>\n  ) =>\n    isString(index) &&\n    checkIndexPath(indexPath) &&\n    isObject(item) &&\n    (routerResult === undefined || routerResult instanceof Promise),\n}\nexport type MenuEmits = typeof menuEmits\n\nexport default defineComponent({\n  name: 'ElMenu',\n\n  props: menuProps,\n  emits: menuEmits,\n\n  setup(props, { emit, slots, expose }) {\n    const instance = getCurrentInstance()!\n    const router = instance.appContext.config.globalProperties.$router as Router\n    const menu = ref<HTMLUListElement>()\n    const nsMenu = useNamespace('menu')\n    const nsSubMenu = useNamespace('sub-menu')\n\n    // data\n    const sliceIndex = ref(-1)\n\n    const openedMenus = ref<MenuProvider['openedMenus']>(\n      props.defaultOpeneds && !props.collapse\n        ? props.defaultOpeneds.slice(0)\n        : []\n    )\n    const activeIndex = ref<MenuProvider['activeIndex']>(props.defaultActive)\n    const items = ref<MenuProvider['items']>({})\n    const subMenus = ref<MenuProvider['subMenus']>({})\n\n    // computed\n    const isMenuPopup = computed<MenuProvider['isMenuPopup']>(() => {\n      return (\n        props.mode === 'horizontal' ||\n        (props.mode === 'vertical' && props.collapse)\n      )\n    })\n\n    // methods\n    const initMenu = () => {\n      const activeItem = activeIndex.value && items.value[activeIndex.value]\n      if (!activeItem || props.mode === 'horizontal' || props.collapse) return\n\n      const indexPath = activeItem.indexPath\n\n      // 展开该菜单项的路径上所有子菜单\n      // expand all subMenus of the menu item\n      indexPath.forEach((index) => {\n        const subMenu = subMenus.value[index]\n        subMenu && openMenu(index, subMenu.indexPath)\n      })\n    }\n\n    const openMenu: MenuProvider['openMenu'] = (index, indexPath) => {\n      if (openedMenus.value.includes(index)) return\n      // 将不在该菜单路径下的其余菜单收起\n      // collapse all menu that are not under current menu item\n      if (props.uniqueOpened) {\n        openedMenus.value = openedMenus.value.filter((index: string) =>\n          indexPath.includes(index)\n        )\n      }\n      openedMenus.value.push(index)\n      emit('open', index, indexPath)\n    }\n\n    const closeMenu: MenuProvider['closeMenu'] = (index, indexPath) => {\n      const i = openedMenus.value.indexOf(index)\n      if (i !== -1) {\n        openedMenus.value.splice(i, 1)\n      }\n      emit('close', index, indexPath)\n    }\n\n    const handleSubMenuClick: MenuProvider['handleSubMenuClick'] = ({\n      index,\n      indexPath,\n    }) => {\n      const isOpened = openedMenus.value.includes(index)\n\n      if (isOpened) {\n        closeMenu(index, indexPath)\n      } else {\n        openMenu(index, indexPath)\n      }\n    }\n\n    const handleMenuItemClick: MenuProvider['handleMenuItemClick'] = (\n      menuItem\n    ) => {\n      if (props.mode === 'horizontal' || props.collapse) {\n        openedMenus.value = []\n      }\n\n      const { index, indexPath } = menuItem\n      if (index === undefined || indexPath === undefined) return\n\n      if (props.router && router) {\n        const route = menuItem.route || index\n        const routerResult = router.push(route).then((res) => {\n          if (!res) activeIndex.value = index\n          return res\n        })\n        emit(\n          'select',\n          index,\n          indexPath,\n          { index, indexPath, route },\n          routerResult\n        )\n      } else {\n        activeIndex.value = index\n        emit('select', index, indexPath, { index, indexPath })\n      }\n    }\n\n    const updateActiveIndex = (val: string) => {\n      const itemsInData = items.value\n      const item =\n        itemsInData[val] ||\n        (activeIndex.value && itemsInData[activeIndex.value]) ||\n        itemsInData[props.defaultActive]\n\n      if (item) {\n        activeIndex.value = item.index\n      } else {\n        activeIndex.value = val\n      }\n    }\n\n    const calcSliceIndex = () => {\n      if (!menu.value) return -1\n      const items = Array.from(menu.value?.childNodes ?? []).filter(\n        (item) => item.nodeName !== '#text' || item.nodeValue\n      ) as HTMLElement[]\n      const moreItemWidth = 64\n      const paddingLeft = Number.parseInt(\n        getComputedStyle(menu.value!).paddingLeft,\n        10\n      )\n      const paddingRight = Number.parseInt(\n        getComputedStyle(menu.value!).paddingRight,\n        10\n      )\n      const menuWidth = menu.value!.clientWidth - paddingLeft - paddingRight\n      let calcWidth = 0\n      let sliceIndex = 0\n      items.forEach((item, index) => {\n        calcWidth += item.offsetWidth || 0\n        if (calcWidth <= menuWidth - moreItemWidth) {\n          sliceIndex = index + 1\n        }\n      })\n      return sliceIndex === items.length ? -1 : sliceIndex\n    }\n\n    // Common computer monitor FPS is 60Hz, which means 60 redraws per second. Calculation formula: 1000ms/60 ≈ 16.67ms, In order to avoid a certain chance of repeated triggering when `resize`, set wait to 16.67 * 2 = 33.34\n    const debounce = (fn: () => void, wait = 33.34) => {\n      let timmer: ReturnType<typeof setTimeout> | null\n      return () => {\n        timmer && clearTimeout(timmer)\n        timmer = setTimeout(() => {\n          fn()\n        }, wait)\n      }\n    }\n\n    let isFirstTimeRender = true\n    const handleResize = () => {\n      const callback = () => {\n        sliceIndex.value = -1\n        nextTick(() => {\n          sliceIndex.value = calcSliceIndex()\n        })\n      }\n      // execute callback directly when first time resize to avoid shaking\n      isFirstTimeRender ? callback() : debounce(callback)()\n      isFirstTimeRender = false\n    }\n\n    watch(\n      () => props.defaultActive,\n      (currentActive) => {\n        if (!items.value[currentActive]) {\n          activeIndex.value = ''\n        }\n        updateActiveIndex(currentActive)\n      }\n    )\n\n    watch(\n      () => props.collapse,\n      (value) => {\n        if (value) openedMenus.value = []\n      }\n    )\n\n    watch(items.value, initMenu)\n\n    let resizeStopper: UseResizeObserverReturn['stop']\n    watchEffect(() => {\n      if (props.mode === 'horizontal' && props.ellipsis)\n        resizeStopper = useResizeObserver(menu, handleResize).stop\n      else resizeStopper?.()\n    })\n\n    // provide\n    {\n      const addSubMenu: MenuProvider['addSubMenu'] = (item) => {\n        subMenus.value[item.index] = item\n      }\n\n      const removeSubMenu: MenuProvider['removeSubMenu'] = (item) => {\n        delete subMenus.value[item.index]\n      }\n\n      const addMenuItem: MenuProvider['addMenuItem'] = (item) => {\n        items.value[item.index] = item\n      }\n\n      const removeMenuItem: MenuProvider['removeMenuItem'] = (item) => {\n        delete items.value[item.index]\n      }\n      provide<MenuProvider>(\n        'rootMenu',\n        reactive({\n          props,\n          openedMenus,\n          items,\n          subMenus,\n          activeIndex,\n          isMenuPopup,\n\n          addMenuItem,\n          removeMenuItem,\n          addSubMenu,\n          removeSubMenu,\n          openMenu,\n          closeMenu,\n          handleMenuItemClick,\n          handleSubMenuClick,\n        })\n      )\n      provide<SubMenuProvider>(`subMenu:${instance.uid}`, {\n        addSubMenu,\n        removeSubMenu,\n        mouseInChild: ref(false),\n        level: 0,\n      })\n    }\n\n    // lifecycle\n    onMounted(() => {\n      if (props.mode === 'horizontal') {\n        new Menubar(instance.vnode.el!, nsMenu.namespace.value)\n      }\n    })\n\n    {\n      const open = (index: string) => {\n        const { indexPath } = subMenus.value[index]\n        indexPath.forEach((i) => openMenu(i, indexPath))\n      }\n      expose({\n        open,\n        close: closeMenu,\n        handleResize,\n      })\n    }\n\n    return () => {\n      let slot = slots.default?.() ?? []\n      const vShowMore: VNode[] = []\n\n      if (props.mode === 'horizontal' && menu.value) {\n        const originalSlot = flattedChildren(slot)\n        const slotDefault =\n          sliceIndex.value === -1\n            ? originalSlot\n            : originalSlot.slice(0, sliceIndex.value)\n\n        const slotMore =\n          sliceIndex.value === -1 ? [] : originalSlot.slice(sliceIndex.value)\n\n        if (slotMore?.length && props.ellipsis) {\n          slot = slotDefault\n          vShowMore.push(\n            h(\n              ElSubMenu,\n              {\n                index: 'sub-menu-more',\n                class: nsSubMenu.e('hide-arrow'),\n              },\n              {\n                title: () =>\n                  h(\n                    ElIcon,\n                    {\n                      class: nsSubMenu.e('icon-more'),\n                    },\n                    { default: () => h(More) }\n                  ),\n                default: () => slotMore,\n              }\n            )\n          )\n        }\n      }\n\n      const ulStyle = useMenuCssVar(props, 0)\n\n      const vMenu = h(\n        'ul',\n        {\n          key: String(props.collapse),\n          role: 'menubar',\n          ref: menu,\n          style: ulStyle.value,\n          class: {\n            [nsMenu.b()]: true,\n            [nsMenu.m(props.mode)]: true,\n            [nsMenu.m('collapse')]: props.collapse,\n          },\n        },\n        [...slot, ...vShowMore]\n      )\n\n      if (props.collapseTransition && props.mode === 'vertical') {\n        return h(ElMenuCollapseTransition, () => vMenu)\n      }\n\n      return vMenu\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}