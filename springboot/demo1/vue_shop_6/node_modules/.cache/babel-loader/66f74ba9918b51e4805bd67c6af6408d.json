{"ast":null,"code":"const NODE_KEY = \"$treeNodeId\";\n\nconst markNodeData = function (node, data) {\n  if (!data || data[NODE_KEY]) return;\n  Object.defineProperty(data, NODE_KEY, {\n    value: node.id,\n    enumerable: false,\n    configurable: false,\n    writable: false\n  });\n};\n\nconst getNodeKey = function (key, data) {\n  if (!key) return data[NODE_KEY];\n  return data[key];\n};\n\nconst handleCurrentChange = (store, emit, setCurrent) => {\n  const preCurrentNode = store.value.currentNode;\n  setCurrent();\n  const currentNode = store.value.currentNode;\n  if (preCurrentNode === currentNode) return;\n  emit(\"current-change\", currentNode ? currentNode : null, currentNode);\n};\n\nexport { NODE_KEY, getNodeKey, handleCurrentChange, markNodeData };","map":{"version":3,"mappings":"AAAY,MAACA,QAAQ,GAAG,aAAZ;;AACA,MAACC,YAAY,GAAG,UAASC,IAAT,EAAeC,IAAf,EAAqB;EAC/C,IAAI,CAACA,IAAD,IAASA,IAAI,CAACH,QAAD,CAAjB,EACE;EACFI,MAAM,CAACC,cAAP,CAAsBF,IAAtB,EAA4BH,QAA5B,EAAsC;IACpCM,KAAK,EAAEJ,IAAI,CAACK,EADwB;IAEpCC,UAAU,EAAE,KAFwB;IAGpCC,YAAY,EAAE,KAHsB;IAIpCC,QAAQ,EAAE;EAJ0B,CAAtC;AAMF,CATY;;AAUA,MAACC,UAAU,GAAG,UAASC,GAAT,EAAcT,IAAd,EAAoB;EAC5C,IAAI,CAACS,GAAL,EACE,OAAOT,IAAI,CAACH,QAAD,CAAX;EACF,OAAOG,IAAI,CAACS,GAAD,CAAX;AACF,CAJY;;AAKA,MAACC,mBAAmB,GAAG,CAACC,KAAD,EAAQC,IAAR,EAAcC,UAAd,KAA6B;EAC9D,MAAMC,cAAc,GAAGH,KAAK,CAACR,KAAN,CAAYY,WAAnC;EACAF,UAAU;EACV,MAAME,WAAW,GAAGJ,KAAK,CAACR,KAAN,CAAYY,WAAhC;EACA,IAAID,cAAc,KAAKC,WAAvB,EACE;EACFH,IAAI,CAAC,gBAAD,EAAmBG,WAAW,GAAGA,WAAH,GAAiB,IAA/C,EAAqDA,WAArD,CAAJ;AACF,CAPY","names":["NODE_KEY","markNodeData","node","data","Object","defineProperty","value","id","enumerable","configurable","writable","getNodeKey","key","handleCurrentChange","store","emit","setCurrent","preCurrentNode","currentNode"],"sources":["../../../../../../../packages/components/tree/src/model/util.ts"],"sourcesContent":["import type { SetupContext } from 'vue'\nimport type Node from './node'\nimport type { RootTreeType, TreeKey, TreeNodeData } from '../tree.type'\n\nexport const NODE_KEY = '$treeNodeId'\n\nexport const markNodeData = function (node: Node, data: TreeNodeData): void {\n  if (!data || data[NODE_KEY]) return\n  Object.defineProperty(data, NODE_KEY, {\n    value: node.id,\n    enumerable: false,\n    configurable: false,\n    writable: false,\n  })\n}\n\nexport const getNodeKey = function (key: TreeKey, data: TreeNodeData): any {\n  if (!key) return data[NODE_KEY]\n  return data[key]\n}\n\nexport const handleCurrentChange = (\n  store: RootTreeType['store'],\n  emit: SetupContext['emit'],\n  setCurrent: () => void\n) => {\n  const preCurrentNode = store.value.currentNode\n  setCurrent()\n  const currentNode = store.value.currentNode\n  if (preCurrentNode === currentNode) return\n\n  emit('current-change', currentNode ? currentNode : null, currentNode)\n}\n"]},"metadata":{},"sourceType":"module"}