{"ast":null,"code":"import { capitalize as capitalize$1 } from '@vue/shared';\nexport { camelize, hyphenate, hyphenate as kebabCase } from '@vue/shared';\n\nconst escapeStringRegexp = (string = \"\") => string.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\").replace(/-/g, \"\\\\x2d\");\n\nconst capitalize = str => capitalize$1(str);\n\nexport { capitalize, escapeStringRegexp };","map":{"version":3,"mappings":";;;AAMY,MAACA,kBAAkB,GAAG,CAACC,MAAM,GAAG,EAAV,KAAiBA,MAAM,CAACC,OAAP,CAAe,qBAAf,EAAsC,MAAtC,EAA8CA,OAA9C,CAAsD,IAAtD,EAA4D,OAA5D,CAAvC;;AACA,MAACC,UAAU,GAAIC,GAAD,IAASC,YAAY,CAACD,GAAD,CAAnC","names":["escapeStringRegexp","string","replace","capitalize","str","toCapitalize"],"sources":["../../../../packages/utils/strings.ts"],"sourcesContent":["import { capitalize as toCapitalize } from '@vue/shared'\nexport {\n  camelize,\n  hyphenate,\n  hyphenate as kebabCase, // alias\n} from '@vue/shared'\n\n/**\n * fork from {@link https://github.com/sindresorhus/escape-string-regexp}\n */\nexport const escapeStringRegexp = (string = '') =>\n  string.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d')\n\n// NOTE: improve capitalize types. Restore previous code after the [PR](https://github.com/vuejs/core/pull/6212) merge\nexport const capitalize = <T extends string>(str: T) =>\n  toCapitalize(str) as Capitalize<T>\n"]},"metadata":{},"sourceType":"module"}