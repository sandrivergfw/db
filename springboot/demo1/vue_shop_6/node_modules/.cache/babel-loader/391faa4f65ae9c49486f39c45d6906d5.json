{"ast":null,"code":"const REPEAT_INTERVAL = 100;\nconst REPEAT_DELAY = 600;\nconst RepeatClick = {\n  beforeMount(el, binding) {\n    let interval = null;\n    let delay = null;\n\n    const handler = () => binding.value && binding.value();\n\n    const clear = () => {\n      if (delay) {\n        clearTimeout(delay);\n        delay = null;\n      }\n\n      if (interval) {\n        clearInterval(interval);\n        interval = null;\n      }\n    };\n\n    el.addEventListener(\"mousedown\", e => {\n      if (e.button !== 0) return;\n      handler();\n      document.addEventListener(\"mouseup\", clear, {\n        once: true\n      });\n      clear();\n      delay = setTimeout(() => {\n        interval = setInterval(() => {\n          handler();\n        }, REPEAT_INTERVAL);\n      }, REPEAT_DELAY);\n    });\n  }\n\n};\nexport { REPEAT_DELAY, REPEAT_INTERVAL, RepeatClick as default };","map":{"version":3,"mappings":"AAAY,MAACA,eAAe,GAAG,GAAnB;AACA,MAACC,YAAY,GAAG,GAAhB;AACP,MAACC,WAAW,GAAG;EAClBC,WAAW,CAACC,EAAD,EAAKC,OAAL,EAAc;IACvB,IAAIC,QAAQ,GAAG,IAAf;IACA,IAAIC,KAAK,GAAG,IAAZ;;IACA,MAAMC,OAAO,GAAG,MAAMH,OAAO,CAACI,KAAR,IAAiBJ,OAAO,CAACI,KAAR,EAAvC;;IACA,MAAMC,KAAK,GAAG,MAAM;MAClB,IAAIH,KAAJ,EAAW;QACTI,YAAY,CAACJ,KAAD,CAAZ;QACAA,KAAK,GAAG,IAAR;MACD;;MACD,IAAID,QAAJ,EAAc;QACZM,aAAa,CAACN,QAAD,CAAb;QACAA,QAAQ,GAAG,IAAX;MACD;IACF,CATD;;IAUAF,EAAE,CAACS,gBAAH,CAAoB,WAApB,EAAkCC,CAAD,IAAO;MACtC,IAAIA,CAAC,CAACC,MAAF,KAAa,CAAjB,EACE;MACFP,OAAO;MACPQ,QAAQ,CAACH,gBAAT,CAA0B,SAA1B,EAAqCH,KAArC,EAA4C;QAAEO,IAAI,EAAE;MAAR,CAA5C;MACAP,KAAK;MACLH,KAAK,GAAGW,UAAU,CAAC,MAAM;QACvBZ,QAAQ,GAAGa,WAAW,CAAC,MAAM;UAC3BX,OAAO;QACR,CAFqB,EAEnBR,eAFmB,CAAtB;MAGD,CAJiB,EAIfC,YAJe,CAAlB;IAKD,CAXD;EAYD;;AA3BiB,CAAf","names":["REPEAT_INTERVAL","REPEAT_DELAY","RepeatClick","beforeMount","el","binding","interval","delay","handler","value","clear","clearTimeout","clearInterval","addEventListener","e","button","document","once","setTimeout","setInterval"],"sources":["../../../../../packages/directives/repeat-click/index.ts"],"sourcesContent":["import type { DirectiveBinding, ObjectDirective } from 'vue'\n\nexport const REPEAT_INTERVAL = 100\nexport const REPEAT_DELAY = 600\n\nconst RepeatClick: ObjectDirective = {\n  beforeMount(el: HTMLElement, binding: DirectiveBinding) {\n    let interval: ReturnType<typeof setInterval> | null = null\n    let delay: ReturnType<typeof setTimeout> | null = null\n\n    const handler = () => binding.value && binding.value()\n\n    const clear = () => {\n      if (delay) {\n        clearTimeout(delay)\n        delay = null\n      }\n      if (interval) {\n        clearInterval(interval)\n        interval = null\n      }\n    }\n\n    el.addEventListener('mousedown', (e: MouseEvent) => {\n      if (e.button !== 0) return\n      handler()\n\n      document.addEventListener('mouseup', clear, { once: true })\n      clear()\n      delay = setTimeout(() => {\n        interval = setInterval(() => {\n          handler()\n        }, REPEAT_INTERVAL)\n      }, REPEAT_DELAY)\n    })\n  },\n}\n\nexport default RepeatClick\n"]},"metadata":{},"sourceType":"module"}