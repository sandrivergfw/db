{"version":3,"file":"logo-chrome-filled.js","sources":["../../src/components/logo-chrome-filled.tsx"],"sourcesContent":["import { computed, PropType, defineComponent } from 'vue';\nimport renderFn from '../utils/render-fn';\nimport {\n  TdIconSVGProps, SVGJson,\n} from '../utils/types';\nimport useSizeProps from '../utils/use-size-props';\n\nimport '../style/css';\n\nconst element: SVGJson = {\"tag\":\"svg\",\"attrs\":{\"fill\":\"none\",\"viewBox\":\"0 0 16 16\",\"width\":\"1em\",\"height\":\"1em\"},\"children\":[{\"tag\":\"path\",\"attrs\":{\"fill\":\"currentColor\",\"d\":\"M14.02 4.43a.11.11 0 01-.1.18H8.31 8.3L8 4.58a3.4 3.4 0 00-3.3 2.56.11.11 0 01-.21.03L2.52 3.76a.11.11 0 010-.12 6.97 6.97 0 019-1.7c1.03.6 1.9 1.47 2.5 2.5z\",\"fillOpacity\":0.9}},{\"tag\":\"path\",\"attrs\":{\"fill\":\"currentColor\",\"d\":\"M8 10.62a2.62 2.62 0 110-5.24 2.62 2.62 0 010 5.24z\",\"fillOpacity\":0.9}},{\"tag\":\"path\",\"attrs\":{\"fill\":\"currentColor\",\"d\":\"M9.03 11.33a.11.11 0 00-.12-.05 3.4 3.4 0 01-4-1.84L2.1 4.57a.11.11 0 00-.2 0 7 7 0 005.07 10.35c.04 0 .08-.02.1-.05l1.97-3.42a.11.11 0 000-.12z\",\"fillOpacity\":0.9}},{\"tag\":\"path\",\"attrs\":{\"fill\":\"currentColor\",\"d\":\"M10.46 5.37h3.95c.05 0 .1.03.1.07a6.97 6.97 0 01-1.53 7.48A6.96 6.96 0 018.08 15a.11.11 0 01-.1-.17l2.81-4.88h.01a3.38 3.38 0 00-.42-4.38.11.11 0 01.08-.2z\",\"fillOpacity\":0.9}}]};\n\nexport default defineComponent({\n  name: 'LogoChromeFilledIcon',\n  props: {\n    size: {\n      type: String,\n    },\n    onClick: {\n      type: Function as PropType<TdIconSVGProps['onClick']>,\n    },\n  },\n  setup(props, { attrs }) {\n    const propsSize = computed(() => props.size);\n\n    const { className, style } = useSizeProps(propsSize);\n\n    const finalCls = computed(() => ['t-icon', 't-icon-logo-chrome-filled', className.value]);\n    const finalStyle = computed(() => ({ ...style.value, ...(attrs.style as Styles) }));\n    const finalProps = computed(() => ({\n      class: finalCls.value,\n      style: finalStyle.value,\n      onClick: (e:MouseEvent) => props.onClick?.({ e }),\n    }));\n    return () => renderFn(element, finalProps.value);\n  },\n\n});\n"],"names":["element","defineComponent","name","props","size","type","String","onClick","Function","setup","attrs","propsSize","computed","className","style","useSizeProps","finalCls","value","finalStyle","finalProps","class","e","renderFn"],"mappings":";;;;;;;;;;;AASA,IAAMA,UAAmB;AAAC,SAAM,KAAP;AAAa,WAAQ;AAAC,YAAO,MAAR;AAAe,eAAU,WAAzB;AAAqC,aAAQ,KAA7C;AAAmD,cAAS;AAA5D,GAArB;AAAwF,cAAW,CAAC;AAAC,WAAM,MAAP;AAAc,aAAQ;AAAC,cAAO,cAAR;AAAuB,WAAI,+JAA3B;AAA2L,qBAAc;AAAzM;AAAtB,GAAD,EAAsO;AAAC,WAAM,MAAP;AAAc,aAAQ;AAAC,cAAO,cAAR;AAAuB,WAAI,qDAA3B;AAAiF,qBAAc;AAA/F;AAAtB,GAAtO,EAAiW;AAAC,WAAM,MAAP;AAAc,aAAQ;AAAC,cAAO,cAAR;AAAuB,WAAI,kJAA3B;AAA8K,qBAAc;AAA5L;AAAtB,GAAjW,EAAyjB;AAAC,WAAM,MAAP;AAAc,aAAQ;AAAC,cAAO,cAAR;AAAuB,WAAI,6JAA3B;AAAyL,qBAAc;AAAvM;AAAtB,GAAzjB;AAAnG,CAAzB;AAEA,uBAAeC,gBAAgB;AAC7BC,EAAAA,MAAM,sBADuB;AAE7BC,EAAAA,OAAO;AACLC,IAAAA,MAAM;AACJC,MAAAA,MAAMC;AADF,KADD;AAILC,IAAAA,SAAS;AACPF,MAAAA,MAAMG;AADC;AAJJ,GAFsB;;AAU7BC,EAAAA,MAAMN,aAAkB;AAAA,QAAX;AAAEO,MAAAA;AAAF,KAAW;QAChBC,YAAYC,SAAS,MAAMT,MAAMC;QAEjC;AAAES,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAuBC,aAAaJ;QAEpCK,WAAWJ,SAAS,MAAM,CAAC,QAAD,EAAW,2BAAX,EAAwCC,UAAUI,KAAlD;QAC1BC,aAAaN,SAAS,sCAAYE,MAAMG,KAAlB,GAA6BP,MAAMI,KAAnC;QACtBK,aAAaP,SAAS;AAC1BQ,MAAAA,OAAOJ,SAASC;AAChBH,MAAAA,OAAOI,WAAWD;AAClBV,MAAAA,SAAUc,CAAD;AAAA;;AAAA,iCAAkBlB,MAAMI,OAAxB,mDAAkB,oBAAAJ,OAAgB;AAAEkB,UAAAA;AAAF,UAAlC;AAAA;KAHiB;WAKrB,MAAMC,SAAStB,SAASmB,WAAWF;;;AAtBf,EAA/B;;;;"}