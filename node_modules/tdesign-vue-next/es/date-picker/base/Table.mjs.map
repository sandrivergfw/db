{"version":3,"file":"Table.mjs","sources":["../../../src/date-picker/base/Table.tsx"],"sourcesContent":["import { defineComponent, PropType, computed } from 'vue';\nimport TDatePickerCell from './Cell';\nimport { useConfig, usePrefixClass } from '../../hooks/useConfig';\nimport type { TdDatePickerProps } from '../type';\nimport { parseToDayjs } from '../../_common/js/date-picker/format';\n\nexport default defineComponent({\n  name: 'TDatePickerTable',\n  props: {\n    mode: {\n      type: String as PropType<TdDatePickerProps['mode']>,\n      default: 'date',\n    },\n    value: [String, Number, Array, Date],\n    format: String,\n    firstDayOfWeek: Number,\n    data: Array,\n    time: String,\n    onCellClick: Function,\n    onCellMouseEnter: Function,\n    onCellMouseLeave: Function,\n  },\n  setup(props) {\n    const COMPONENT_NAME = usePrefixClass('date-picker__table');\n    const { globalConfig } = useConfig('datePicker');\n    const { weekdays, weekAbbreviation } = globalConfig.value;\n\n    const weekArr = computed(() => {\n      const _weekArr = [];\n      let wi = props.firstDayOfWeek - 1;\n      const len = weekdays.length;\n      while (_weekArr.length < len) {\n        _weekArr.push(weekdays[wi]);\n        wi = (wi + len + 1) % len;\n      }\n\n      if (props.mode === 'week') _weekArr.unshift(weekAbbreviation);\n\n      return _weekArr;\n    });\n\n    const showThead = computed(() => props.mode === 'date' || props.mode === 'week');\n\n    // 高亮周区间\n    const weekRowClass = (value: any, format: string, targetValue: Date) => {\n      if (props.mode !== 'week') return {};\n\n      if (Array.isArray(value)) {\n        if (!value.length) return {};\n        const [startObj, endObj] = value.map((v) => v && parseToDayjs(v, format));\n        const startYear = startObj && startObj.year();\n        const startWeek = startObj && startObj.week();\n        const endYear = endObj && endObj.year();\n        const endWeek = endObj && endObj.week();\n\n        const targetObj = parseToDayjs(targetValue, format);\n        const targetYear = targetObj.year();\n        const targetWeek = targetObj.week();\n        const isActive =\n          (targetYear === startYear && targetWeek === startWeek) || (targetYear === endYear && targetWeek === endWeek);\n        const isRange =\n          targetYear >= startYear && targetYear <= endYear && targetWeek > startWeek && targetWeek < endWeek;\n        return {\n          // 同年同周\n          [`${COMPONENT_NAME.value}-${props.mode}-row--active`]: isActive,\n          [`${COMPONENT_NAME.value}-${props.mode}-row--range`]: isRange,\n        };\n      }\n\n      return {\n        [`${COMPONENT_NAME.value}-${props.mode}-row--active`]:\n          parseToDayjs(value, format).week() === parseToDayjs(targetValue, format).week(),\n      };\n    };\n\n    return () => (\n      <div class={COMPONENT_NAME.value} onMouseleave={(e: MouseEvent) => props.onCellMouseLeave?.({ e })}>\n        <table>\n          {showThead.value && (\n            <thead>\n              <tr>\n                {weekArr.value.map((value: string, i: number) => (\n                  <th key={i}>{value}</th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody>\n            {props.data.map((row: Array<any>, i: number) => (\n              <tr\n                key={i}\n                class={{\n                  [`${COMPONENT_NAME.value}-${props.mode}-row`]: true,\n                  ...weekRowClass(props.value, props.format, row[0].value),\n                }}\n              >\n                {row.map((col: any, j: number) => (\n                  <TDatePickerCell\n                    {...col}\n                    key={j}\n                    time={props.time}\n                    onClick={props.onCellClick}\n                    onMouseEnter={props.onCellMouseEnter}\n                  />\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","mode","type","String","value","Number","Array","Date","format","firstDayOfWeek","data","time","onCellClick","Function","onCellMouseEnter","onCellMouseLeave","setup","COMPONENT_NAME","usePrefixClass","useConfig","globalConfig","weekdays","weekAbbreviation","weekArr","computed","_weekArr","wi","len","length","push","unshift","showThead","weekRowClass","targetValue","isArray","map","v","parseToDayjs","startObj","endObj","startYear","year","startWeek","week","endYear","endWeek","targetObj","targetYear","targetWeek","isActive","isRange","_createVNode","e","i","row","col","j"],"mappings":"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"}