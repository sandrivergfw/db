{"version":3,"file":"Header.mjs","sources":["../../../src/date-picker/base/Header.tsx"],"sourcesContent":["import { defineComponent, PropType, ref, computed } from 'vue';\nimport TJumper, { JumperTrigger } from '../../jumper';\nimport TSelect from '../../select/select';\nimport { useConfig, usePrefixClass } from '../../hooks/useConfig';\nimport type { TdDatePickerProps } from '../type';\n\nexport default defineComponent({\n  name: 'TDatePickerHeader',\n  props: {\n    mode: {\n      type: String as PropType<TdDatePickerProps['mode']>,\n      default: 'date',\n    },\n    year: Number,\n    month: Number,\n    onMonthChange: Function,\n    onYearChange: Function,\n    onJumperClick: Function as PropType<(context: { e: MouseEvent; trigger: JumperTrigger }) => {}>,\n  },\n  setup(props) {\n    const { classPrefix } = useConfig('classPrefix');\n    const COMPONENT_NAME = usePrefixClass('date-picker__header');\n    const { globalConfig } = useConfig('datePicker');\n\n    const yearOptions = ref(initOptions(props.year));\n    const showMonthPicker = props.mode === 'date' || props.mode === 'week';\n\n    // 年份选择展示区间\n    const nearestYear = computed(\n      () =>\n        yearOptions.value.find((option) => option.value - props.year <= 9 && option.value - props.year >= 0)?.value ||\n        props.year,\n    );\n\n    const monthOptions = computed(() =>\n      globalConfig.value.months.map((item: string, index: number) => ({ label: item, value: index })),\n    );\n\n    function initOptions(year: number) {\n      const options = [];\n      if (props.mode === 'year') {\n        const extraYear = year % 10;\n        const minYear = year - extraYear - 100;\n        const maxYear = year - extraYear + 100;\n\n        for (let i = minYear; i <= maxYear; i += 10) {\n          options.push({ label: `${i} - ${i + 9}`, value: i + extraYear });\n        }\n      } else {\n        options.push({ label: `${year}`, value: year });\n\n        for (let i = 1; i <= 10; i++) {\n          options.push({ label: `${year + i}`, value: year + i });\n          options.unshift({ label: `${year - i}`, value: year - i });\n        }\n      }\n\n      return options;\n    }\n\n    function loadMoreYear(year: number, type?: 'add' | 'reduce') {\n      const options = [];\n      if (props.mode === 'year') {\n        const extraYear = year % 10;\n        if (type === 'add') {\n          for (let i = year - extraYear + 10; i <= year - extraYear + 50; i += 10) {\n            options.push({ label: `${i} - ${i + 9}`, value: i });\n          }\n        } else {\n          for (let i = year - extraYear - 1; i > year - extraYear - 50; i -= 10) {\n            options.unshift({ label: `${i - 9} - ${i}`, value: i });\n          }\n        }\n      } else if (type === 'add') {\n        for (let i = year + 1; i <= year + 10; i++) {\n          options.push({ label: `${i}`, value: i });\n        }\n      } else {\n        for (let i = year - 1; i > year - 10; i--) {\n          options.unshift({ label: `${i}`, value: i });\n        }\n      }\n\n      return options;\n    }\n\n    // hover title\n    const labelMap = {\n      year: {\n        prev: globalConfig.value.preDecade,\n        current: globalConfig.value.now,\n        next: globalConfig.value.nextDecade,\n      },\n      month: {\n        prev: globalConfig.value.preYear,\n        current: globalConfig.value.now,\n        next: globalConfig.value.nextYear,\n      },\n      date: {\n        prev: globalConfig.value.preMonth,\n        current: globalConfig.value.now,\n        next: globalConfig.value.nextMonth,\n      },\n    };\n\n    // 滚动顶部底部自动加载\n    function handleScroll({ e }: any) {\n      if (e.target.scrollTop === 0) {\n        handlePanelTopClick(e);\n      } else if (e.target.scrollTop === e.target.scrollHeight - e.target.clientHeight) {\n        handlePanelBottomClick(e);\n      }\n    }\n\n    function handlePanelTopClick(e: MouseEvent) {\n      e?.stopPropagation?.();\n\n      const firstYear = yearOptions.value[0].value;\n      const options = loadMoreYear(firstYear, 'reduce');\n      yearOptions.value = [...options, ...yearOptions.value];\n    }\n\n    function handlePanelBottomClick(e: MouseEvent) {\n      e?.stopPropagation?.();\n\n      const lastYear = yearOptions.value.slice(-1)[0].value;\n      const options = loadMoreYear(lastYear, 'add');\n      yearOptions.value = [...yearOptions.value, ...options];\n    }\n\n    return () => (\n      <div class={COMPONENT_NAME.value}>\n        <div class={`${COMPONENT_NAME.value}-controller`}>\n          {showMonthPicker && (\n            <TSelect\n              class={`${COMPONENT_NAME.value}-controller-month`}\n              value={props.month}\n              options={monthOptions.value}\n              onChange={(val: number) => props.onMonthChange?.(val)}\n              popupProps={{\n                attach: (triggerElement: HTMLElement) => triggerElement.parentNode,\n                overlayClassName: `${COMPONENT_NAME.value}-controller-month-popup`,\n              }}\n            />\n          )}\n          <TSelect\n            class={`${COMPONENT_NAME.value}-controller-year`}\n            value={props.mode === 'year' ? nearestYear.value : props.year}\n            options={yearOptions.value}\n            onChange={(val: number) => props.onYearChange?.(val)}\n            popupProps={{\n              onScroll: handleScroll,\n              attach: (triggerElement: HTMLElement) => triggerElement.parentNode,\n              overlayClassName: `${COMPONENT_NAME.value}-controller-year-popup`,\n            }}\n            panelTopContent={() => (\n              <div class={`${classPrefix.value}-select-option`} onClick={handlePanelTopClick}>\n                ...\n              </div>\n            )}\n            panelBottomContent={() => (\n              <div class={`${classPrefix.value}-select-option`} onClick={handlePanelBottomClick}>\n                ...\n              </div>\n            )}\n          />\n        </div>\n\n        <TJumper tips={labelMap[props.mode]} size=\"small\" onChange={props.onJumperClick} />\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","mode","type","String","year","Number","month","onMonthChange","Function","onYearChange","onJumperClick","setup","useConfig","classPrefix","COMPONENT_NAME","usePrefixClass","globalConfig","yearOptions","ref","initOptions","showMonthPicker","nearestYear","computed","value","find","option","monthOptions","months","map","item","index","label","options","extraYear","minYear","maxYear","i","push","unshift","loadMoreYear","labelMap","prev","preDecade","current","now","next","nextDecade","preYear","nextYear","date","preMonth","nextMonth","handleScroll","e","target","scrollTop","handlePanelTopClick","scrollHeight","clientHeight","handlePanelBottomClick","stopPropagation","firstYear","lastYear","slice","_createVNode","val","attach","triggerElement","parentNode","overlayClassName","onScroll","_createTextVNode","TJumper"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,kBAAeA,eAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,mBAAA;AACNC,EAAAA,KAAO,EAAA;AACLC,IAAAA,IAAM,EAAA;AACJC,MAAAA,IAAM,EAAAC,MAAA;MACN,SAAS,EAAA,MAAA;KACX;AACAC,IAAAA,IAAM,EAAAC,MAAA;AACNC,IAAAA,KAAO,EAAAD,MAAA;AACPE,IAAAA,aAAe,EAAAC,QAAA;AACfC,IAAAA,YAAc,EAAAD,QAAA;AACdE,IAAAA,aAAe,EAAAF,QAAAA;GACjB;EACAG,sBAAMX,KAAO,EAAA;IACX,IAAwBY,UAAAA,GAAAA,SAAA,CAAU,aAAa,CAAA;AAAvCC,MAAAA,WAAA,cAAAA,WAAA,CAAA;AACF,IAAA,IAAAC,cAAA,GAAiBC,eAAe,qBAAqB,CAAA,CAAA;IAC3D,IAAyBH,WAAAA,GAAAA,SAAA,CAAU,YAAY,CAAA;AAAvCI,MAAAA,YAAA,eAAAA,YAAA,CAAA;IAER,IAAMC,WAAc,GAAAC,GAAA,CAAIC,WAAY,CAAAnB,KAAA,CAAMI,IAAI,CAAC,CAAA,CAAA;AAC/C,IAAA,IAAMgB,eAAkB,GAAApB,KAAA,CAAMC,IAAS,KAAA,MAAA,IAAUD,MAAMC,IAAS,KAAA,MAAA,CAAA;IAGhE,IAAMoB,WAAc,GAAAC,QAAA,CAClB,YAAA;AAAA,MAAA,IAAA,qBAAA,CAAA;MAAA,OACE,CAAA,CAAA,qBAAA,GAAAL,WAAY,CAAAM,KAAA,CAAMC,KAAK,UAACC,MAAA,EAAA;AAAA,QAAA,OAAWA,OAAOF,KAAQ,GAAAvB,KAAA,CAAMI,IAAQ,IAAA,CAAA,IAAKqB,OAAOF,KAAQ,GAAAvB,KAAA,CAAMI,QAAQ,CAAC,CAAA;AAAA,OAAA,CAAA,0DAAnG,qBAAsGmB,CAAAA,UACtGvB,KAAM,CAAAI,IAAA,CAAA;KACV,CAAA,CAAA;IAEA,IAAMsB,YAAe,GAAAJ,QAAA,CAAS,YAAA;MAAA,OAC5BN,YAAA,CAAaO,KAAM,CAAAI,MAAA,CAAOC,GAAI,CAAA,UAACC,IAAc,EAAAC,KAAA,EAAA;QAAA,OAAmB;AAAEC,UAAAA,KAAA,EAAOF,IAAM;AAAAN,UAAAA,KAAA,EAAOO,KAAAA;SAAQ,CAAA;AAAA,OAAA,CAAA,CAAA;KAChG,CAAA,CAAA;IAEA,SAASX,YAAYf,IAAc,EAAA;MACjC,IAAM4B,UAAU,EAAC,CAAA;AACb,MAAA,IAAAhC,KAAA,CAAMC,SAAS,MAAQ,EAAA;AACzB,QAAA,IAAMgC,YAAY7B,IAAO,GAAA,EAAA,CAAA;AACnB,QAAA,IAAA8B,OAAA,GAAU9B,OAAO6B,SAAY,GAAA,GAAA,CAAA;AAC7B,QAAA,IAAAE,OAAA,GAAU/B,OAAO6B,SAAY,GAAA,GAAA,CAAA;AAEnC,QAAA,KAAA,IAASG,CAAI,GAAAF,OAAA,EAASE,CAAK,IAAAD,OAAA,EAASC,KAAK,EAAI,EAAA;UACnCJ,OAAA,CAAAK,IAAA,CAAK;AAAEN,YAAAA,KAAA,YAAUK,CAAA,EAAA,KAAA,CAAA,CAAA,MAAA,CAAOA,IAAI,CAAK,CAAA;YAAAb,KAAA,EAAOa,CAAI,GAAAH,SAAAA;AAAU,WAAC,CAAA,CAAA;AACjE,SAAA;AACF,OAAO,MAAA;QACLD,OAAA,CAAQK,KAAK;UAAEN,KAAA,EAAA,EAAA,CAAA,MAAA,CAAU3B,IAAQ,CAAA;AAAAmB,UAAAA,KAAA,EAAOnB,IAAAA;AAAK,SAAC,CAAA,CAAA;QAE9C,KAAA,IAASgC,EAAI,GAAA,CAAA,EAAGA,EAAK,IAAA,EAAA,EAAIA,EAAK,EAAA,EAAA;UACpBJ,OAAA,CAAAK,IAAA,CAAK;AAAEN,YAAAA,KAAO,EAAG3B,EAAAA,CAAAA,MAAAA,CAAAA,OAAOgC,EAAK,CAAA;YAAAb,KAAA,EAAOnB,IAAO,GAAAgC,EAAAA;AAAE,WAAC,CAAA,CAAA;UAC9CJ,OAAA,CAAAM,OAAA,CAAQ;AAAEP,YAAAA,KAAO,EAAG3B,EAAAA,CAAAA,MAAAA,CAAAA,OAAOgC,EAAK,CAAA;YAAAb,KAAA,EAAOnB,IAAO,GAAAgC,EAAAA;AAAE,WAAC,CAAA,CAAA;AAC3D,SAAA;AACF,OAAA;AAEO,MAAA,OAAAJ,OAAA,CAAA;AACT,KAAA;AAES,IAAA,SAAAO,YAAA,CAAanC,MAAcF,IAAyB,EAAA;MAC3D,IAAM8B,UAAU,EAAC,CAAA;AACb,MAAA,IAAAhC,KAAA,CAAMC,SAAS,MAAQ,EAAA;AACzB,QAAA,IAAMgC,YAAY7B,IAAO,GAAA,EAAA,CAAA;QACzB,IAAIF,SAAS,KAAO,EAAA;UACT,KAAA,IAAAkC,CAAA,GAAIhC,OAAO6B,SAAY,GAAA,EAAA,EAAIG,KAAKhC,IAAO,GAAA6B,SAAA,GAAY,EAAI,EAAAG,CAAA,IAAK,EAAI,EAAA;YAC/DJ,OAAA,CAAAK,IAAA,CAAK;AAAEN,cAAAA,KAAO,YAAGK,iBAAOA,CAAI,GAAA,CAAA,CAAA;AAAKb,cAAAA,KAAO,EAAAa,CAAAA;AAAE,aAAC,CAAA,CAAA;AACrD,WAAA;AACF,SAAO,MAAA;UACI,KAAA,IAAAA,GAAA,GAAIhC,OAAO6B,SAAY,GAAA,CAAA,EAAGG,MAAIhC,IAAO,GAAA6B,SAAA,GAAY,EAAI,EAAAG,GAAA,IAAK,EAAI,EAAA;YAC7DJ,OAAA,CAAAM,OAAA,CAAQ;AAAEP,cAAAA,KAAO,YAAGK,MAAI,CAAO,EAAA,KAAA,CAAA,CAAA,MAAA,CAAAA,GAAA,CAAA;AAAKb,cAAAA,KAAO,EAAAa,GAAAA;AAAE,aAAC,CAAA,CAAA;AACxD,WAAA;AACF,SAAA;AACF,OAAA,MAAA,IAAWlC,SAAS,KAAO,EAAA;AACzB,QAAA,KAAA,IAASkC,MAAIhC,IAAO,GAAA,CAAA,EAAGgC,GAAK,IAAAhC,IAAA,GAAO,IAAIgC,GAAK,EAAA,EAAA;UAC1CJ,OAAA,CAAQK,KAAK;YAAEN,KAAA,EAAA,EAAA,CAAA,MAAA,CAAUK,GAAK,CAAA;AAAAb,YAAAA,KAAA,EAAOa,GAAAA;AAAE,WAAC,CAAA,CAAA;AAC1C,SAAA;AACF,OAAO,MAAA;AACL,QAAA,KAAA,IAASA,MAAIhC,IAAO,GAAA,CAAA,EAAGgC,GAAI,GAAAhC,IAAA,GAAO,IAAIgC,GAAK,EAAA,EAAA;UACzCJ,OAAA,CAAQM,QAAQ;YAAEP,KAAA,EAAA,EAAA,CAAA,MAAA,CAAUK,GAAK,CAAA;AAAAb,YAAAA,KAAA,EAAOa,GAAAA;AAAE,WAAC,CAAA,CAAA;AAC7C,SAAA;AACF,OAAA;AAEO,MAAA,OAAAJ,OAAA,CAAA;AACT,KAAA;AAGA,IAAA,IAAMQ,QAAW,GAAA;AACfpC,MAAAA,IAAM,EAAA;AACJqC,QAAAA,IAAA,EAAMzB,aAAaO,KAAM,CAAAmB,SAAA;AACzBC,QAAAA,OAAA,EAAS3B,aAAaO,KAAM,CAAAqB,GAAA;AAC5BC,QAAAA,IAAA,EAAM7B,aAAaO,KAAM,CAAAuB,UAAAA;OAC3B;AACAxC,MAAAA,KAAO,EAAA;AACLmC,QAAAA,IAAA,EAAMzB,aAAaO,KAAM,CAAAwB,OAAA;AACzBJ,QAAAA,OAAA,EAAS3B,aAAaO,KAAM,CAAAqB,GAAA;AAC5BC,QAAAA,IAAA,EAAM7B,aAAaO,KAAM,CAAAyB,QAAAA;OAC3B;AACAC,MAAAA,IAAM,EAAA;AACJR,QAAAA,IAAA,EAAMzB,aAAaO,KAAM,CAAA2B,QAAA;AACzBP,QAAAA,OAAA,EAAS3B,aAAaO,KAAM,CAAAqB,GAAA;AAC5BC,QAAAA,IAAA,EAAM7B,aAAaO,KAAM,CAAA4B,SAAAA;AAC3B,OAAA;KACF,CAAA;AAGS,IAAA,SAAAC,YAAA,CAAyB,IAAA,EAAA;MAAA,IAAVC,CAAA,QAAAA,CAAA,CAAA;AAClB,MAAA,IAAAA,CAAA,CAAEC,MAAO,CAAAC,SAAA,KAAc,CAAG,EAAA;QAC5BC,mBAAA,CAAoBH,CAAC,CAAA,CAAA;AACvB,OAAA,MAAA,IAAWA,EAAEC,MAAO,CAAAC,SAAA,KAAcF,EAAEC,MAAO,CAAAG,YAAA,GAAeJ,CAAE,CAAAC,MAAA,CAAOI,YAAc,EAAA;QAC/EC,sBAAA,CAAuBN,CAAC,CAAA,CAAA;AAC1B,OAAA;AACF,KAAA;IAEA,SAASG,oBAAoBH,CAAe,EAAA;AAAA,MAAA,IAAA,kBAAA,CAAA;MAC1CA,CAAA,KAAA,IAAA,IAAAA,CAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAAA,kBAAAA,GAAAA,CAAA,CAAGO,eAAkB,MAAA,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAArB,kBAAAP,CAAAA,IAAAA,CAAAA,CAAA,CAAqB,CAAA;MAEf,IAAAQ,SAAA,GAAY5C,WAAY,CAAAM,KAAA,CAAM,CAAG,CAAA,CAAAA,KAAA,CAAA;AACjC,MAAA,IAAAS,OAAA,GAAUO,YAAa,CAAAsB,SAAA,EAAW,QAAQ,CAAA,CAAA;MAChD5C,WAAA,CAAYM,QAAYS,EAAAA,CAAAA,MAAAA,CAAAA,kBAAAA,CAAAA,OAAS,sBAAGf,YAAYM,KAAK,CAAA,CAAA,CAAA;AACvD,KAAA;IAEA,SAASoC,uBAAuBN,CAAe,EAAA;AAAA,MAAA,IAAA,mBAAA,CAAA;MAC7CA,CAAA,KAAA,IAAA,IAAAA,CAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAAA,mBAAAA,GAAAA,CAAA,CAAGO,eAAkB,MAAA,IAAA,IAAA,mBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAArB,mBAAAP,CAAAA,IAAAA,CAAAA,CAAA,CAAqB,CAAA;AAErB,MAAA,IAAMS,WAAW7C,WAAY,CAAAM,KAAA,CAAMwC,KAAM,CAAA,CAAA,CAAE,EAAE,CAAG,CAAA,CAAAxC,KAAA,CAAA;AAC1C,MAAA,IAAAS,OAAA,GAAUO,YAAa,CAAAuB,QAAA,EAAU,KAAK,CAAA,CAAA;MAC5C7C,WAAA,CAAYM,QAAYN,EAAAA,CAAAA,MAAAA,CAAAA,kBAAAA,CAAAA,WAAY,CAAAM,KAAA,CAAA,EAAA,kBAAA,CAAUS,OAAO,CAAA,CAAA,CAAA;AACvD,KAAA;IAEA,OAAO,YAAA;AAAA,MAAA,OAAAgC,WAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EACOlD,cAAe,CAAAS,KAAAA;AAAA,OAAA,EAAA,CAAAyC,WAAA,CAAA,KAAA,EAAA;QAAA,OACVlD,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,cAAe,CAAAS,KAAA,EAAA,aAAA,CAAA;AAAA,OAAA,EAAA,CAC3BH,eAAA,IAAA4C,WAAA,CAAA,OAAA,EAAA;QAAA,OAEalD,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,cAAe,CAAAS,KAAA,EAAA,mBAAA,CAAA;QAAA,OAClBvB,EAAAA,KAAM,CAAAM,KAAA;QAAA,SACJoB,EAAAA,YAAa,CAAAH,KAAA;AAAA,QAAA,UAAA,EACZ,kBAAC0C,GAAA,EAAA;AAAA,UAAA,IAAA,oBAAA,CAAA;UAAA,OAAgBjE,CAAAA,oBAAAA,GAAAA,MAAMO,aAAgB,MAAA,IAAA,IAAA,oBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAtB,0BAAAP,OAAsBiE,GAAG;;oBACxC,EAAA;UACVC,MAAA,EAAQ,gBAACC,cAAA,EAAA;YAAA,OAAgCA,cAAe,CAAAC,UAAA,CAAA;AAAA,WAAA;UACxDC,gBAAA,EAAA,EAAA,CAAA,MAAA,CAAqBvD,cAAe,CAAAS,KAAA,EAAA,yBAAA,CAAA;AACtC,SAAA;OACF,EAAA,IAAA,CAAA,EAAAyC,WAAA,CAAA,OAAA,EAAA;QAAA,OAGUlD,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,cAAA,CAAeS;iBAClBvB,KAAA,CAAMC,IAAS,KAAA,MAAA,GAASoB,WAAY,CAAAE,KAAA,GAAQvB,MAAMI,IACzD;QAAA,SAASa,EAAAA,WAAY,CAAAM,KAAA;AAAA,QAAA,UAAA,EACX,kBAAC0C;;iBAAgBjE,CAAAA,mBAAAA,GAAAA,KAAM,CAAAS,YAAA,MAAA,IAAA,IAAA,mBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,yBAAAT,KAAM,EAAeiE,GAAG,CAAA,CAAA;AAAA,SAAA;QAAA,YACvC,EAAA;AACVK,UAAAA,QAAU,EAAAlB,YAAA;UACVc,MAAA,EAAQ,gBAACC,cAAA,EAAA;YAAA,OAAgCA,cAAe,CAAAC,UAAA,CAAA;AAAA,WAAA;UACxDC,gBAAA,EAAA,EAAA,CAAA,MAAA,CAAqBvD,cAAe,CAAAS,KAAA,EAAA,wBAAA,CAAA;SACtC;QAAA,iBACiB,EAAA,SAAA,eAAA,GAAA;AAAA,UAAA,OAAAyC,WAAA,CAAA,KAAA,EAAA;YAAA,OACAnD,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,WAAY,CAAAU,KAAA,EAAA,gBAAA,CAAA;YAAA,SAAgCiC,EAAAA,mBAAAA;AAAA,WAAA,EAAA,CAAAe,eAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA;;4BAIzC,EAAA,SAAA,kBAAA,GAAA;AAAA,UAAA,OAAAP,WAAA,CAAA,KAAA,EAAA;YAAA,OACHnD,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,WAAY,CAAAU,KAAA,EAAA,gBAAA,CAAA;YAAA,SAAgCoC,EAAAA,sBAAAA;AAAA,WAAA,EAAA,CAAAY,eAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AAAA,SAAA;AAI/D,OAAA,EAAA,IAAA,CAAA,CAAA,CAAA,EAAAP,WAAA,CAAAQ,MAAA,EAAA;AAAA,QAAA,MAAA,EAGahC,QAAS,CAAAxC,KAAA,CAAMC;gBAAY,OAAA;AAAA,QAAA,UAAA,EAAkBD,KAAA,CAAMU,aAAAA;AAAe,OAAA,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA;KArClF,CAAA;AAwCL,GAAA;AACF,CAAC,CAAA;;;;"}