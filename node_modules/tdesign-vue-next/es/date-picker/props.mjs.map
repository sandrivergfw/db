{"version":3,"file":"props.mjs","sources":["../../src/date-picker/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdDatePickerProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 是否允许输入日期 */\n  allowInput: Boolean,\n  /** 是否显示清除按钮 */\n  clearable: Boolean,\n  /** 禁用日期，示例：['A', 'B'] 表示日期 A 和日期 B 会被禁用。`{ from: 'A', to: 'B' }` 表示在 A 到 B 之间的日期会被禁用。`{ before: 'A', after: 'B' }` 表示在 A 之前和在 B 之后的日期都会被禁用。其中 A = '2021-01-01'，B = '2021-02-01'。值类型为 Function 则表示返回值为 true 的日期会被禁用 */\n  disableDate: {\n    type: [Object, Array, Function] as PropType<TdDatePickerProps['disableDate']>,\n  },\n  /** 是否禁用组件 */\n  disabled: Boolean,\n  /** 是否显示时间选择 */\n  enableTimePicker: Boolean,\n  /** 第一天从星期几开始 */\n  firstDayOfWeek: {\n    type: Number,\n    validator(val: TdDatePickerProps['firstDayOfWeek']): boolean {\n      if (!val) return true;\n      return [1, 2, 3, 4, 5, 6, 7].includes(val);\n    },\n  },\n  /** 仅用于格式化日期显示的格式，不影响日期值。注意和 `valueType` 的区别，`valueType`会直接决定日期值 `value` 的格式。全局配置默认为：'YYYY-MM-DD'，[详细文档](https://day.js.org/docs/en/display/format) */\n  format: {\n    type: String,\n    default: undefined,\n  },\n  /** 透传给输入框（Input）组件的参数 */\n  inputProps: {\n    type: Object as PropType<TdDatePickerProps['inputProps']>,\n  },\n  /** 选择器模式 */\n  mode: {\n    type: String as PropType<TdDatePickerProps['mode']>,\n    default: 'date' as TdDatePickerProps['mode'],\n    validator(val: TdDatePickerProps['mode']): boolean {\n      if (!val) return true;\n      return ['year', 'quarter', 'month', 'week', 'date'].includes(val);\n    },\n  },\n  /** 占位符 */\n  placeholder: {\n    type: [String, Array] as PropType<TdDatePickerProps['placeholder']>,\n    default: undefined,\n  },\n  /** 透传给 popup 组件的参数 */\n  popupProps: {\n    type: Object as PropType<TdDatePickerProps['popupProps']>,\n  },\n  /** 用于自定义组件前置图标 */\n  prefixIcon: {\n    type: Function as PropType<TdDatePickerProps['prefixIcon']>,\n  },\n  /** 预设快捷日期选择，示例：`{ '元旦': '2021-01-01', '昨天':  dayjs().subtract(1, 'day').format('YYYY-MM-DD'), '特定日期': () => ['2021-02-01'] }` */\n  presets: {\n    type: Object as PropType<TdDatePickerProps['presets']>,\n  },\n  /** 预设面板展示区域（包含确定按钮） */\n  presetsPlacement: {\n    type: String as PropType<TdDatePickerProps['presetsPlacement']>,\n    default: 'bottom' as TdDatePickerProps['presetsPlacement'],\n    validator(val: TdDatePickerProps['presetsPlacement']): boolean {\n      if (!val) return true;\n      return ['left', 'top', 'right', 'bottom'].includes(val);\n    },\n  },\n  /** 输入框状态 */\n  status: {\n    type: String as PropType<TdDatePickerProps['status']>,\n    validator(val: TdDatePickerProps['status']): boolean {\n      if (!val) return true;\n      return ['default', 'success', 'warning', 'error'].includes(val);\n    },\n  },\n  /** 用于自定义组件后置图标 */\n  suffixIcon: {\n    type: Function as PropType<TdDatePickerProps['suffixIcon']>,\n  },\n  /** 透传 TimePicker 组件属性 */\n  timePickerProps: {\n    type: Object as PropType<TdDatePickerProps['timePickerProps']>,\n  },\n  /** 输入框下方提示文本，会根据不同的 `status` 呈现不同的样式 */\n  tips: {\n    type: [String, Function] as PropType<TdDatePickerProps['tips']>,\n  },\n  /** 选中值 */\n  value: {\n    type: [String, Number, Array, Date] as PropType<TdDatePickerProps['value']>,\n    default: undefined,\n  },\n  modelValue: {\n    type: [String, Number, Array, Date] as PropType<TdDatePickerProps['value']>,\n    default: undefined,\n  },\n  /** 选中值，非受控属性 */\n  defaultValue: {\n    type: [String, Number, Array, Date] as PropType<TdDatePickerProps['defaultValue']>,\n    default: '',\n  },\n  /** 用于格式化日期的值，仅支持部分格式，时间戳、日期等。⚠️ `YYYYMMDD` 这种格式不支持，请勿使用，如果希望支持可以给 `dayjs` 提个 PR。注意和 `format` 的区别，`format` 仅用于处理日期在页面中呈现的格式 */\n  valueType: {\n    type: String as PropType<TdDatePickerProps['valueType']>,\n    validator(val: TdDatePickerProps['valueType']): boolean {\n      if (!val) return true;\n      return [\n        'time-stamp',\n        'Date',\n        'YYYY',\n        'YYYY-MM',\n        'YYYY-MM-DD',\n        'YYYY-MM-DD HH',\n        'YYYY-MM-DD HH:mm',\n        'YYYY-MM-DD HH:mm:ss',\n        'YYYY-MM-DD HH:mm:ss:SSS',\n      ].includes(val);\n    },\n  },\n  /** 当输入框失去焦点时触发 */\n  onBlur: Function as PropType<TdDatePickerProps['onBlur']>,\n  /** 选中值发生变化时触发 */\n  onChange: Function as PropType<TdDatePickerProps['onChange']>,\n  /** 输入框获得焦点时触发 */\n  onFocus: Function as PropType<TdDatePickerProps['onFocus']>,\n  /** 面板选中值后触发 */\n  onPick: Function as PropType<TdDatePickerProps['onPick']>,\n};\n"],"names":["allowInput","Boolean","clearable","disableDate","type","Object","Array","Function","disabled","enableTimePicker","firstDayOfWeek","Number","validator","val","includes","format","String","inputProps","mode","placeholder","popupProps","prefixIcon","presets","presetsPlacement","status","suffixIcon","timePickerProps","tips","value","Date","modelValue","defaultValue","valueType","onBlur","onChange","onFocus","onPick"],"mappings":"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"}