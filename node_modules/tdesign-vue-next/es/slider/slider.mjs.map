{"version":3,"file":"slider.mjs","sources":["../../src/slider/slider.tsx"],"sourcesContent":["import {\n  defineComponent,\n  VNode,\n  ref,\n  reactive,\n  provide,\n  computed,\n  onBeforeUnmount,\n  onMounted,\n  watch,\n  toRefs,\n} from 'vue';\nimport props from './props';\nimport TSliderButton from './slider-button';\nimport { SliderValue } from './type';\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { useSliderMark } from './hooks/useSliderMark';\nimport { useSliderInput } from './hooks/useSliderInput';\nimport { formatSliderValue, getStopStyle } from './util/common';\nimport { sliderPropsInjectKey } from './util/constants';\nimport useVModel from '../hooks/useVModel';\n\ninterface SliderButtonType {\n  setPosition: (param: number) => {};\n}\nexport default defineComponent({\n  name: 'TSlider',\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n  props: { ...props },\n\n  setup(props, ctx) {\n    const disabled = useFormDisabled();\n    const COMPONENT_NAME = usePrefixClass('slider');\n    const { STATUS } = useCommonClassName();\n    const { value, modelValue } = toRefs(props) as any;\n    const [sliderValue, setSliderValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n\n    const sliderContainerRef = ref<HTMLDivElement>();\n    const sliderRef = ref<HTMLDivElement>();\n    const firstButtonRef = ref<SliderButtonType>();\n    const secondButtonRef = ref<SliderButtonType>();\n\n    const firstValue = ref(formatSliderValue(sliderValue.value, 'first'));\n    const secondValue = ref(formatSliderValue(sliderValue.value, 'second'));\n    const dragging = ref(false);\n    const sliderSize = ref(1);\n\n    const vertical = computed(() => {\n      return props.layout === 'vertical';\n    });\n\n    /** ----------------- 样式计算 start ------------- */\n    const containerClass = computed(() => [`${COMPONENT_NAME.value}__container`, { 'is-vertical': vertical.value }]);\n    const sliderClass = computed(() => {\n      return [\n        `${COMPONENT_NAME.value}`,\n        {\n          'is-vertical': vertical.value,\n          [`${COMPONENT_NAME.value}--with-input`]: props.inputNumberProps,\n          [`${COMPONENT_NAME.value}--vertical`]: vertical.value,\n          [STATUS.value.disabled]: disabled.value,\n        },\n      ];\n    });\n    const sliderRailClass = computed(() => [\n      `${COMPONENT_NAME.value}__rail`,\n      { 'show-input': props.inputNumberProps, disabled: disabled.value },\n    ]);\n    const runwayStyle = computed(() => {\n      return vertical.value ? { height: '100%' } : {};\n    });\n    const barStyle = computed(() => {\n      const barStart = props.range ? `${(100 * (minValue.value - props.min)) / rangeDiff.value}%` : '0%';\n      const currentDiff = props.range ? maxValue.value - minValue.value : firstValue.value - props.min;\n      const barSize = `${(100 * currentDiff) / rangeDiff.value}%`;\n      return vertical.value\n        ? {\n            height: barSize,\n            bottom: barStart,\n          }\n        : {\n            width: barSize,\n            left: barStart,\n          };\n    });\n    /** ----------------- 样式计算 end ------------- */\n\n    // 差值范围\n    const rangeDiff = computed(() => {\n      return props.max - props.min;\n    });\n    const minValue = computed(() => {\n      return Math.min(firstValue.value, secondValue.value);\n    });\n    const maxValue = computed(() => {\n      return Math.max(firstValue.value, secondValue.value);\n    });\n    const steps = computed(() => {\n      if (!props.showStep || props.min > props.max) return [];\n      if (props.step === 0) {\n        console.warn('[Element Warn][Slider]step should not be 0.');\n        return [];\n      }\n      const stepCount = rangeDiff.value / props.step;\n      const stepWidth = (100 * props.step) / rangeDiff.value;\n      const result = [];\n      for (let i = 1; i < stepCount; i++) {\n        result.push(i * stepWidth);\n      }\n      if (props.range) {\n        const r = result.filter(\n          (step) =>\n            step < (100 * (minValue.value - props.min)) / rangeDiff.value ||\n            props.step > (100 * (maxValue.value - props.max)) / rangeDiff.value,\n        );\n        return r;\n      }\n      return result.filter((step) => step > (100 * (firstValue.value - props.min)) / rangeDiff.value);\n    });\n    const precision = computed(() => {\n      const precisions = [props.min, props.max, props.step].map((item) => {\n        const decimalArr = `${item}`.split('.');\n        return decimalArr[1] ? decimalArr[1].length : 0;\n      });\n      return Math.max.apply(null, precisions);\n    });\n    // 防止值越级\n    const setValues = (value: SliderValue): SliderValue => {\n      const [min, max] = [props.min, props.max];\n      if (min > max) {\n        console.warn('[Slider] max should be greater than min.');\n        return;\n      }\n      // 双向滑块\n      if (props.range && Array.isArray(value)) {\n        let [maxLimit, minLimit] = [Math.min(...value), Math.max(...value)];\n        if (maxLimit > max) {\n          maxLimit = firstValue.value;\n        }\n        if (maxLimit < min) {\n          maxLimit = min;\n        }\n        if (minLimit < min) {\n          minLimit = secondValue.value;\n        }\n        if (minLimit > max) {\n          minLimit = max;\n        }\n        [firstValue.value, secondValue.value] = [maxLimit, minLimit];\n        return [maxLimit, minLimit];\n      }\n      let preValue = value;\n      if (preValue < min) {\n        preValue = min;\n      }\n      if (preValue > max) {\n        preValue = max;\n      }\n      return preValue;\n    };\n    // 只要触发修改就要有这个方法抛出change事件\n    const emitChange = (value: SliderValue) => {\n      let changeValue = value;\n      if (changeValue === undefined) {\n        if (props.range) {\n          changeValue = [firstValue.value, secondValue.value];\n        } else {\n          changeValue = firstValue.value;\n        }\n      }\n      const fixValue: SliderValue = setValues(changeValue);\n      setSliderValue(fixValue);\n    };\n\n    const resetSize = () => {\n      if (sliderRef.value) {\n        sliderSize.value = sliderRef.value[`client${vertical.value ? 'Height' : 'Width'}`];\n      }\n    };\n\n    // 是否以完成挂载（部分组合组件如inputNumber依赖于首次init后的状态值进行渲染）\n    const isAlreadyMount = ref(false);\n    // 初始化传入的value\n    const init = () => {\n      let valuetext: string | number;\n      if (props.range) {\n        if (Array.isArray(sliderValue.value)) {\n          firstValue.value = Math.max(props.min || 0, sliderValue.value[0]);\n          secondValue.value = Math.min(props.max || 100, sliderValue.value[1]);\n        } else {\n          firstValue.value = props.min || 0;\n          secondValue.value = props.max || 100;\n        }\n        valuetext = `${firstValue.value}-${secondValue.value}`;\n      } else {\n        if (typeof sliderValue.value !== 'number') {\n          firstValue.value = props.min;\n        } else {\n          firstValue.value = Math.min(props.max, Math.max(props.min, sliderValue.value as number));\n        }\n        valuetext = String(firstValue.value);\n      }\n      if (sliderContainerRef.value) {\n        sliderContainerRef.value.setAttribute('aria-valuetext', valuetext);\n      }\n      resetSize();\n      window.addEventListener('resize', resetSize);\n    };\n    // 相应button的位置\n    const setPosition = (percent: number): void => {\n      let targetValue = (percent * rangeDiff.value) / 100;\n      targetValue = props.min + targetValue;\n      if (!props.range && firstButtonRef.value) {\n        firstButtonRef.value.setPosition(percent);\n        return;\n      }\n      let button;\n      if (Math.abs(minValue.value - targetValue) < Math.abs(maxValue.value - targetValue)) {\n        button = firstValue.value < secondValue.value ? 'button1' : 'button2';\n      } else {\n        button = firstValue.value > secondValue.value ? 'button1' : 'button2';\n      }\n      if (button === 'button1' && firstButtonRef.value) {\n        firstButtonRef.value.setPosition(percent);\n      }\n      if (button === 'button2' && secondButtonRef.value) {\n        secondButtonRef.value.setPosition(percent);\n      }\n    };\n\n    // 全局点击\n    const onSliderClick = (event: MouseEvent): void => {\n      if (disabled.value || dragging.value) {\n        return;\n      }\n      if (!sliderRef.value) return;\n      resetSize();\n      let value = 0;\n      if (vertical.value) {\n        const sliderOffsetBottom = sliderRef.value.getBoundingClientRect().bottom;\n        value = ((sliderOffsetBottom - event.clientY) / sliderSize.value) * 100;\n        setPosition(value);\n      } else {\n        const sliderOffsetLeft = sliderRef.value.getBoundingClientRect().left;\n        value = ((event.clientX - sliderOffsetLeft) / sliderSize.value) * 100;\n        setPosition(value);\n      }\n    };\n\n    // mark 点击触发修改事件\n    const changeValue = (point: number) => {\n      if (disabled.value || dragging.value) {\n        return;\n      }\n      resetSize();\n      const value = Number((point / rangeDiff.value) * 100);\n      setPosition(value);\n      emitChange(point);\n    };\n\n    /** 副作用监听 */\n    watch(\n      () => sliderValue.value,\n      (newVal) => {\n        if (dragging.value === true) return;\n        if (Array.isArray(newVal) && props.range) {\n          [firstValue.value, secondValue.value] = newVal;\n        } else {\n          firstValue.value = newVal as number;\n        }\n      },\n    );\n\n    watch([firstValue, secondValue, dragging], (newStates, prevStates) => {\n      if (newStates[0] !== prevStates[0]) {\n        if (props.range) {\n          emitChange([minValue.value, maxValue.value]);\n        } else {\n          emitChange(firstValue.value);\n        }\n      }\n      if (newStates[1] !== prevStates[1]) {\n        if (props.range) {\n          emitChange([minValue.value, maxValue.value]);\n        }\n      }\n      if (newStates[2] !== prevStates[2] && newStates[2] === false) {\n        init();\n      }\n    });\n\n    /** 挂载&卸载 */\n    onMounted(() => {\n      init();\n      isAlreadyMount.value = true;\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener('resize', resetSize);\n    });\n\n    /** -------------------------- 渲染相关逻辑 start --------------------------  */\n    const markConfig = computed(() => ({\n      max: props.max,\n      min: props.min,\n      marks: props.marks,\n      vertical: vertical.value,\n      prefixName: COMPONENT_NAME.value,\n    }));\n    const renderMask = useSliderMark(markConfig);\n\n    const inputConfig = computed(() => ({\n      max: props.max,\n      min: props.min,\n      inputNumberProps: props.inputNumberProps,\n      step: props.step,\n      prefixName: COMPONENT_NAME.value,\n      vertical: vertical.value,\n      disabled: disabled.value,\n    }));\n    const renderInputNumber = useSliderInput(inputConfig);\n\n    const renderInputButton = (): VNode => {\n      const firstInputVal = firstValue.value;\n      const firstInputOnChange = (v: number) => {\n        firstValue.value = v;\n      };\n      const secondInputVal = secondValue.value;\n      const secondInputOnChange = (v: number) => {\n        secondValue.value = v;\n      };\n      return (\n        <div\n          class={[\n            `${COMPONENT_NAME.value}__input-container`,\n            {\n              'is-vertical': vertical.value,\n            },\n          ]}\n        >\n          {renderInputNumber(firstInputVal, firstInputOnChange)}\n          {props.range && <div class={`${COMPONENT_NAME.value}__center-line`} />}\n          {props.range && renderInputNumber(secondInputVal, secondInputOnChange)}\n        </div>\n      );\n    };\n    /** -------------------------- 渲染相关逻辑 end --------------------------  */\n\n    /** 父子共用状态&方法 */\n    const toggleDragging = (toState: boolean) => {\n      dragging.value = toState;\n    };\n\n    const { min, max, step } = toRefs(props);\n    provide(\n      sliderPropsInjectKey,\n      reactive({\n        min,\n        max,\n        step,\n        dragging,\n        toggleDragging,\n        precision,\n        disabled,\n        resetSize,\n        sliderSize,\n      }),\n    );\n\n    return () => (\n      <div class={containerClass.value} ref={sliderContainerRef}>\n        <div\n          class={sliderClass.value}\n          role=\"slider\"\n          aria-valuemin={props.min}\n          aria-valuemax={props.max}\n          aria-orientation={props.layout}\n          aria-disabled={disabled.value}\n          tooltip-props={props.tooltipProps}\n        >\n          <div class={sliderRailClass.value} style={runwayStyle.value} onClick={onSliderClick} ref={sliderRef}>\n            <div class={`${COMPONENT_NAME.value}__track`} style={barStyle.value} />\n            <TSliderButton\n              vertical={vertical.value}\n              value={firstValue.value}\n              ref={firstButtonRef}\n              disabled={disabled.value}\n              tooltip-props={props.tooltipProps}\n              label={props.label}\n              onInput={(v: number) => {\n                firstValue.value = v;\n              }}\n            />\n            {props.range && (\n              <TSliderButton\n                vertical={vertical.value}\n                value={secondValue.value}\n                ref={secondButtonRef}\n                disabled={disabled.value}\n                label={props.label}\n                tooltip-props={props.tooltipProps}\n                onInput={(v: number) => {\n                  secondValue.value = v;\n                }}\n              />\n            )}\n            {props.showStep && (\n              <div class={`${COMPONENT_NAME.value}__stops`}>\n                {steps.value.map((item: any, key) => {\n                  if (item.position === 0 || item.position === 100) return null;\n                  return (\n                    <div class={`${COMPONENT_NAME.value}__stop`} key={key} style={getStopStyle(item, vertical.value)} />\n                  );\n                })}\n              </div>\n            )}\n            {renderMask(changeValue)}\n          </div>\n        </div>\n        {isAlreadyMount.value && props.inputNumberProps && renderInputButton()}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","model","prop","event","props","setup","ctx","disabled","useFormDisabled","COMPONENT_NAME","usePrefixClass","useCommonClassName","STATUS","toRefs","value","modelValue","useVModel","defaultValue","onChange","sliderValue","setSliderValue","sliderContainerRef","ref","sliderRef","firstButtonRef","secondButtonRef","firstValue","formatSliderValue","secondValue","dragging","sliderSize","vertical","computed","layout","containerClass","sliderClass","inputNumberProps","sliderRailClass","runwayStyle","height","barStyle","barStart","range","minValue","min","rangeDiff","currentDiff","maxValue","barSize","bottom","width","left","max","Math","steps","showStep","step","console","warn","stepCount","stepWidth","result","i","push","r","filter","precision","precisions","map","item","decimalArr","split","length","apply","setValues","Array","isArray","maxLimit","minLimit","preValue","emitChange","changeValue","fixValue","resetSize","isAlreadyMount","init","valuetext","String","setAttribute","window","addEventListener","setPosition","percent","targetValue","button","abs","onSliderClick","sliderOffsetBottom","getBoundingClientRect","clientY","sliderOffsetLeft","clientX","point","Number","watch","newVal","newStates","prevStates","onMounted","onBeforeUnmount","removeEventListener","markConfig","marks","prefixName","renderMask","useSliderMark","inputConfig","renderInputNumber","useSliderInput","renderInputButton","firstInputVal","firstInputOnChange","v","secondInputVal","secondInputOnChange","_createVNode","toggleDragging","toState","provide","sliderPropsInjectKey","reactive","tooltipProps","TSliderButton","label","key","position","getStopStyle"],"mappings":"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"}