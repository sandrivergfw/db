{"version":3,"file":"useStyle.mjs","sources":["../../../src/table/hooks/useStyle.ts"],"sourcesContent":["import { computed, toRefs } from 'vue';\nimport { TdBaseTableProps } from '../type';\nimport useClassName from './useClassName';\nimport useCommonClassName from '../../hooks/useCommonClassName';\n\nexport function formatCSSUnit(unit: string | number) {\n  if (!unit) return unit;\n  return isNaN(Number(unit)) ? unit : `${unit}px`;\n}\n\nexport default function useStyle(props: TdBaseTableProps) {\n  const { size, bordered, stripe, hover, verticalAlign, height, maxHeight, tableContentWidth } = toRefs(props);\n\n  const { tableBaseClass, tableAlignClasses } = useClassName();\n  const { sizeClassNames } = useCommonClassName();\n\n  const tableClasses = computed(() => [\n    tableBaseClass.table,\n    {\n      [sizeClassNames[size.value]]: size.value !== 'medium',\n      [tableBaseClass.bordered]: bordered.value,\n      [tableBaseClass.striped]: stripe.value,\n      [tableBaseClass.hover]: hover.value,\n      [tableBaseClass.loading]: props.loading,\n      [tableBaseClass.affixedHeader]: props.headerAffixedTop,\n      [tableBaseClass.rowspanAndColspan]: props.rowspanAndColspan,\n      [tableAlignClasses[verticalAlign.value]]: verticalAlign.value !== 'middle',\n    },\n  ]);\n\n  const tableContentStyles = computed(() => ({\n    height: formatCSSUnit(height.value),\n    maxHeight: formatCSSUnit(maxHeight.value),\n  }));\n\n  const tableElementStyles = computed(() => ({\n    width: formatCSSUnit(tableContentWidth.value),\n  }));\n\n  return {\n    tableClasses,\n    sizeClassNames,\n    tableElementStyles,\n    tableContentStyles,\n  };\n}\n"],"names":["formatCSSUnit","unit","isNaN","Number","useStyle","props","toRefs","size","bordered","stripe","hover","verticalAlign","height","maxHeight","tableContentWidth","useClassName","tableBaseClass","tableAlignClasses","useCommonClassName","sizeClassNames","tableClasses","computed","table","value","striped","loading","affixedHeader","headerAffixedTop","rowspanAndColspan","tableContentStyles","tableElementStyles","width"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKO,SAASA,cAAcC,IAAuB,EAAA;AACnD,EAAA,IAAI,CAACA,IAAA,EAAa,OAAAA,IAAA,CAAA;EAClB,OAAOC,MAAMC,MAAO,CAAAF,IAAI,CAAC,CAAA,GAAIA,OAAUA,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,EAAA,IAAA,CAAA,CAAA;AACzC,CAAA;AAEA,SAAwBG,SAASC,KAAyB,EAAA;EAClD,IAAyFC,OAAAA,GAAAA,MAAA,CAAOD,KAAK,CAAA;AAAnGE,IAAAA,IAAM,WAANA,IAAM;AAAAC,IAAAA,QAAA,WAAAA,QAAA;AAAUC,IAAAA,MAAQ,WAARA,MAAQ;AAAAC,IAAAA,KAAA,WAAAA,KAAA;AAAOC,IAAAA,aAAe,WAAfA,aAAe;AAAAC,IAAAA,MAAA,WAAAA,MAAA;AAAQC,IAAAA,SAAW,WAAXA,SAAW;AAAAC,IAAAA,iBAAA,WAAAA,iBAAA,CAAA;AAEzE,EAAA,IAAA,aAAA,GAA8CC,YAAa,EAAA;AAAnDC,IAAAA,cAAA,iBAAAA,cAAA;AAAgBC,IAAAA,iBAAkB,iBAAlBA,iBAAkB,CAAA;AACpC,EAAA,IAAA,mBAAA,GAAqBC,kBAAmB,EAAA;AAAtCC,IAAAA,cAAe,uBAAfA,cAAe,CAAA;EAEjB,IAAAC,YAAA,GAAeC,SAAS,YAAA;AAAA,IAAA,IAAA,IAAA,CAAA;AAAA,IAAA,OAAM,CAClCL,cAAe,CAAAM,KAAA,GAAA,IAAA,GAAA,EAAA,EAAA,eAAA,CAAA,IAAA,EAEZH,cAAA,CAAeZ,IAAK,CAAAgB,KAAA,CAAA,EAAShB,KAAKgB,KAAU,KAAA,QAAA,CAAA,EAAA,eAAA,CAAA,IAAA,EAC5CP,cAAe,CAAAR,QAAA,EAAWA,QAAS,CAAAe,KAAA,yBACnCP,cAAe,CAAAQ,OAAA,EAAUf,MAAO,CAAAc,KAAA,yBAChCP,cAAe,CAAAN,KAAA,EAAQA,KAAM,CAAAa,KAAA,yBAC7BP,cAAe,CAAAS,OAAA,EAAUpB,KAAM,CAAAoB,OAAA,CAC/BT,EAAAA,eAAAA,CAAAA,IAAAA,EAAAA,cAAe,CAAAU,aAAA,EAAgBrB,KAAM,CAAAsB,gBAAA,CACrCX,EAAAA,eAAAA,CAAAA,IAAAA,EAAAA,cAAe,CAAAY,iBAAA,EAAoBvB,KAAM,CAAAuB,iBAAA,CAAA,EAAA,eAAA,CAAA,IAAA,EACzCX,iBAAA,CAAkBN,aAAc,CAAAY,KAAA,CAAA,EAASZ,cAAcY,KAAU,KAAA,QAAA,CAErE,EAAA,IAAA,EAAA,CAAA;GAAA,CAAA,CAAA;EAEK,IAAAM,kBAAA,GAAqBR,SAAS,YAAA;IAAA,OAAO;AACzCT,MAAAA,MAAA,EAAQZ,aAAc,CAAAY,MAAA,CAAOW,KAAK,CAAA;AAClCV,MAAAA,SAAA,EAAWb,aAAc,CAAAa,SAAA,CAAUU,KAAK,CAAA;KACxC,CAAA;AAAA,GAAA,CAAA,CAAA;EAEI,IAAAO,kBAAA,GAAqBT,SAAS,YAAA;IAAA,OAAO;AACzCU,MAAAA,KAAA,EAAO/B,aAAc,CAAAc,iBAAA,CAAkBS,KAAK,CAAA;KAC5C,CAAA;AAAA,GAAA,CAAA,CAAA;EAEK,OAAA;AACLH,IAAAA,YAAA,EAAAA,YAAA;AACAD,IAAAA,cAAA,EAAAA,cAAA;AACAW,IAAAA,kBAAA,EAAAA,kBAAA;AACAD,IAAAA,kBAAA,EAAAA,kBAAAA;GACF,CAAA;AACF;;;;"}