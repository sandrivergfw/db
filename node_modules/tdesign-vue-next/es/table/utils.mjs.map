{"version":3,"file":"utils.mjs","sources":["../../src/table/utils.ts"],"sourcesContent":["import isFunction from 'lodash/isFunction';\nimport get from 'lodash/get';\nimport isObject from 'lodash/isObject';\nimport {\n  CellData,\n  PrimaryTableCol,\n  RowClassNameParams,\n  TableColumnClassName,\n  TableRowData,\n  TdBaseTableProps,\n} from './type';\nimport { ClassName, HTMLElementAttributes } from '../common';\nimport { AffixProps } from '../affix';\n\nexport function toString(obj: any): string {\n  return Object.prototype.toString.call(obj).slice(8, -1).toLowerCase();\n}\n\nexport function debounce<T = any>(fn: Function, delay = 200): () => void {\n  let timer: ReturnType<typeof setTimeout>;\n  return function newFn(this: T, ...args: Array<any>): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const context = this;\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      fn.apply(context, args);\n    }, delay);\n  };\n}\n\nexport interface FormatRowAttributesParams {\n  row: TableRowData;\n  rowIndex: number;\n  type: 'body' | 'foot';\n}\n\n// 行属性\nexport function formatRowAttributes(attributes: TdBaseTableProps['rowAttributes'], params: FormatRowAttributesParams) {\n  if (!attributes) return undefined;\n  const attrList = attributes instanceof Array ? attributes : [attributes];\n  let result: HTMLElementAttributes = {};\n  for (let i = 0; i < attrList.length; i++) {\n    const attrItem = attrList[i];\n    if (!attrItem) continue;\n    const attrProperty = isFunction(attrItem) ? attrItem(params) : attrItem;\n    result =\n      attrProperty instanceof Array ? formatRowAttributes(attrProperty, params) : Object.assign(result, attrProperty);\n  }\n  return result;\n}\n\n// 行类名，['A', 'B']，[() => 'A', () => 'B']\nexport function formatRowClassNames(\n  rowClassNames: TdBaseTableProps['rowClassName'],\n  params: RowClassNameParams<TableRowData>,\n  rowKey: string,\n) {\n  const rowClassList = rowClassNames instanceof Array ? rowClassNames : [rowClassNames];\n  const { row, rowIndex } = params;\n  // 自定义行类名\n  let customClasses: ClassName = [];\n  for (let i = 0, len = rowClassList.length; i < len; i++) {\n    const rName = rowClassList[i];\n    let tClass = isFunction(rName) ? rName(params) : rName;\n    if (isObject(tClass) && !(tClass instanceof Array)) {\n      // 根据下标设置行类名\n      tClass[rowIndex] && (tClass = tClass[rowIndex]);\n      // 根据行唯一标识设置行类名\n      const rowId = get(row, rowKey || 'id');\n      tClass[rowId] && (tClass = tClass[rowId]);\n    } else if (tClass instanceof Array) {\n      tClass = formatRowClassNames(tClass, params, rowKey);\n    }\n    customClasses = customClasses.concat(tClass);\n  }\n  return customClasses;\n}\n\nexport function formatClassNames(\n  classNames: TableColumnClassName<TableRowData> | TableColumnClassName<TableRowData>[],\n  params: CellData<TableRowData>,\n) {\n  const classes = classNames instanceof Array ? classNames : [classNames];\n  const arr: any[] = [];\n  for (let i = 0, len = classes.length; i < len; i++) {\n    const cls = classes[i];\n    if (isFunction(cls)) {\n      arr.push(cls(params));\n    } else {\n      arr.push(cls);\n    }\n  }\n  return arr;\n}\n\nexport const INNER_PRE_NAME = '@@inner-';\n\nexport enum SCROLL_DIRECTION {\n  X = 'x',\n  Y = 'y',\n  UNKNOWN = 'unknown',\n}\n\nlet preScrollLeft: any;\nlet preScrollTop: any;\n\nexport const getScrollDirection = (scrollLeft: number, scrollTop: number): SCROLL_DIRECTION => {\n  let direction = SCROLL_DIRECTION.UNKNOWN;\n  if (preScrollTop !== scrollTop) {\n    direction = SCROLL_DIRECTION.Y;\n  } else if (preScrollLeft !== scrollLeft) {\n    direction = SCROLL_DIRECTION.X;\n  }\n  preScrollTop = scrollTop;\n  preScrollLeft = scrollLeft;\n  return direction;\n};\n\nexport const getRecord = (record: Record<any, any>) => {\n  if (!record) {\n    return record;\n  }\n  const result = {};\n  Object.keys(record).forEach((key) => {\n    const descriptor = Object.getOwnPropertyDescriptor(record, key);\n    descriptor &&\n      Reflect.defineProperty(result, key, {\n        set(val) {\n          descriptor.set(val);\n        },\n        get() {\n          console.warn('The parameter `record` will be deprecated, please use `row` instead');\n          return descriptor.get();\n        },\n      });\n  });\n  return result;\n};\n\n// 多级表头，列配置场景，获取 currentRow\nexport function getCurrentRowByKey<T extends { colKey?: string; children?: any[] }>(columns: T[], key: string): T {\n  if (!columns || !key) return;\n  const col = columns?.find((t) => t.colKey === key);\n  if (col) return col;\n  for (let i = 0, len = columns.length; i < len; i++) {\n    if (columns[i]?.children?.length) {\n      return getCurrentRowByKey(columns[i]?.children, key);\n    }\n  }\n}\n\n/** 透传 Affix 组件全部特性 */\nexport function getAffixProps(mainAffixProps: boolean | AffixProps, subAffixProps?: AffixProps) {\n  if (typeof mainAffixProps === 'object') return mainAffixProps;\n  if (typeof subAffixProps === 'object') return subAffixProps;\n  return {};\n}\n\nexport function getEditableKeysMap(keys: Array<string | number>, list: any[], rowKey: string) {\n  const map: { [key: string | number]: boolean } = {};\n  for (let i = 0, len = list.length; i < len; i++) {\n    const rowValue = get(list[i], rowKey);\n    if (keys.includes(rowValue)) {\n      map[rowValue] = true;\n    }\n  }\n  return map;\n}\n\nexport function getColumnDataByKey(columns: any[], colKey: string): any {\n  for (let i = 0, len = columns.length; i < len; i++) {\n    if (columns[i].colKey === colKey) return columns[i];\n    if (columns[i].children?.length) {\n      const t = getColumnDataByKey(columns[i].children, colKey);\n      if (t) return t;\n    }\n  }\n  return null;\n}\n\nexport function getColumnIndexByKey(columns: any[], colKey: string): number {\n  for (let i = 0, len = columns.length; i < len; i++) {\n    if (columns[i].colKey === colKey) {\n      return i;\n    }\n    if (columns[i].children?.length) {\n      const t = getColumnDataByKey(columns[i].children, colKey);\n      if (t) return i;\n    }\n  }\n  return -1;\n}\n"],"names":["toString","obj","Object","prototype","call","slice","toLowerCase","debounce","fn","delay","timer","newFn","args","context","clearTimeout","setTimeout","apply","formatRowAttributes","attributes","params","attrList","Array","result","i","length","attrItem","attrProperty","isFunction","assign","formatRowClassNames","rowClassNames","rowKey","rowClassList","row","rowIndex","customClasses","len","rName","tClass","isObject","rowId","get","concat","formatClassNames","classNames","classes","arr","cls","push","INNER_PRE_NAME","SCROLL_DIRECTION","preScrollLeft","preScrollTop","getScrollDirection","scrollLeft","scrollTop","direction","getRecord","record","keys","forEach","key","descriptor","getOwnPropertyDescriptor","Reflect","defineProperty","set","val","console","warn","getCurrentRowByKey","columns","col","find","t","colKey","children","getAffixProps","mainAffixProps","subAffixProps","getEditableKeysMap","list","map","rowValue","includes","getColumnDataByKey","getColumnIndexByKey"],"mappings":"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"}