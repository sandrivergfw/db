{"version":3,"file":"primary-table.mjs","sources":["../../src/table/primary-table.tsx"],"sourcesContent":["import { computed, defineComponent, toRefs, h, ref, onMounted, SetupContext } from 'vue';\nimport get from 'lodash/get';\nimport omit from 'lodash/omit';\nimport isFunction from 'lodash/isFunction';\nimport baseTableProps from './base-table-props';\nimport primaryTableProps from './primary-table-props';\nimport BaseTable from './base-table';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport useColumnController from './hooks/useColumnController';\nimport useRowExpand from './hooks/useRowExpand';\nimport useTableHeader, { renderTitle } from './hooks/useTableHeader';\nimport useRowSelect from './hooks/useRowSelect';\nimport {\n  TdPrimaryTableProps,\n  PrimaryTableCol,\n  TableRowData,\n  PrimaryTableCellParams,\n  PrimaryTableRowEditContext,\n} from './type';\nimport useSorter from './hooks/useSorter';\nimport useFilter from './hooks/useFilter';\nimport useDragSort from './hooks/useDragSort';\nimport useAsyncLoading from './hooks/useAsyncLoading';\nimport EditableCell, { EditableCellProps } from './editable-cell';\nimport { PageInfo } from '../pagination';\nimport useClassName from './hooks/useClassName';\nimport useEditableRow from './hooks/useEditableRow';\nimport useStyle from './hooks/useStyle';\n\nexport { BASE_TABLE_ALL_EVENTS } from './base-table';\n\nconst OMIT_PROPS = [\n  'hideSortTips',\n  'dragSort',\n  'defaultExpandedRowKeys',\n  'defaultSelectedRowKeys',\n  'columnController',\n  'filterRow',\n  'sortOnRowDraggable',\n  'expandOnRowClick',\n  'multipleSort',\n  'expandIcon',\n  'onChange',\n  'onAsyncLoadingClick',\n  'onColumnChange',\n  'onColumnControllerVisibleChange',\n  'onDataChange',\n  'onDisplayColumnsChange',\n  'onDragSort',\n  'onExpandChange',\n  'onFilterChange',\n  'onSelectChange',\n  'onSortChange',\n];\n\nexport default defineComponent({\n  name: 'TPrimaryTable',\n\n  props: {\n    ...baseTableProps,\n    ...primaryTableProps,\n  },\n\n  setup(props: TdPrimaryTableProps, context: SetupContext) {\n    const renderTNode = useTNodeJSX();\n    const { columns, columnController } = toRefs(props);\n    const primaryTableRef = ref(null);\n    const { classPrefix, tableDraggableClasses, tableBaseClass, tableSelectedClasses, tableSortClasses } =\n      useClassName();\n    const { sizeClassNames } = useStyle(props);\n    // 自定义列配置功能\n    const { tDisplayColumns, renderColumnController } = useColumnController(props, context);\n    // 展开/收起行功能\n    const { showExpandedRow, showExpandIconColumn, getExpandColumn, renderExpandedRow, onInnerExpandRowClick } =\n      useRowExpand(props, context);\n    // 排序功能\n    const { renderSortIcon } = useSorter(props, context);\n    // 行选中功能\n    const { formatToRowSelectColumn, selectedRowClassNames } = useRowSelect(props, tableSelectedClasses);\n    // 过滤功能\n    const {\n      hasEmptyCondition,\n      isTableOverflowHidden,\n      renderFilterIcon,\n      renderFirstFilterRow,\n      setFilterPrimaryTableRef,\n    } = useFilter(props, context);\n\n    // 拖拽排序功能\n    const { isRowHandlerDraggable, isRowDraggable, isColDraggable, setDragSortPrimaryTableRef, setDragSortColumns } =\n      useDragSort(props, context);\n\n    const { renderTitleWidthIcon } = useTableHeader(props);\n    const { renderAsyncLoading } = useAsyncLoading(props, context);\n\n    const { errorListMap, editableKeysMap, validateRowData, validateTableData, onRuleChange, clearValidateData } =\n      useEditableRow(props);\n\n    const primaryTableClasses = computed(() => {\n      return {\n        [tableDraggableClasses.colDraggable]: isColDraggable.value,\n        [tableDraggableClasses.rowHandlerDraggable]: isRowHandlerDraggable.value,\n        [tableDraggableClasses.rowDraggable]: isRowDraggable.value,\n        [tableBaseClass.overflowVisible]: isTableOverflowHidden.value === false,\n        [tableBaseClass.tableRowEdit]: props.editableRowKeys,\n      };\n    });\n\n    // 如果想给 TR 添加类名，请在这里补充，不要透传更多额外 Props 到 BaseTable\n    const tRowClassNames = computed(() => {\n      const tClassNames = [props.rowClassName, selectedRowClassNames.value];\n      return tClassNames.filter((v) => v);\n    });\n\n    // 如果想给 TR 添加属性，请在这里补充，不要透传更多额外 Props 到 BaseTable\n    const tRowAttributes = computed(() => {\n      const tAttributes = [props.rowAttributes];\n      if (isRowHandlerDraggable.value || isRowDraggable.value) {\n        tAttributes.push(({ row }) => ({ 'data-id': get(row, props.rowKey || 'id') }));\n      }\n      return tAttributes.filter((v) => v);\n    });\n\n    // 多个 Hook 共用 primaryTableRef\n    onMounted(() => {\n      setFilterPrimaryTableRef(primaryTableRef.value);\n      setDragSortPrimaryTableRef(primaryTableRef.value);\n    });\n\n    // 对外暴露的方法\n    context.expose({\n      validateRowData,\n      validateTableData,\n      clearValidateData,\n      refreshTable: () => {\n        primaryTableRef.value.refreshTable();\n      },\n    });\n\n    // 1. 影响列数量的因素有：自定义列配置、展开/收起行、多级表头；2. 影响表头内容的因素有：排序图标、筛选图标\n    const getColumns = (columns: PrimaryTableCol<TableRowData>[]) => {\n      const arr: PrimaryTableCol<TableRowData>[] = [];\n      for (let i = 0, len = columns.length; i < len; i++) {\n        let item = { ...columns[i] };\n        // 自定义列显示控制\n        const isDisplayColumn = item.children?.length || tDisplayColumns.value?.includes(item.colKey);\n        if (!isDisplayColumn && props.columnController) continue;\n        item = formatToRowSelectColumn(item);\n        const { sort } = props;\n        if (item.sorter && props.showSortColumnBgColor) {\n          const sorts = sort instanceof Array ? sort : [sort];\n          const sortedColumn = sorts.find(\n            (sort) => sort && sort.sortBy === item.colKey && sort.descending !== undefined,\n          );\n          if (sortedColumn) {\n            item.className =\n              item.className instanceof Array\n                ? item.className.concat(tableSortClasses.sortColumn)\n                : [item.className, tableSortClasses.sortColumn];\n          }\n        }\n        // 添加排序图标和过滤图标\n        if (item.sorter || item.filter) {\n          const titleContent = renderTitle(context.slots, item, i);\n          const { ellipsisTitle } = item;\n          item.title = (h, p) => {\n            const sortIcon = item.sorter ? renderSortIcon(p) : null;\n            const filterIcon = item.filter ? renderFilterIcon(p) : null;\n            // @ts-ignore 注意：此处 Vue2 和 Vue3 有所不同\n            const attach = primaryTableRef.value?.tableContentRef;\n            return renderTitleWidthIcon(\n              [titleContent, sortIcon, filterIcon],\n              p.col,\n              p.colIndex,\n              ellipsisTitle,\n              attach,\n              {\n                classPrefix,\n                ellipsisOverlayClassName: props.size !== 'medium' ? sizeClassNames[props.size] : '',\n              },\n            );\n          };\n          item.ellipsisTitle = false;\n        }\n        // 如果是单元格可编辑状态\n        if (item.edit?.component) {\n          const oldCell = item.cell;\n          item.cell = (h, p: PrimaryTableCellParams<TableRowData>) => {\n            const cellProps: EditableCellProps = {\n              ...p,\n              oldCell,\n              tableBaseClass,\n              cellEmptyContent: props.cellEmptyContent,\n              onChange: props.onRowEdit,\n              onValidate: props.onRowValidate,\n              onRuleChange,\n            };\n            if (props.editableRowKeys) {\n              const rowValue = get(p.row, props.rowKey || 'id');\n              cellProps.editable = editableKeysMap.value[rowValue] || false;\n              const key = [rowValue, p.col.colKey].join('__');\n              const errorList = errorListMap.value?.[key];\n              errorList && (cellProps.errors = errorList);\n            }\n            if (props.editableCellState) {\n              cellProps.readonly = !props.editableCellState(p);\n            }\n            return <EditableCell {...cellProps} v-slots={context.slots} />;\n          };\n        }\n        if (item.children?.length) {\n          item.children = getColumns(item.children);\n        }\n        // 多级表头和自定义列配置特殊逻辑：要么子节点不存在，要么子节点长度大于 1，方便做自定义列配置\n        if (!item.children || item.children?.length) {\n          arr.push(item);\n        }\n      }\n      return arr;\n    };\n\n    const tColumns = computed(() => {\n      const cols = getColumns(columns.value);\n      if (showExpandIconColumn.value) {\n        cols.unshift(getExpandColumn());\n      }\n      return cols;\n    });\n\n    const onInnerPageChange = (pageInfo: PageInfo, newData: Array<TableRowData>) => {\n      props.onPageChange?.(pageInfo, newData);\n      const changeParams: Parameters<TdPrimaryTableProps['onChange']> = [\n        { pagination: pageInfo },\n        { trigger: 'pagination', currentData: newData },\n      ];\n      props.onChange?.(...changeParams);\n    };\n\n    return () => {\n      const formatNode = (\n        api: string,\n        renderInnerNode: Function,\n        condition: boolean,\n        extra?: { reverse?: boolean },\n      ) => {\n        if (!condition) return props[api];\n        const innerNode = renderInnerNode(h);\n        const propsNode = renderTNode(api);\n        if (innerNode && !propsNode) return () => innerNode;\n        if (propsNode && !innerNode) return () => propsNode;\n        if (innerNode && propsNode) {\n          return () =>\n            extra?.reverse ? (\n              <div>\n                {innerNode}\n                {propsNode}\n              </div>\n            ) : (\n              <div>\n                {propsNode}\n                {innerNode}\n              </div>\n            );\n        }\n        return null;\n      };\n      const isColumnController = !!(columnController.value && Object.keys(columnController.value).length);\n      // @ts-ignore\n      const placement = isColumnController ? columnController.value.placement || 'top-right' : '';\n      const isBottomController = isColumnController && placement?.indexOf('bottom') !== -1;\n      const topContent = formatNode('topContent', renderColumnController, isColumnController && !isBottomController);\n      const bottomContent = formatNode('bottomContent', renderColumnController, isBottomController, {\n        reverse: true,\n      });\n      const firstFullRow = formatNode('firstFullRow', renderFirstFilterRow, !hasEmptyCondition.value);\n      const lastFullRow = formatNode('lastFullRow', renderAsyncLoading, !!props.asyncLoading);\n\n      const baseTableProps = {\n        ...omit(props, OMIT_PROPS),\n        rowClassName: tRowClassNames.value,\n        rowAttributes: tRowAttributes.value,\n        columns: tColumns.value,\n        topContent,\n        bottomContent,\n        firstFullRow,\n        lastFullRow,\n        onPageChange: onInnerPageChange,\n        renderExpandedRow: showExpandedRow.value ? renderExpandedRow : undefined,\n      };\n\n      if (props.expandOnRowClick) {\n        baseTableProps.onRowClick = onInnerExpandRowClick;\n      }\n\n      return (\n        // @ts-ignore\n        <BaseTable\n          ref={primaryTableRef}\n          v-slots={context.slots}\n          {...baseTableProps}\n          class={primaryTableClasses.value}\n          onLeafColumnsChange={setDragSortColumns}\n        />\n      );\n    };\n  },\n});\n"],"names":["OMIT_PROPS","defineComponent","name","props","baseTableProps","primaryTableProps","setup","context","renderTNode","useTNodeJSX","toRefs","columns","columnController","primaryTableRef","ref","useClassName","classPrefix","tableDraggableClasses","tableBaseClass","tableSelectedClasses","tableSortClasses","useStyle","sizeClassNames","useColumnController","tDisplayColumns","renderColumnController","useRowExpand","showExpandedRow","showExpandIconColumn","getExpandColumn","renderExpandedRow","onInnerExpandRowClick","useSorter","renderSortIcon","useRowSelect","formatToRowSelectColumn","selectedRowClassNames","useFilter","hasEmptyCondition","isTableOverflowHidden","renderFilterIcon","renderFirstFilterRow","setFilterPrimaryTableRef","useDragSort","isRowHandlerDraggable","isRowDraggable","isColDraggable","setDragSortPrimaryTableRef","setDragSortColumns","useTableHeader","renderTitleWidthIcon","useAsyncLoading","renderAsyncLoading","useEditableRow","errorListMap","editableKeysMap","validateRowData","validateTableData","onRuleChange","clearValidateData","primaryTableClasses","computed","colDraggable","value","rowHandlerDraggable","rowDraggable","overflowVisible","tableRowEdit","editableRowKeys","tRowClassNames","tClassNames","rowClassName","filter","v","tRowAttributes","tAttributes","rowAttributes","push","row","get","rowKey","onMounted","expose","refreshTable","getColumns","arr","i","len","item","isDisplayColumn","children","length","includes","colKey","sort","sorter","showSortColumnBgColor","sorts","Array","sortedColumn","find","sortBy","descending","className","concat","sortColumn","titleContent","renderTitle","slots","ellipsisTitle","title","h","p","sortIcon","filterIcon","attach","tableContentRef","col","colIndex","ellipsisOverlayClassName","size","edit","component","oldCell","cell","cellProps","cellEmptyContent","onChange","onRowEdit","onValidate","onRowValidate","rowValue","editable","key","join","errorList","errors","editableCellState","readonly","_createVNode","tColumns","cols","unshift","onInnerPageChange","pageInfo","newData","onPageChange","changeParams","pagination","trigger","currentData","formatNode","api","renderInnerNode","condition","extra","innerNode","propsNode","reverse","isColumnController","Object","keys","placement","isBottomController","indexOf","topContent","bottomContent","firstFullRow","lastFullRow","asyncLoading","omit","expandOnRowClick","onRowClick","BaseTable","_mergeProps"],"mappings":"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"}