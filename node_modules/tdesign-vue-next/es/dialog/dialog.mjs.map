{"version":3,"file":"dialog.mjs","sources":["../../src/dialog/dialog.tsx"],"sourcesContent":["import {\n  computed,\n  defineComponent,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n  Transition,\n  watch,\n  getCurrentInstance,\n} from 'vue';\nimport {\n  CloseIcon as TdCloseIcon,\n  InfoCircleFilledIcon as TdInfoCircleFilledIcon,\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n} from 'tdesign-icons-vue-next';\n\nimport { DialogCloseContext, TdDialogProps } from './type';\nimport props from './props';\nimport TransferDom from '../utils/transfer-dom';\nimport { addClass, removeClass } from '../utils/dom';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport { useConfig, usePrefixClass } from '../hooks/useConfig';\nimport { useAction, useSameTarget } from './hooks';\nimport { useTNodeJSX, useContent } from '../hooks/tnode';\nimport useDestroyOnClose from '../hooks/useDestroyOnClose';\nimport { stack } from './stack';\n\nfunction GetCSSValue(v: string | number) {\n  return Number.isNaN(Number(v)) ? v : `${Number(v)}px`;\n}\n\nlet mousePosition: { x: number; y: number } | null;\nconst getClickPosition = (e: MouseEvent) => {\n  mousePosition = {\n    x: e.clientX,\n    y: e.clientY,\n  };\n  setTimeout(() => {\n    mousePosition = null;\n  }, 100);\n};\n\nif (typeof window !== 'undefined' && window.document && window.document.documentElement) {\n  document.documentElement.addEventListener('click', getClickPosition, true);\n}\n\nfunction InitDragEvent(dragBox: HTMLElement) {\n  const target = dragBox;\n  const windowInnerWidth = window.innerWidth || document.documentElement.clientWidth;\n  const windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;\n  target.addEventListener('mousedown', (targetEvent: MouseEvent) => {\n    // 算出鼠标相对元素的位置\n    const disX = targetEvent.clientX - target.offsetLeft;\n    const disY = targetEvent.clientY - target.offsetTop;\n    const dialogW = target.offsetWidth;\n    const dialogH = target.offsetHeight;\n    // 如果弹出框超出屏幕范围 不能进行拖拽\n    if (dialogW > windowInnerWidth || dialogH > windowInnerHeight) return;\n    function mouseMoverHandler(documentEvent: MouseEvent) {\n      // 用鼠标的位置减去鼠标相对元素的位置，得到元素的位置\n      let left = documentEvent.clientX - disX;\n      let top = documentEvent.clientY - disY;\n      // 临界判断\n      // 拖拽上左边界限制\n      if (left < 0) left = 0;\n      if (top < 0) top = 0;\n      if (windowInnerWidth - target.offsetWidth - left < 0) left = windowInnerWidth - target.offsetWidth;\n      if (windowInnerHeight - target.offsetHeight - top < 0) top = windowInnerHeight - target.offsetHeight;\n      target.style.position = 'absolute';\n      target.style.left = `${left}px`;\n      target.style.top = `${top}px`;\n    }\n    function mouseUpHandler() {\n      // 鼠标弹起来的时候不再移动\n      document.removeEventListener('mousemove', mouseMoverHandler);\n      // 预防鼠标弹起来后还会循环（即预防鼠标放上去的时候还会移动）\n      document.removeEventListener('mouseup', mouseUpHandler);\n    }\n    // 元素按下时注册document鼠标监听事件\n    document.addEventListener('mousemove', mouseMoverHandler);\n    // 鼠标弹起来移除document鼠标监听事件\n    document.addEventListener('mouseup', mouseUpHandler);\n    // 拖拽结束移除鼠标监听事件，解决文字拖拽结束事件未解绑问题\n    document.addEventListener('dragend', mouseUpHandler);\n  });\n}\nexport default defineComponent({\n  name: 'TDialog',\n\n  // 注册v-draggable指令,传入true时候初始化拖拽事件\n  directives: {\n    TransferDom,\n    draggable(el, binding) {\n      // el 指令绑定的元素\n      if (el && binding && binding.value) {\n        InitDragEvent(el);\n      }\n    },\n  },\n\n  props,\n\n  emits: ['update:visible'],\n  setup(props: TdDialogProps, context) {\n    const COMPONENT_NAME = usePrefixClass('dialog');\n    const LOCK_CLASS = usePrefixClass('dialog--lock');\n    const classPrefix = usePrefixClass();\n    const renderContent = useContent();\n    const renderTNodeJSX = useTNodeJSX();\n    const dialogEle = ref<HTMLElement | null>(null);\n    const { globalConfig } = useConfig('dialog');\n    const { CloseIcon, InfoCircleFilledIcon, CheckCircleFilledIcon, ErrorCircleFilledIcon } = useGlobalIcon({\n      CloseIcon: TdCloseIcon,\n      InfoCircleFilledIcon: TdInfoCircleFilledIcon,\n      CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n      ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n    });\n    const confirmBtnAction = (e: MouseEvent) => {\n      props.onConfirm?.({ e });\n    };\n    const cancelBtnAction = (e: MouseEvent) => {\n      props.onCancel?.({ e });\n      emitCloseEvent({ e, trigger: 'cancel' });\n    };\n    const { getConfirmBtn, getCancelBtn } = useAction({ confirmBtnAction, cancelBtnAction });\n\n    useDestroyOnClose();\n    const scrollWidth = ref(0);\n    // 是否模态形式的对话框\n    const isModal = computed(() => props.mode === 'modal');\n    // 是否非模态对话框\n    const isModeLess = computed(() => props.mode === 'modeless');\n    // 是否普通对话框，没有脱离文档流的对话框\n    const isNormal = computed(() => props.mode === 'normal');\n    // 是否全屏对话框\n    const isFullScreen = computed(() => props.mode === 'full-screen');\n    const maskClass = computed(() => [\n      `${COMPONENT_NAME.value}__mask`,\n      !props.showOverlay && `${classPrefix.value}-is-hidden`,\n    ]);\n    const positionClass = computed(() => {\n      if (isNormal.value) return [];\n      if (isFullScreen.value) return [`${COMPONENT_NAME.value}__position_fullscreen`];\n\n      return [\n        `${COMPONENT_NAME.value}__position`,\n        !!props.top && `${COMPONENT_NAME.value}--top`,\n        `${props.placement && !props.top ? `${COMPONENT_NAME.value}--${props.placement}` : ''}`,\n      ];\n    });\n    const wrapClass = computed(() => [!isNormal.value && `${COMPONENT_NAME.value}__wrap`]);\n    const positionStyle = computed(() => {\n      if (isFullScreen.value) return {}; // 全屏模式，top属性不生效\n\n      // 此处获取定位方式 top 优先级较高 存在时 默认使用top定位\n      const { top } = props;\n      let topStyle = {};\n      if (top !== undefined) {\n        const topValue = GetCSSValue(top);\n        topStyle = { paddingTop: topValue };\n      }\n      return topStyle;\n    });\n    const dialogClass = computed(() => {\n      const dialogClass = [\n        `${COMPONENT_NAME.value}`,\n        `${COMPONENT_NAME.value}__modal-${props.theme}`,\n        isModeLess.value && props.draggable && `${COMPONENT_NAME.value}--draggable`,\n      ];\n\n      if (isFullScreen.value) {\n        dialogClass.push(`${COMPONENT_NAME.value}__fullscreen`);\n      } else {\n        dialogClass.push(...[`${COMPONENT_NAME.value}--default`, `${COMPONENT_NAME.value}--${props.placement}`]);\n      }\n      return dialogClass;\n    });\n    const dialogStyle = computed(() => {\n      return !isFullScreen.value ? { width: GetCSSValue(props.width) } : {}; // width全屏模式不生效\n    });\n\n    watch(\n      () => props.visible,\n      (value) => {\n        if (value) {\n          if ((isModal.value && !props.showInAttachedElement) || isFullScreen.value) {\n            if (scrollWidth.value > 0 && props.preventScrollThrough) {\n              const bodyCssText = `position: relative;width: calc(100% - ${scrollWidth.value}px);`;\n              document.body.style.cssText = bodyCssText;\n            }\n            props.preventScrollThrough && addClass(document.body, LOCK_CLASS.value);\n            nextTick(() => {\n              if (mousePosition && dialogEle.value) {\n                dialogEle.value.style.transformOrigin = `${mousePosition.x - dialogEle.value.offsetLeft}px ${\n                  mousePosition.y - dialogEle.value.offsetTop\n                }px`;\n              }\n              // 清除鼠标焦点 避免entry事件多次触发（按钮弹出弹窗 不移除焦点 立即按Entry按键 会造成弹窗关闭再弹出）\n              (document.activeElement as HTMLElement).blur();\n            });\n          }\n        } else {\n          document.body.style.cssText = '';\n          removeClass(document.body, LOCK_CLASS.value);\n        }\n        storeUid(value);\n        addKeyboardEvent(value);\n      },\n    );\n\n    const instance = getCurrentInstance();\n    const storeUid = (flag: boolean) => {\n      if (flag) {\n        stack.push(instance.uid);\n      } else {\n        stack.pop();\n      }\n    };\n\n    const addKeyboardEvent = (status: boolean) => {\n      if (status) {\n        document.addEventListener('keydown', keyboardEvent);\n        props.confirmOnEnter && document.addEventListener('keydown', keyboardEnterEvent);\n      } else {\n        document.removeEventListener('keydown', keyboardEvent);\n        props.confirmOnEnter && document.removeEventListener('keydown', keyboardEnterEvent);\n      }\n    };\n    // 回车出发确认事件\n    const keyboardEnterEvent = (e: KeyboardEvent) => {\n      const { code } = e;\n      if ((code === 'Enter' || code === 'NumpadEnter') && stack.top === instance.uid) {\n        props.onConfirm?.({ e });\n      }\n    };\n    const keyboardEvent = (e: KeyboardEvent) => {\n      if (e.code === 'Escape' && stack.top === instance.uid) {\n        props.onEscKeydown?.({ e });\n        // 根据closeOnEscKeydown判断按下ESC时是否触发close事件\n        if (props.closeOnEscKeydown ?? globalConfig.value.closeOnEscKeydown) {\n          emitCloseEvent({ e, trigger: 'esc' });\n        }\n      }\n    };\n    const overlayAction = (e: MouseEvent) => {\n      if (props.showOverlay && (props.closeOnOverlayClick ?? globalConfig.value.closeOnOverlayClick)) {\n        props.onOverlayClick?.({ e });\n        emitCloseEvent({ e, trigger: 'overlay' });\n      }\n    };\n    const { onClick, onMousedown, onMouseup } = useSameTarget(overlayAction);\n    const closeBtnAction = (e: MouseEvent) => {\n      props.onCloseBtnClick?.({ e });\n      emitCloseEvent({\n        trigger: 'close-btn',\n        e,\n      });\n    };\n\n    // 打开弹窗动画结束时事件\n    const afterEnter = () => {\n      props.onOpened?.();\n    };\n    // 关闭弹窗动画结束时事件\n    const afterLeave = () => {\n      if (isModeLess.value && props.draggable) {\n        // 关闭弹窗 清空拖拽设置的相关css\n        dialogEle.value.style.position = 'relative';\n        dialogEle.value.style.left = 'unset';\n        dialogEle.value.style.top = 'unset';\n      }\n      props.onClosed?.();\n    };\n\n    const emitCloseEvent = (ctx: DialogCloseContext) => {\n      props.onClose?.(ctx);\n      // 默认关闭弹窗\n      context.emit('update:visible', false);\n    };\n\n    // Vue在引入阶段对事件的处理还做了哪些初始化操作。Vue在实例上用一个_events属性存贮管理事件的派发和更新，\n    // 暴露出$on, $once, $off, $emit方法给外部管理事件和派发执行事件\n    // 所以通过判断_events某个事件下监听函数数组是否超过一个，可以判断出组件是否监听了当前事件\n    const hasEventOn = (name: string) => {\n      // _events 因没有被暴露在vue实例接口中，只能把这个规则注释掉\n      // eslint-disable-next-line dot-notation\n      const eventFuncs = this['_events']?.[name];\n      return !!eventFuncs?.length;\n    };\n    const getIcon = () => {\n      const icon = {\n        info: <InfoCircleFilledIcon class={`${classPrefix.value}-is-info`} />,\n        warning: <ErrorCircleFilledIcon class={`${classPrefix.value}-is-warning`} />,\n        danger: <ErrorCircleFilledIcon class={`${classPrefix.value}-is-error`} />,\n        success: <CheckCircleFilledIcon class={`${classPrefix.value}-is-success`} />,\n      };\n      return icon[props.theme];\n    };\n    const renderDialog = () => {\n      // header 值为 true 显示空白头部\n      const defaultHeader = <h5 class=\"title\"></h5>;\n      const defaultCloseBtn = <CloseIcon />;\n      const body = renderContent('default', 'body');\n      const defaultFooter = (\n        <div>\n          {getCancelBtn({\n            cancelBtn: props.cancelBtn,\n            globalCancel: globalConfig.value.cancel,\n            className: `${COMPONENT_NAME.value}__cancel`,\n          })}\n          {getConfirmBtn({\n            theme: props.theme,\n            confirmBtn: props.confirmBtn,\n            globalConfirm: globalConfig.value.confirm,\n            globalConfirmBtnTheme: globalConfig.value.confirmBtnTheme,\n            className: `${COMPONENT_NAME.value}__confirm`,\n          })}\n        </div>\n      );\n      const headerClassName = isFullScreen.value\n        ? [`${COMPONENT_NAME.value}__header`, `${COMPONENT_NAME.value}__header--fullscreen`]\n        : `${COMPONENT_NAME.value}__header`;\n\n      const closeClassName = isFullScreen.value\n        ? [`${COMPONENT_NAME.value}__close`, `${COMPONENT_NAME.value}__close--fullscreen`]\n        : `${COMPONENT_NAME.value}__close`;\n\n      const bodyClassName =\n        props.theme === 'default' ? [`${COMPONENT_NAME.value}__body`] : [`${COMPONENT_NAME.value}__body__icon`];\n      isFullScreen.value && bodyClassName.push(`${COMPONENT_NAME.value}__body--fullscreen`);\n\n      const footerClassName = isFullScreen.value\n        ? [`${COMPONENT_NAME.value}__footer`, `${COMPONENT_NAME.value}__footer--fullscreen`]\n        : `${COMPONENT_NAME.value}__footer`;\n\n      const footerContent = renderTNodeJSX('footer', defaultFooter);\n\n      const onStopDown = (e: MouseEvent) => {\n        if (isModeLess.value && props.draggable) e.stopPropagation();\n      };\n\n      return (\n        // /* 非模态形态下draggable为true才允许拖拽 */\n        <div class={wrapClass.value}>\n          <div\n            class={positionClass.value}\n            style={positionStyle.value}\n            onClick={onClick}\n            onMousedown={onMousedown}\n            onMouseup={onMouseup}\n          >\n            <div\n              key=\"dialog\"\n              class={dialogClass.value}\n              style={dialogStyle.value}\n              v-draggable={isModeLess.value && props.draggable}\n              ref={dialogEle}\n            >\n              <div class={headerClassName} onmousedown={onStopDown}>\n                <div class={`${COMPONENT_NAME.value}__header-content`}>\n                  {getIcon()}\n                  {renderTNodeJSX('header', defaultHeader)}\n                </div>\n\n                {props.closeBtn ? (\n                  <span class={closeClassName} onClick={closeBtnAction}>\n                    {renderTNodeJSX('closeBtn', defaultCloseBtn)}\n                  </span>\n                ) : null}\n              </div>\n              <div class={bodyClassName} onmousedown={onStopDown}>\n                {body}\n              </div>\n              {footerContent && (\n                <div class={footerClassName} onmousedown={onStopDown}>\n                  {footerContent}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      );\n    };\n\n    onMounted(() => {\n      scrollWidth.value = window.innerWidth - document.body.offsetWidth;\n    });\n    onBeforeUnmount(() => {\n      addKeyboardEvent(false);\n    });\n\n    return {\n      COMPONENT_NAME,\n      scrollWidth,\n      isModal,\n      isModeLess,\n      isFullScreen,\n      maskClass,\n      dialogClass,\n      dialogStyle,\n      dialogEle,\n      afterEnter,\n      afterLeave,\n      hasEventOn,\n      renderDialog,\n    };\n  },\n  render() {\n    const { COMPONENT_NAME } = this;\n    const maskView = (this.isModal || this.isFullScreen) && <div key=\"mask\" class={this.maskClass}></div>;\n    const dialogView = this.renderDialog();\n    const view = [maskView, dialogView];\n    const ctxStyle = { zIndex: this.zIndex };\n    // dialog__ctx--fixed 绝对定位\n    // dialog__ctx--absolute 挂载在attach元素上 相对定位\n    // __ctx--modeless modeless 点击穿透\n    const ctxClass = [\n      `${COMPONENT_NAME}__ctx`,\n      {\n        [`${COMPONENT_NAME}__ctx--fixed`]: this.isModal || this.isFullScreen,\n        [`${COMPONENT_NAME}__ctx--absolute`]: this.isModal && this.showInAttachedElement,\n        [`${COMPONENT_NAME}__ctx--modeless`]: this.isModeLess,\n      },\n    ];\n    return (\n      <Transition\n        duration={300}\n        name={`${COMPONENT_NAME}-zoom__vue`}\n        onAfterEnter={this.afterEnter}\n        onAfterLeave={this.afterLeave}\n      >\n        {(!this.destroyOnClose || this.visible) && (\n          <div v-show={this.visible} class={ctxClass} style={ctxStyle} v-transfer-dom={this.attach}>\n            {view}\n          </div>\n        )}\n      </Transition>\n    );\n  },\n});\n"],"names":["GetCSSValue","v","Number","isNaN","mousePosition","getClickPosition","e","x","clientX","y","clientY","setTimeout","window","document","documentElement","addEventListener","InitDragEvent","dragBox","target","windowInnerWidth","innerWidth","clientWidth","windowInnerHeight","innerHeight","clientHeight","targetEvent","disX","offsetLeft","disY","offsetTop","dialogW","offsetWidth","dialogH","offsetHeight","mouseMoverHandler","documentEvent","left","top","style","position","mouseUpHandler","removeEventListener","defineComponent","name","directives","TransferDom","draggable","el","binding","value","props","emits","setup","context","COMPONENT_NAME","usePrefixClass","LOCK_CLASS","classPrefix","renderContent","useContent","renderTNodeJSX","useTNodeJSX","dialogEle","ref","useConfig","globalConfig","useGlobalIcon","CloseIcon","TdCloseIcon","InfoCircleFilledIcon","TdInfoCircleFilledIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","confirmBtnAction","onConfirm","cancelBtnAction","onCancel","emitCloseEvent","trigger","useAction","getConfirmBtn","getCancelBtn","useDestroyOnClose","scrollWidth","isModal","computed","mode","isModeLess","isNormal","isFullScreen","maskClass","showOverlay","positionClass","placement","wrapClass","positionStyle","topStyle","topValue","paddingTop","dialogClass","theme","push","dialogStyle","width","watch","visible","showInAttachedElement","preventScrollThrough","bodyCssText","body","cssText","addClass","nextTick","transformOrigin","activeElement","blur","removeClass","storeUid","addKeyboardEvent","instance","getCurrentInstance","flag","stack","uid","pop","status","keyboardEvent","confirmOnEnter","keyboardEnterEvent","code","onEscKeydown","closeOnEscKeydown","overlayAction","closeOnOverlayClick","onOverlayClick","useSameTarget","onClick","onMousedown","onMouseup","closeBtnAction","onCloseBtnClick","afterEnter","onOpened","afterLeave","onClosed","ctx","onClose","emit","hasEventOn","eventFuncs","length","getIcon","icon","info","warning","danger","success","renderDialog","defaultHeader","_createVNode","defaultCloseBtn","defaultFooter","cancelBtn","globalCancel","cancel","className","confirmBtn","globalConfirm","confirm","globalConfirmBtnTheme","confirmBtnTheme","headerClassName","closeClassName","bodyClassName","footerClassName","footerContent","onStopDown","stopPropagation","_withDirectives","closeBtn","onMounted","onBeforeUnmount","render","maskView","dialogView","view","ctxStyle","zIndex","ctxClass","destroyOnClose","_resolveDirective","attach"],"mappings":"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"}