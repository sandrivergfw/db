{"version":3,"file":"dep-412af6ff.mjs","sources":["../../node_modules/tinycolor2/tinycolor.js","../../src/_common/js/color-picker/gradient.ts"],"sourcesContent":["// TinyColor v1.4.2\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n","/* eslint-disable no-param-reassign */\n/**\n * 用于反解析渐变字符串为对象\n * https://stackoverflow.com/questions/20215440/parse-css-gradient-rule-with-javascript-regex\n */\nimport tinyColor from 'tinycolor2';\n\n/**\n * Utility combine multiple regular expressions.\n *\n * @param {RegExp[]|string[]} regexpList List of regular expressions or strings.\n * @param {string} flags Normal RegExp flags.\n */\nconst combineRegExp = (regexpList: (string | RegExp)[], flags: string): RegExp => {\n  let source = '';\n  for (let i = 0; i < regexpList.length; i++) {\n    if (typeof regexpList[i] === 'string') {\n      source += regexpList[i];\n    } else {\n      source += (regexpList[i] as RegExp).source;\n    }\n  }\n  return new RegExp(source, flags);\n};\n\ninterface RegExpLib {\n  gradientSearch: RegExp;\n  colorStopSearch: RegExp;\n}\n\ninterface ColorStop {\n  color: string;\n  position?: string;\n}\n\ninterface ParseGradientResult {\n  original: string;\n  colorStopList?: ColorStop[];\n  line?: string;\n  angle?: string;\n  sideCorner?: string;\n}\n\n/**\n * Generate the required regular expressions once.\n *\n * Regular Expressions are easier to manage this way and can be well described.\n *\n * @result {object} Object containing regular expressions.\n */\nconst generateRegExp = (): RegExpLib => {\n  // Note any variables with \"Capture\" in name include capturing bracket set(s).\n  const searchFlags = 'gi'; // ignore case for angles, \"rgb\" etc\n  const rAngle = /(?:[+-]?\\d*\\.?\\d+)(?:deg|grad|rad|turn)/; // Angle +ive, -ive and angle types\n  // optional 2nd part\n  const rSideCornerCapture = /to\\s+((?:(?:left|right|top|bottom)(?:\\s+(?:top|bottom|left|right))?))/;\n  const rComma = /\\s*,\\s*/; // Allow space around comma.\n  const rColorHex = /#(?:[a-f0-9]{6}|[a-f0-9]{3})/; // 3 or 6 character form\n  const rDigits3 = /\\(\\s*(?:\\d{1,3}\\s*,\\s*){2}\\d{1,3}\\s*\\)/;\n  const // \"(1, 2, 3)\"\n    rDigits4 = /\\(\\s*(?:\\d{1,3}\\s*,\\s*){2}\\d{1,3}\\s*,\\s*\\d*\\.?\\d+\\)/;\n  const // \"(1, 2, 3, 4)\"\n    rValue = /(?:[+-]?\\d*\\.?\\d+)(?:%|[a-z]+)?/;\n  const // \".9\", \"-5px\", \"100%\".\n    rKeyword = /[_a-z-][_a-z0-9-]*/;\n  const // \"red\", \"transparent\".\n    rColor = combineRegExp(\n      ['(?:', rColorHex, '|', '(?:rgb|hsl)', rDigits3, '|', '(?:rgba|hsla)', rDigits4, '|', rKeyword, ')'],\n      '',\n    );\n  const rColorStop = combineRegExp([rColor, '(?:\\\\s+', rValue, '(?:\\\\s+', rValue, ')?)?'], '');\n  const // Single Color Stop, optional %, optional length.\n    rColorStopList = combineRegExp(['(?:', rColorStop, rComma, ')*', rColorStop], '');\n  const // List of color stops min 1.\n    rLineCapture = combineRegExp(['(?:(', rAngle, ')|', rSideCornerCapture, ')'], '');\n  const // Angle or SideCorner\n    rGradientSearch = combineRegExp(['(?:(', rLineCapture, ')', rComma, ')?(', rColorStopList, ')'], searchFlags);\n  const // Capture 1:\"line\", 2:\"angle\" (optional), 3:\"side corner\" (optional) and 4:\"stop list\".\n    rColorStopSearch = combineRegExp(\n      ['\\\\s*(', rColor, ')', '(?:\\\\s+', '(', rValue, '))?', '(?:', rComma, '\\\\s*)?'],\n      searchFlags,\n    ); // Capture 1:\"color\" and 2:\"position\" (optional).\n\n  return {\n    gradientSearch: rGradientSearch,\n    colorStopSearch: rColorStopSearch,\n  };\n};\n\n/**\n * Actually parse the input gradient parameters string into an object for reusability.\n *\n *\n * @note Really this only supports the standard syntax not historical versions, see MDN for details\n *       https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient\n *\n * @param regExpLib\n * @param {string} input\n * @returns {object|undefined}\n */\nconst parseGradient = (regExpLib: RegExpLib, input: string) => {\n  let result: ParseGradientResult;\n  let matchColorStop: any;\n  let stopResult: ColorStop;\n\n  // reset search position, because we reuse regex.\n  regExpLib.gradientSearch.lastIndex = 0;\n\n  const matchGradient = regExpLib.gradientSearch.exec(input);\n  if (matchGradient !== null) {\n    result = {\n      original: matchGradient[0],\n      colorStopList: [],\n    };\n\n    // Line (Angle or Side-Corner).\n    if (matchGradient[1]) {\n      // eslint-disable-next-line prefer-destructuring\n      result.line = matchGradient[1];\n    }\n    // Angle or undefined if side-corner.\n    if (matchGradient[2]) {\n      // eslint-disable-next-line prefer-destructuring\n      result.angle = matchGradient[2];\n    }\n    // Side-corner or undefined if angle.\n    if (matchGradient[3]) {\n      // eslint-disable-next-line prefer-destructuring\n      result.sideCorner = matchGradient[3];\n    }\n\n    // reset search position, because we reuse regex.\n    regExpLib.colorStopSearch.lastIndex = 0;\n\n    // Loop though all the color-stops.\n    matchColorStop = regExpLib.colorStopSearch.exec(matchGradient[4]);\n    while (matchColorStop !== null) {\n      stopResult = {\n        color: matchColorStop[1],\n      };\n\n      // Position (optional).\n      if (matchColorStop[2]) {\n        // eslint-disable-next-line prefer-destructuring\n        stopResult.position = matchColorStop[2];\n      }\n      result.colorStopList.push(stopResult);\n\n      // Continue searching from previous position.\n      matchColorStop = regExpLib.colorStopSearch.exec(matchGradient[4]);\n    }\n  }\n\n  // Can be undefined if match not found.\n  return result;\n};\n\nexport interface GradientColorPoint {\n  id?: string;\n  color?: string;\n  left?: number;\n}\n\nexport interface GradientColors {\n  points: GradientColorPoint[];\n  degree: number;\n}\n\nconst REGEXP_LIB = generateRegExp();\nconst REG_GRADIENT = /.*gradient\\s*\\(((?:\\([^)]*\\)|[^)(]*)*)\\)/gim;\n\n/**\n * 验证是否是渐变字符串\n * @param input\n * @returns\n */\nexport const isGradientColor = (input: string): null | RegExpExecArray => {\n  REG_GRADIENT.lastIndex = 0;\n  return REG_GRADIENT.exec(input);\n};\n\n// 边界字符串和角度关系\nconst sideCornerDegreeMap = {\n  top: 0,\n  right: 90,\n  bottom: 180,\n  left: 270,\n  'top left': 225,\n  'left top': 225,\n  'top right': 135,\n  'right top': 135,\n  'bottom left': 315,\n  'left bottom': 315,\n  'bottom right': 45,\n  'right bottom': 45,\n};\n\n/**\n * 解析渐变字符串为 GradientColors 对象\n * @param input\n * @returns\n */\nexport const parseGradientString = (input: string): GradientColors | boolean => {\n  const match = isGradientColor(input);\n  if (!match) {\n    return false;\n  }\n  const gradientColors: GradientColors = {\n    points: [],\n    degree: 0,\n  };\n\n  const result: ParseGradientResult = parseGradient(REGEXP_LIB, match[1]);\n  if (result.original.trim() !== match[1].trim()) {\n    return false;\n  }\n  const points: GradientColorPoint[] = result.colorStopList.map(({ color, position }) => {\n    const point = Object.create(null);\n    point.color = tinyColor(color).toRgbString();\n    point.left = parseFloat(position);\n    return point;\n  });\n  gradientColors.points = points;\n  let degree = parseInt(result.angle, 10);\n  if (Number.isNaN(degree)) {\n    degree = sideCornerDegreeMap[result.sideCorner] || 90;\n  }\n  gradientColors.degree = degree;\n\n  return gradientColors;\n};\n\nexport default parseGradientString;\n"],"names":["Math","trimLeft","trimRight","tinyCounter","mathRound","round","mathMin","min","mathMax","max","mathRandom","random","tinycolor","color","opts","rgb","inputToRGB","_originalInput","_r","r","_g","g","_b","b","_a","a","_roundA","_format","format","_gradientType","gradientType","_ok","ok","_tc_id","prototype","isDark","getBrightness","isLight","isValid","getOriginalInput","getFormat","getAlpha","toRgb","getLuminance","RsRGB","GsRGB","BsRGB","R","G","B","pow","setAlpha","value","boundAlpha","toHsv","hsv","rgbToHsv","h","s","v","toHsvString","toHsl","hsl","rgbToHsl","l","toHslString","toHex","allow3Char","rgbToHex","toHexString","toHex8","allow4Char","rgbaToHex","toHex8String","toRgbString","toPercentageRgb","bound01","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","rgbaToArgbHex","secondHex8String","toString","formatSet","formattedString","hasAlpha","needsAlphaFormat","clone","_applyModification","fn","args","apply","concat","slice","call","lighten","arguments","brighten","darken","desaturate","saturate","greyscale","spin","_applyCombination","analogous","complement","monochromatic","splitcomplement","triad","tetrad","fromRatio","newColor","i","hasOwnProperty","convertToPercentage","stringInputToObject","isValidCSSUnit","rgbToRgb","String","substr","hsvToRgb","hslToRgb","d","hue2rgb","p","q","t","floor","f","mod","hex","pad2","charAt","join","convertDecimalToHex","equals","color1","color2","amount","clamp01","hue","results","slices","part","ret","push","modification","mix","rgb1","rgb2","rgba","readability","c1","c2","isReadable","wcag2","wcag2Parms","out","validateWCAG2Parms","level","size","mostReadable","baseColor","colorList","bestColor","bestScore","includeFallbackColors","length","names","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flip","o","flipped","parseFloat","isNaN","n","isOnePointZero","processPercent","isPercentage","parseInt","abs","val","parseIntFromHex","indexOf","c","convertHexToDecimal","matchers","CSS_INTEGER","CSS_NUMBER","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","hsla","hsva","hex3","hex6","hex4","hex8","exec","replace","toLowerCase","named","match","parms","toUpperCase","module","exports","define","amd","window","combineRegExp","regexpList","flags","source","generateRegExp","searchFlags","rAngle","rSideCornerCapture","rComma","rColorHex","rDigits3","rDigits4","rValue","rKeyword","rColor","rColorStop","rColorStopList","rLineCapture","rGradientSearch","rColorStopSearch","gradientSearch","colorStopSearch","parseGradient","regExpLib","input","result","matchColorStop","stopResult","lastIndex","matchGradient","original","colorStopList","line","angle","sideCorner","position","REGEXP_LIB","REG_GRADIENT","isGradientColor","sideCornerDegreeMap","top","right","bottom","left","parseGradientString","gradientColors","points","degree","trim","map","point","Object","create","tinyColor","Number"],"mappings":"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"}