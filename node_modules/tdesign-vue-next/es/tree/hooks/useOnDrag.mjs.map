{"version":3,"file":"useOnDrag.mjs","sources":["../../../src/tree/hooks/useOnDrag.ts"],"sourcesContent":["import { ref, Ref, provide, getCurrentInstance } from 'vue';\nimport TreeStore from '../../_common/js/tree/tree-store';\nimport TreeNode from '../../_common/js/tree/tree-node';\nimport { dragInjectKey } from '../constants';\n\nexport default function useOnDrag(treeStore: Ref<TreeStore>) {\n  const dragNode = ref<TreeNode>();\n  const { emit } = getCurrentInstance();\n\n  const onDragStart = (context: { node: TreeNode; e: DragEvent }) => {\n    dragNode.value = context.node;\n    emit?.('dragStart', context);\n  };\n\n  const onDragEnd = (context: { node: TreeNode; e: DragEvent }) => {\n    dragNode.value = context.node;\n    emit?.('dragEnd', context);\n  };\n\n  const onDragOver = (context: { node: TreeNode; e: DragEvent }) => {\n    emit?.('dragOver', context);\n  };\n\n  const onDragLeave = (context: { node: TreeNode; e: DragEvent }) => {\n    emit?.('dragLeave', context);\n  };\n\n  const onDrop = (context: { node: TreeNode; dropPosition: number; e: DragEvent }) => {\n    const { node, dropPosition } = context;\n    if (node.value === dragNode.value.value || node.getParents().some((_node) => _node.value === dragNode.value.value))\n      return;\n\n    const nodes = treeStore.value.getNodes() as TreeNode[];\n    nodes.some((_node, _index) => {\n      if (_node.value === node.value) {\n        if (dropPosition === 0) {\n          dragNode.value.appendTo(treeStore.value, _node);\n        } else if (dropPosition < 0) {\n          node.insertBefore(dragNode.value);\n        } else {\n          node.insertAfter(dragNode.value);\n        }\n        return true;\n      }\n      return false;\n    });\n    emit?.('drop', context);\n  };\n  provide(dragInjectKey, {\n    onDragStart,\n    onDragEnd,\n    onDragOver,\n    onDragLeave,\n    onDrop,\n  });\n}\n"],"names":["useOnDrag","treeStore","dragNode","ref","getCurrentInstance","emit","onDragStart","context","value","node","onDragEnd","onDragOver","onDragLeave","onDrop","dropPosition","getParents","some","_node","nodes","getNodes","_index","appendTo","insertBefore","insertAfter","provide","dragInjectKey"],"mappings":"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"}