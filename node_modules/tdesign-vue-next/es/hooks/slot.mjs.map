{"version":3,"file":"slot.mjs","sources":["../../src/hooks/slot.ts"],"sourcesContent":["import { Slots, VNode, Component, getCurrentInstance, Fragment, Comment } from 'vue';\n\n/**\n * 渲染default slot，获取子组件VNode。处理多种子组件创建场景\n * 使用场景：<t-steps> <t-steps-item /> </t-steps>, <t-steps> <t-steps-item v-for=\"(item, index)\" :key=\"index\" /> </t-steps>\n * @returns {function(childComponentName: string, slots: Slots): VNode[]}\n * @param childComponentName\n * @param slots\n * @example const getChildByName = useChildComponentSlots()\n * @example getChildComponentByName('TStepItem')\n */\nexport function useChildComponentSlots() {\n  const instance = getCurrentInstance();\n  return (childComponentName: string, slots?: Slots): VNode[] => {\n    if (!slots) {\n      slots = instance.slots;\n    }\n    const content = slots?.default?.() || [];\n\n    // 满足基于基础组件封装场景，递归找到子组件\n    const childList: VNode[] = [];\n    const getChildren = (content: VNode[]) => {\n      if (!Array.isArray(content)) return;\n      content.forEach((item: VNode) => {\n        if (item.children && Array.isArray(item.children)) {\n          if (item.type !== Fragment) return;\n          getChildren(item.children as VNode[]);\n        } else {\n          childList.push(item);\n        }\n      });\n      return childList;\n    };\n\n    return getChildren(content).filter((item: VNode) =>\n      (item.type as Component).name?.endsWith(childComponentName),\n    ) as VNode[];\n  };\n}\n\n/**\n * 渲染default slot，获取slot child\n * @param childComponentName\n * @param slots\n * @example const getChildSlots = useChildSlots()\n * @example getChildSlots()\n */\nexport function useChildSlots() {\n  const instance = getCurrentInstance();\n  return () => {\n    const { slots } = instance;\n    const content = slots?.default?.() || [];\n\n    return content\n      .filter((item) => {\n        return item.type !== Comment;\n      })\n      .map((item) => {\n        if (item.children && Array.isArray(item.children) && item.type === Fragment) return item.children;\n        return item;\n      })\n      .flat();\n  };\n}\n"],"names":["useChildComponentSlots","instance","getCurrentInstance","childComponentName","slots","content","childList","getChildren","Array","isArray","forEach","item","children","type","Fragment","push","filter","name","endsWith","useChildSlots","Comment","map","flat"],"mappings":";;;;;;;;AAWO,SAASA,sBAAyB,GAAA;EACvC,IAAMC,WAAWC,kBAAmB,EAAA,CAAA;AAC7B,EAAA,OAAA,UAACC,oBAA4BC,KAA2B,EAAA;AAAA,IAAA,IAAA,MAAA,EAAA,cAAA,CAAA;IAC7D,IAAI,CAACA,KAAO,EAAA;MACVA,KAAA,GAAQH,QAAS,CAAAG,KAAA,CAAA;AACnB,KAAA;IACA,IAAMC,OAAU,GAAA,CAAAD,CAAAA,MAAAA,GAAAA,KAAA,6DAAA,MAAiB,CAAA,SAAA,CAAA,MAAA,IAAA,IAAA,cAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAjB,cAAiB,CAAA,IAAA,CAAA,MAAA,CAAA,KAAK,EAAC,CAAA;IAGvC,IAAME,YAAqB,EAAC,CAAA;AACtB,IAAA,IAAAC,WAAA,GAAc,SAAdA,WAAA,CAAeF,QAAqB,EAAA;AACpC,MAAA,IAAA,CAACG,KAAM,CAAAC,OAAA,CAAQJ,QAAO,CAAA,EAAG,OAAA;AAC7BA,MAAAA,QAAAA,CAAQK,OAAQ,CAAA,UAACC,IAAgB,EAAA;AAC/B,QAAA,IAAIA,KAAKC,QAAY,IAAAJ,KAAA,CAAMC,OAAQ,CAAAE,IAAA,CAAKC,QAAQ,CAAG,EAAA;AACjD,UAAA,IAAID,KAAKE,IAAS,KAAAC,QAAA,EAAU,OAAA;AAC5BP,UAAAA,WAAA,CAAYI,KAAKC,QAAmB,CAAA,CAAA;AACtC,SAAO,MAAA;AACLN,UAAAA,SAAA,CAAUS,KAAKJ,IAAI,CAAA,CAAA;AACrB,SAAA;AACF,OAAC,CAAA,CAAA;AACM,MAAA,OAAAL,SAAA,CAAA;KACT,CAAA;IAEO,OAAAC,WAAA,CAAYF,OAAO,CAAE,CAAAW,MAAA,CAAO,UAACL,IACjC,EAAA;AAAA,MAAA,IAAA,eAAA,CAAA;MAAA,OAAAA,CAAAA,eAAAA,GAAAA,IAAA,CAAKE,IAAmB,CAAAI,IAAA,oDAAxB,eAA8BC,CAAAA,SAASf,kBAAkB,CAAA,CAAA;KAC5D,CAAA,CAAA;GACF,CAAA;AACF,CAAA;AASO,SAASgB,aAAgB,GAAA;EAC9B,IAAMlB,WAAWC,kBAAmB,EAAA,CAAA;AACpC,EAAA,OAAO,YAAM;AAAA,IAAA,IAAA,eAAA,CAAA;AACL,IAAA,IAAEE,QAAUH,QAAA,CAAVG;AACR,IAAA,IAAMC,OAAU,GAAA,CAAAD,KAAA,aAAAA,KAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,eAAA,GAAAA,KAAA,CAAA,SAAA,CAAiB,MAAjB,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,eAAA,CAAA,IAAA,CAAAA,KAAA,CAAiB,KAAK,EAAC,CAAA;AAEhC,IAAA,OAAAC,OAAA,CACJW,MAAO,CAAA,UAACL,IAAS,EAAA;AAChB,MAAA,OAAOA,KAAKE,IAAS,KAAAO,OAAA,CAAA;AACvB,KAAC,CAAA,CACAC,GAAI,CAAA,UAACV,IAAS,EAAA;MACT,IAAAA,IAAA,CAAKC,YAAYJ,KAAM,CAAAC,OAAA,CAAQE,KAAKC,QAAQ,CAAA,IAAKD,KAAKE,IAAS,KAAAC,QAAA,EAAU,OAAOH,IAAK,CAAAC,QAAA,CAAA;AAClF,MAAA,OAAAD,IAAA,CAAA;KACR,EACAW,IAAK,EAAA,CAAA;GACV,CAAA;AACF;;;;"}