{"version":3,"file":"skeleton.mjs","sources":["../../src/skeleton/skeleton.tsx"],"sourcesContent":["import { h, defineComponent, ref, watch } from 'vue';\nimport isNumber from 'lodash/isNumber';\nimport isFunction from 'lodash/isFunction';\nimport props from './props';\nimport { SkeletonRowCol, SkeletonRowColObj, TdSkeletonProps } from './type';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useContent } from '../hooks/tnode';\n\nconst ThemeMap: Record<TdSkeletonProps['theme'], SkeletonRowCol> = {\n  text: [1],\n  avatar: [{ type: 'circle', size: '56px' }],\n  paragraph: [1, 1, { width: '70%' }],\n  'avatar-text': [[{ type: 'circle' }, { type: 'text', height: '32px' }]],\n  tab: [{ height: '30px' }, { height: '200px' }],\n  article: [\n    { type: 'rect', height: '30px', width: '100%' },\n    { type: 'rect', height: '200px', width: '100%' },\n    [\n      { type: 'text', height: '30px' },\n      { type: 'text', height: '30px' },\n      { type: 'text', height: '30px' },\n    ],\n    [\n      { type: 'text', height: '30px' },\n      { type: 'text', height: '30px' },\n    ],\n    [\n      { type: 'text', height: '30px' },\n      { type: 'text', height: '30px' },\n    ],\n    [\n      { type: 'text', height: '30px' },\n      { type: 'text', height: '30px' },\n    ],\n  ],\n};\n\nconst getColItemStyle = (obj: SkeletonRowColObj) => {\n  const styleName = ['width', 'height', 'marginRight', 'marginLeft', 'margin', 'size', 'background', 'backgroundColor'];\n  const style = Object.create(null);\n  styleName.forEach((name) => {\n    if (name in obj) {\n      const px = isNumber(obj[name]) ? `${obj[name]}px` : obj[name];\n      if (name === 'size') {\n        [style.width, style.height] = [px, px];\n      } else {\n        style[name] = px;\n      }\n    }\n  });\n  return style;\n};\n\nexport default defineComponent({\n  name: 'TSkeleton',\n\n  props: { ...props },\n\n  setup(props, { slots }) {\n    const isShow = ref(false);\n    const COMPONENT_NAME = usePrefixClass('skeleton');\n    const renderContent = useContent();\n    const getColItemClass = (obj: SkeletonRowColObj) => [\n      `${COMPONENT_NAME.value}__col`,\n      `${COMPONENT_NAME.value}--type-${obj.type || 'text'}`,\n      { [`${COMPONENT_NAME.value}--animation-${props.animation}`]: props.animation },\n    ];\n\n    const renderCols = (_cols: Number | SkeletonRowColObj | Array<SkeletonRowColObj>) => {\n      let cols: Array<SkeletonRowColObj> = [];\n      if (Array.isArray(_cols)) {\n        cols = _cols;\n      } else if (isNumber(_cols)) {\n        cols = new Array(_cols).fill({ type: 'text' });\n      } else {\n        cols = [_cols as SkeletonRowColObj];\n      }\n      return cols.map((obj) => (\n        <div class={getColItemClass(obj)} style={getColItemStyle(obj)}>\n          {isFunction(obj.content) ? obj.content(h) : obj.content}\n        </div>\n      ));\n    };\n\n    const renderRowCol = (_rowCol?: SkeletonRowCol) => {\n      const rowCol: SkeletonRowCol = _rowCol || props.rowCol;\n\n      const getBlockClass = () => [`${COMPONENT_NAME.value}__row`];\n\n      return rowCol.map((item) => <div class={getBlockClass()}>{renderCols(item)}</div>);\n    };\n\n    watch(\n      () => props.loading,\n      (val) => {\n        if (!val || props.delay === 0) {\n          isShow.value = val;\n          return;\n        }\n        setTimeout(() => {\n          isShow.value = val;\n        }, props.delay);\n      },\n      { immediate: true },\n    );\n\n    return () => {\n      const content = renderContent('default', 'content');\n\n      if (slots.default && !isShow.value) {\n        return <div>{content}</div>;\n      }\n\n      if (!isShow.value) {\n        return;\n      }\n\n      const children = [];\n      if (props.theme) {\n        children.push(renderRowCol(ThemeMap[props.theme]));\n      }\n      if (props.rowCol) {\n        children.push(renderRowCol(props.rowCol));\n      }\n      if (!props.theme && !props.rowCol) {\n        // 什么都不传时，传入默认 rowCol\n        children.push(renderRowCol([1, 1, 1, { width: '70%' }]));\n      }\n\n      return <div class={COMPONENT_NAME.value}>{children}</div>;\n    };\n  },\n});\n"],"names":["ThemeMap","text","avatar","type","size","paragraph","width","height","tab","article","getColItemStyle","obj","styleName","style","Object","create","forEach","name","px","isNumber","defineComponent","props","setup","slots","isShow","ref","COMPONENT_NAME","usePrefixClass","renderContent","useContent","getColItemClass","value","animation","renderCols","_cols","cols","Array","isArray","fill","map","_createVNode","isFunction","content","h","renderRowCol","_rowCol","rowCol","getBlockClass","item","watch","loading","val","delay","setTimeout","immediate","children","theme","push"],"mappings":"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"}