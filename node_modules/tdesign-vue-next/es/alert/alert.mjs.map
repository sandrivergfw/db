{"version":3,"file":"alert.mjs","sources":["../../src/alert/alert.tsx"],"sourcesContent":["import { defineComponent, VNode, ref, onMounted, onBeforeUnmount } from 'vue';\nimport {\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n  CloseIcon as TdCloseIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n  HelpCircleFilledIcon as TdHelpCircleFilledIcon,\n  InfoCircleFilledIcon as TdInfoCircleFilledIcon,\n} from 'tdesign-icons-vue-next';\n\nimport { on, off, addClass } from '../utils/dom';\nimport props from './props';\nimport { SlotReturnValue } from '../common';\nimport { useIcon } from '../hooks/icon';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport { useConfig, usePrefixClass } from '../hooks/useConfig';\n\nimport { useTNodeJSX } from '../hooks/tnode';\n\nexport default defineComponent({\n  name: 'TAlert',\n  props,\n  setup(props) {\n    const { globalConfig, classPrefix } = useConfig('alert');\n    const { CheckCircleFilledIcon, CloseIcon, ErrorCircleFilledIcon, HelpCircleFilledIcon, InfoCircleFilledIcon } =\n      useGlobalIcon({\n        CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n        CloseIcon: TdCloseIcon,\n        ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n        HelpCircleFilledIcon: TdHelpCircleFilledIcon,\n        InfoCircleFilledIcon: TdInfoCircleFilledIcon,\n      });\n    const COMPONENT_NAME = usePrefixClass('alert');\n    const renderTNodeJSX = useTNodeJSX();\n\n    const renderIconTNode = useIcon();\n    // alert的dom引用\n    const alertRef = ref<HTMLElement | null>(null);\n    // description的dom引用\n    const descriptionRef = ref<HTMLElement | null>(null);\n    // desc高度\n    const descHeight = ref(0);\n    // 是否可见，关闭后置为false\n    const visible = ref(true);\n    // 是否已收起，使用折叠功能时有效，用于表示是否已折叠；默认折叠\n    const collapsed = ref(true);\n\n    const renderIcon = () => {\n      const Component = {\n        info: InfoCircleFilledIcon,\n        success: CheckCircleFilledIcon,\n        warning: ErrorCircleFilledIcon,\n        error: ErrorCircleFilledIcon,\n        question: HelpCircleFilledIcon,\n      };\n      const iconContent = renderIconTNode('icon', Component);\n      return iconContent ? <div class={`${COMPONENT_NAME.value}__icon`}>{iconContent}</div> : null;\n    };\n\n    const renderClose = () => {\n      const { close } = props;\n      let closeContent = null;\n      if (close === true || close === '') {\n        closeContent = <CloseIcon />;\n      } else if (typeof close === 'string') {\n        closeContent = close;\n      } else {\n        closeContent = renderIconTNode('close');\n      }\n      return closeContent ? (\n        <div class={`${COMPONENT_NAME.value}__close`} onClick={handleClose}>\n          {closeContent}\n        </div>\n      ) : null;\n    };\n\n    const renderTitle = () => {\n      const titleContent = renderTNodeJSX('title');\n      return titleContent ? <div class={`${COMPONENT_NAME.value}__title`}> {titleContent}</div> : null;\n    };\n\n    const renderMessage = () => {\n      const operationContent = renderTNodeJSX('operation');\n      return (\n        <div class={`${COMPONENT_NAME.value}__message`}>\n          {renderDescription()}\n          {operationContent ? <div class={`${COMPONENT_NAME.value}__operation`}>{operationContent}</div> : null}\n        </div>\n      );\n    };\n\n    const renderDescription = () => {\n      let messageContent;\n\n      messageContent = renderTNodeJSX('default');\n      if (!messageContent) {\n        messageContent = renderTNodeJSX('message');\n      }\n      const contentLength = Array.isArray(messageContent) ? (messageContent as Array<SlotReturnValue>).length : 1;\n      const hasCollapse = props.maxLine > 0 && props.maxLine < contentLength;\n      const height = (descriptionRef.value?.children[0] as HTMLElement)?.offsetHeight;\n      if (hasCollapse && collapsed.value) {\n        // 折叠\n        messageContent = (messageContent as Array<SlotReturnValue>).slice(0, props.maxLine as number);\n        height && (descriptionRef.value.style.height = `${descHeight.value}px`);\n      } else if (hasCollapse) {\n        // 展开\n        height &&\n          (descriptionRef.value.style.height = `${height * (contentLength - props.maxLine) + descHeight.value}px`);\n      }\n\n      // 如果需要折叠，则元素之间补<br/>；否则不补\n      return (\n        <div class={`${COMPONENT_NAME.value}__description`} ref={descriptionRef}>\n          {hasCollapse\n            ? (messageContent as Array<string | VNode>).map((content) => <div>{content}</div>)\n            : messageContent}\n          {hasCollapse ? (\n            <div\n              class={`${COMPONENT_NAME.value}__collapse`}\n              onClick={() => {\n                collapsed.value = !collapsed.value;\n              }}\n            >\n              {collapsed.value ? globalConfig.value.expandText : globalConfig.value.collapseText}\n            </div>\n          ) : null}\n        </div>\n      );\n    };\n    const renderContent = () => {\n      return (\n        <div class={`${COMPONENT_NAME.value}__content`}>\n          {renderTitle()}\n          {renderMessage()}\n        </div>\n      );\n    };\n    const handleClose = (e: MouseEvent) => {\n      props.onClose?.({ e });\n      addClass(alertRef.value, `${COMPONENT_NAME.value}--closing`);\n    };\n\n    const handleCloseEnd = (e: TransitionEvent) => {\n      const isTransitionTarget = e.target === alertRef.value;\n      // 防止子元素冒泡触发\n      if (e.propertyName === 'opacity' && isTransitionTarget) {\n        visible.value = false;\n        props.onClosed?.({ e });\n      }\n    };\n\n    onMounted(() => {\n      on(alertRef.value, 'transitionend', handleCloseEnd);\n      descHeight.value = descriptionRef.value.offsetHeight;\n    });\n    onBeforeUnmount(() => {\n      off(alertRef.value, 'transitionend', handleCloseEnd);\n    });\n\n    return () => (\n      <div\n        ref={alertRef}\n        class={[\n          `${COMPONENT_NAME.value}`,\n          `${COMPONENT_NAME.value}--${props.theme}`,\n          {\n            [`${classPrefix.value}-is-hidden`]: !visible.value,\n          },\n        ]}\n      >\n        {renderIcon()}\n        {renderContent()}\n        {renderClose()}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","setup","useConfig","globalConfig","classPrefix","useGlobalIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","CloseIcon","TdCloseIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","HelpCircleFilledIcon","TdHelpCircleFilledIcon","InfoCircleFilledIcon","TdInfoCircleFilledIcon","COMPONENT_NAME","usePrefixClass","renderTNodeJSX","useTNodeJSX","renderIconTNode","useIcon","alertRef","ref","descriptionRef","descHeight","visible","collapsed","renderIcon","Component","info","success","warning","error","question","iconContent","_createVNode","value","renderClose","close","closeContent","handleClose","renderTitle","titleContent","renderMessage","operationContent","renderDescription","messageContent","contentLength","Array","isArray","length","hasCollapse","maxLine","height","children","offsetHeight","slice","style","map","content","expandText","collapseText","renderContent","e","onClose","addClass","handleCloseEnd","isTransitionTarget","target","propertyName","onClosed","onMounted","on","onBeforeUnmount","off","theme"],"mappings":"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"}