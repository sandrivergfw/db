declare const _default: import("vue").DefineComponent<{
    disabled: BooleanConstructor;
    color: {
        type: import("vue").PropType<import("../utils").Color>;
    };
    onChange: {
        type: FunctionConstructor;
        default: () => () => void;
    };
}, {
    baseClassName: import("vue").ComputedRef<string>;
    statusClassNames: {
        loading: string;
        loadMore: string;
        disabled: string;
        focused: string;
        success: string;
        error: string;
        warning: string;
        selected: string;
        active: string;
        checked: string;
        current: string;
        hidden: string;
        visible: string;
        expanded: string;
        indeterminate: string;
    };
    refSlider: import("vue").Ref<HTMLElement>;
    degree: import("vue").Ref<number>;
    selectedId: import("vue").Ref<string>;
    colors: import("vue").Ref<{
        id?: string;
        color?: string;
        left?: number;
    }[]>;
    handleDegreeChange: (value: number) => void;
    handleStart: (id: string) => void;
    handleMove: (e: MouseEvent) => void;
    handleEnd: () => void;
    handleKeyup: (e: KeyboardEvent) => void;
    handleThumbBarClick: (e: MouseEvent) => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    disabled: BooleanConstructor;
    color: {
        type: import("vue").PropType<import("../utils").Color>;
    };
    onChange: {
        type: FunctionConstructor;
        default: () => () => void;
    };
}>>, {
    disabled: boolean;
    onChange: Function;
}>;
export default _default;
