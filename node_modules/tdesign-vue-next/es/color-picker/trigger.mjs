/**
 * tdesign v0.24.9
 * (c) 2022 tdesign
 * @license MIT
 */

import { defineComponent, ref, watch, createVNode, mergeProps } from 'vue';
import { Input } from '../input/index.mjs';
import './utils/index.mjs';
import { useBaseClassName } from './hooks.mjs';
import { Color } from '../_common/js/color-picker/color.mjs';
import '../input/input.mjs';
import '../_chunks/dep-b9d3e48f.mjs';
import '../_chunks/dep-b077039f.mjs';
import 'tdesign-icons-vue-next';
import '../input/props.mjs';
import '../form/hooks.mjs';
import '../hooks/useConfig.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-10b9d296.mjs';
import '../_chunks/dep-bedb7d80.mjs';
import '../_chunks/dep-dc72ac1e.mjs';
import '../_chunks/dep-55f8205a.mjs';
import '../_chunks/dep-4975791d.mjs';
import '../_chunks/dep-ecf1f329.mjs';
import '../_chunks/dep-bfc93151.mjs';
import '../_chunks/dep-178810f1.mjs';
import '../_chunks/dep-7a4db73f.mjs';
import '../_chunks/dep-da01978e.mjs';
import '../_chunks/dep-e97b14c2.mjs';
import '../_chunks/dep-df662d99.mjs';
import '../_chunks/dep-2539b27d.mjs';
import '../_chunks/dep-74473837.mjs';
import '../_chunks/dep-671fd175.mjs';
import '../_chunks/dep-708d2dc7.mjs';
import '../_chunks/dep-df473a63.mjs';
import '../_chunks/dep-2aad0459.mjs';
import '../_chunks/dep-cacce51a.mjs';
import '../_chunks/dep-03d7fa8b.mjs';
import '../_chunks/dep-ea278d31.mjs';
import '../_chunks/dep-3374d433.mjs';
import '../_chunks/dep-180ba4d7.mjs';
import '../_chunks/dep-0b20cec5.mjs';
import '../_chunks/dep-560cf0c7.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../config-provider/type.mjs';
import '../hooks/useGlobalIcon.mjs';
import '../hooks/tnode.mjs';
import '../_chunks/dep-de4be2ca.mjs';
import '../_chunks/dep-61d894c9.mjs';
import '../_chunks/dep-1375bf98.mjs';
import '../_chunks/dep-cd4a1d40.mjs';
import '../_chunks/dep-5179d432.mjs';
import '../_chunks/dep-7a8fb00c.mjs';
import '../_chunks/dep-9bb59c1a.mjs';
import '../_chunks/dep-96027ed5.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-64597fc0.mjs';
import '../_chunks/dep-cddb9124.mjs';
import '../_chunks/dep-a63b383f.mjs';
import '../input/useInput.mjs';
import '../_chunks/dep-a9a65d10.mjs';
import '../_chunks/dep-7fde6385.mjs';
import '../form/const.mjs';
import '../hooks/index.mjs';
import '../hooks/icon.mjs';
import '../hooks/slot.mjs';
import '../hooks/useCommonClassName.mjs';
import '../hooks/useDefaultValue.mjs';
import '../hooks/useDestroyOnClose.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../hooks/useRipple.mjs';
import '../utils/set-style.mjs';
import '../hooks/useVirtualScroll.mjs';
import '../hooks/useVModel.mjs';
import '../input/useLengthLimit.mjs';
import '../_common/js/log/index.mjs';
import '../_common/js/log/log.mjs';
import '../_common/js/utils/helper.mjs';
import '../_chunks/dep-4cfcf90d.mjs';
import '../input/useInputEventHandler.mjs';
import '../input/useInputWidth.mjs';
import '../input/input-group.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../input/type.mjs';
import '../_common/js/color-picker/index.mjs';
import '../_common/js/color-picker/cmyk.mjs';
import '../_common/js/color-picker/draggable.mjs';
import '../_chunks/dep-e677d52b.mjs';
import '../_chunks/dep-412af6ff.mjs';

var DefaultTrigger = defineComponent({
  name: "DefaultTrigger",
  inheritAttrs: false,
  props: {
    color: {
      type: String,
      "default": ""
    },
    disabled: {
      type: Boolean,
      "default": false
    },
    inputProps: {
      type: Object,
      "default": function _default() {
        return {
          autoWidth: true
        };
      }
    },
    onTriggerChange: {
      type: Function,
      "default": function _default() {
        return function () {};
      }
    }
  },
  setup: function setup(props) {
    var baseClassName = useBaseClassName();
    var value = ref(props.color);
    watch(function () {
      return [props.color];
    }, function () {
      return value.value = props.color;
    });
    var handleChange = function handleChange(input) {
      if (input === props.color) {
        return;
      }
      if (!Color.isValid(input)) {
        value.value = props.color;
      } else {
        value.value = input;
      }
      props.onTriggerChange(value.value);
    };
    return {
      baseClassName: baseClassName,
      value: value,
      handleChange: handleChange
    };
  },
  render: function render() {
    var _this = this;
    var baseClassName = this.baseClassName;
    var inputSlots = {
      label: function label() {
        return createVNode("div", {
          "class": ["".concat(baseClassName, "__trigger--default__color"), "".concat(baseClassName, "--bg-alpha")]
        }, [createVNode("span", {
          "class": ["color-inner"],
          "style": {
            background: _this.value
          }
        }, null)]);
      }
    };
    return createVNode("div", {
      "class": "".concat(baseClassName, "__trigger--default")
    }, [createVNode(Input, mergeProps(this.inputProps, {
      "modelValue": _this.value,
      "onUpdate:modelValue": function onUpdateModelValue($event) {
        return _this.value = $event;
      },
      "disabled": this.disabled,
      "onBlur": this.handleChange
    }), inputSlots)]);
  }
});

export { DefaultTrigger as default };
//# sourceMappingURL=trigger.mjs.map
