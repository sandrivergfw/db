{"version":3,"file":"upload.mjs","sources":["../../src/upload/upload.tsx"],"sourcesContent":["import { computed, defineComponent } from 'vue';\nimport { UploadIcon } from 'tdesign-icons-vue-next';\nimport props from './props';\nimport NormalFile from './themes/normal-file';\nimport DraggerFile from './themes/dragger-file';\nimport ImageCard from './themes/image-card';\nimport MultipleFlowList from './themes/multiple-flow-list';\nimport useUpload from './hooks/useUpload';\nimport Button from '../button';\nimport { CommonDisplayFileProps, UploadProps } from './interface';\nimport { UploadDragEvents } from './hooks/useDrag';\nimport CustomFile from './themes/custom-file';\nimport { useContent } from '../hooks/tnode';\n\nexport default defineComponent({\n  name: 'TUpload',\n\n  props,\n\n  setup(props: UploadProps, { slots, expose }) {\n    const renderContent = useContent();\n    const {\n      locale,\n      classPrefix,\n      triggerUploadText,\n      toUploadFiles,\n      displayFiles,\n      uploadValue,\n      sizeOverLimitMessage,\n      uploading,\n      tipsClasses,\n      errorClasses,\n      inputRef,\n      disabled,\n      onInnerRemove,\n      uploadFiles,\n      onNormalFileChange,\n      onDragFileChange,\n      triggerUpload,\n      cancelUpload,\n    } = useUpload(props);\n\n    expose({\n      upload: inputRef.value,\n      uploading,\n      triggerUpload,\n      uploadFiles,\n      cancelUpload,\n    });\n\n    const renderTrigger = () => {\n      const getDefaultTrigger = () => {\n        if (props.theme === 'file-input') {\n          return (\n            <Button disabled={disabled.value} variant=\"outline\" {...props.triggerButtonProps}>\n              {triggerUploadText.value}\n            </Button>\n          );\n        }\n        return (\n          <Button disabled={disabled.value} variant=\"outline\" icon={() => <UploadIcon />} {...props.triggerButtonProps}>\n            {triggerUploadText.value}\n          </Button>\n        );\n      };\n      return renderContent('default', 'trigger') || getDefaultTrigger();\n    };\n\n    const commonDisplayFileProps = computed<CommonDisplayFileProps>(() => ({\n      files: uploadValue.value,\n      toUploadFiles: toUploadFiles.value,\n      displayFiles: displayFiles.value,\n      theme: props.theme,\n      placeholder: props.placeholder,\n      disabled: disabled.value,\n      tips: props.tips,\n      status: props.status,\n      sizeOverLimitMessage: sizeOverLimitMessage.value,\n      uploading: uploading.value,\n      classPrefix: classPrefix.value,\n      tipsClasses,\n      errorClasses,\n      locale: locale.value,\n      autoUpload: props.autoUpload,\n      abridgeName: props.abridgeName,\n      fileListDisplay: props.fileListDisplay,\n      onRemove: onInnerRemove,\n    }));\n\n    const dragProps: UploadDragEvents = {\n      onDragFileChange,\n      onDragenter: props.onDragenter,\n      onDragleave: props.onDragleave,\n      onDrop: props.onDrop,\n    };\n\n    const getNormalFileNode = () => (\n      <NormalFile\n        {...commonDisplayFileProps.value}\n        multiple={props.multiple}\n        v-slots={{ fileListDisplay: slots.fileListDisplay }}\n      >\n        <div class={`${classPrefix.value}-upload__trigger`} onClick={triggerUpload}>\n          {renderTrigger()}\n        </div>\n      </NormalFile>\n    );\n\n    const getSingleFileDraggerUploadNode = () => (\n      <DraggerFile\n        {...commonDisplayFileProps.value}\n        dragEvents={dragProps}\n        trigger={props.trigger}\n        cancelUpload={cancelUpload}\n        triggerUpload={triggerUpload}\n        uploadFiles={uploadFiles}\n      />\n    );\n\n    const getImageCardUploadNode = () => (\n      <ImageCard\n        {...commonDisplayFileProps.value}\n        multiple={props.multiple}\n        max={props.max}\n        showUploadProgress={props.showUploadProgress}\n        triggerUpload={triggerUpload}\n        uploadFiles={uploadFiles}\n        cancelUpload={cancelUpload}\n        onPreview={props.onPreview}\n      />\n    );\n\n    const getFlowListNode = () => (\n      <MultipleFlowList\n        {...commonDisplayFileProps.value}\n        isBatchUpload={props.isBatchUpload}\n        draggable={props.draggable}\n        dragEvents={dragProps}\n        uploadFiles={uploadFiles}\n        cancelUpload={cancelUpload}\n        onPreview={props.onPreview}\n        slots={Object.keys(slots).length ? slots : undefined}\n      >\n        <div class={`${classPrefix.value}-upload__trigger`} onClick={triggerUpload}>\n          {renderTrigger()}\n        </div>\n      </MultipleFlowList>\n    );\n\n    const getCustomFile = () => (\n      <CustomFile\n        {...commonDisplayFileProps.value}\n        draggable={props.draggable}\n        dragContent={props.dragContent}\n        dragEvents={dragProps}\n        triggerUpload={triggerUpload}\n        trigger={props.trigger}\n        childrenNode={slots.default}\n        v-slots={{\n          dragContent: slots.dragContent,\n          trigger: slots.trigger,\n        }}\n      >\n        {renderTrigger()}\n      </CustomFile>\n    );\n\n    return () => (\n      <div class={`${classPrefix.value}-upload`}>\n        <input\n          ref={inputRef}\n          type=\"file\"\n          disabled={disabled.value}\n          onChange={onNormalFileChange}\n          multiple={props.multiple}\n          accept={props.accept}\n          hidden\n        />\n        {['file', 'file-input'].includes(props.theme) && !props.draggable && getNormalFileNode()}\n        {['file', 'image'].includes(props.theme) && props.draggable && getSingleFileDraggerUploadNode()}\n        {props.theme === 'image' && !props.draggable && getImageCardUploadNode()}\n        {['image-flow', 'file-flow'].includes(props.theme) && getFlowListNode()}\n        {props.theme === 'custom' && getCustomFile()}\n\n        {props.tips && (\n          <small class={[tipsClasses, { [`${classPrefix.value}-upload__tips-${props.status}`]: props.status }]}>\n            {props.tips}\n          </small>\n        )}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","setup","slots","expose","renderContent","useContent","useUpload","locale","classPrefix","triggerUploadText","toUploadFiles","displayFiles","uploadValue","sizeOverLimitMessage","uploading","tipsClasses","errorClasses","inputRef","disabled","onInnerRemove","uploadFiles","onNormalFileChange","onDragFileChange","triggerUpload","cancelUpload","upload","value","renderTrigger","getDefaultTrigger","theme","_createVNode","_mergeProps","triggerButtonProps","commonDisplayFileProps","computed","files","placeholder","tips","status","autoUpload","abridgeName","fileListDisplay","onRemove","dragProps","onDragenter","onDragleave","onDrop","getNormalFileNode","multiple","getSingleFileDraggerUploadNode","trigger","getImageCardUploadNode","max","showUploadProgress","onPreview","getFlowListNode","isBatchUpload","draggable","Object","keys","length","getCustomFile","dragContent","accept","includes"],"mappings":"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"}