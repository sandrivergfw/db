{"version":3,"file":"radio.mjs","sources":["../../src/radio/radio.tsx"],"sourcesContent":["import { defineComponent, inject, toRefs, computed } from 'vue';\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { omit } from '../utils/helper';\nimport props from './props';\nimport { RadioGroupInjectionKey, RadioButtonInjectionKey } from './constants';\n\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport useVModel from '../hooks/useVModel';\nimport { useContent } from '../hooks/tnode';\n\nfunction getValidAttrs(obj: Record<string, any>): Record<string, any> {\n  const newObj = {};\n  Object.keys(obj).forEach((key) => {\n    if (typeof obj[key] !== 'undefined') {\n      newObj[key] = obj[key];\n    }\n  });\n  return newObj;\n}\n\nexport default defineComponent({\n  name: 'TRadio',\n  inheritAttrs: false,\n  props: { ...props },\n\n  setup(props, { attrs }) {\n    const { checked, modelValue } = toRefs(props);\n    const [innerChecked, setInnerChecked] = useVModel(\n      checked,\n      modelValue,\n      props.defaultChecked,\n      props.onChange,\n      'checked',\n    );\n    const radioChecked = computed(() => (radioGroup ? props.value === radioGroup.value : innerChecked.value));\n\n    const radioGroup = inject(RadioGroupInjectionKey, undefined);\n\n    /** Event */\n    const handleChange = (e: Event) => {\n      if (radioGroup?.setValue) {\n        radioGroup.setValue(props.value, { e });\n      } else {\n        const { checked } = e.target as HTMLInputElement;\n        setInnerChecked(checked, { e });\n      }\n    };\n    const handleClick = (e: MouseEvent) => {\n      e.stopPropagation();\n      props.onClick?.({ e });\n      if (!radioChecked.value || !props.allowUncheck) return;\n      if (radioGroup) {\n        radioGroup.setValue(undefined, { e });\n      } else {\n        setInnerChecked(false, { e });\n      }\n    };\n    const inputEvents = computed(() =>\n      getValidAttrs({\n        focus: attrs.onFocus,\n        blur: attrs.onBlur,\n        keydown: attrs.onKeydown,\n        keyup: attrs.onKeyup,\n        keypresss: attrs.onKeypresss,\n      }),\n    );\n    const wrapperAttrs = computed(() => {\n      const events = [...Object.keys(inputEvents.value), 'input', 'change'].map(\n        (str) => `on${str[0].toUpperCase()}${str.slice(1)}`,\n      );\n      return omit(attrs, events);\n    });\n    /** Event END */\n\n    // extend radioGroup disabled props\n    const groupDisabled = computed(() => radioGroup?.disabled);\n    const disabled = useFormDisabled(groupDisabled);\n\n    // attribute\n    const inputProps = computed(() => ({\n      name: radioGroup ? radioGroup.name : props.name,\n      checked: radioChecked.value,\n      disabled: disabled.value,\n      value: props.value,\n    }));\n\n    /** Style */\n    const { STATUS } = useCommonClassName();\n    const radioButton = inject(RadioButtonInjectionKey, undefined);\n    const radioBtnName = usePrefixClass('radio-button');\n    const COMPONENT_NAME = usePrefixClass('radio');\n    const prefixCls = computed(() => (radioButton ? radioBtnName.value : COMPONENT_NAME.value));\n    const inputClass = computed(() => [\n      `${prefixCls.value}`,\n      {\n        [STATUS.value.checked]: inputProps.value.checked,\n        [STATUS.value.disabled]: inputProps.value.disabled,\n      },\n    ]);\n    /** Style END */\n\n    const renderContent = useContent();\n\n    return () => (\n      <label class={inputClass.value} {...wrapperAttrs.value}>\n        <input\n          type=\"radio\"\n          class={`${prefixCls.value}__former`}\n          {...inputEvents.value}\n          {...inputProps.value}\n          onChange={handleChange}\n          onClick={handleClick}\n        />\n        <span class={`${prefixCls.value}__input`}></span>\n        <span class={`${prefixCls.value}__label`}>{renderContent('default', 'label')}</span>\n      </label>\n    );\n  },\n});\n"],"names":["getValidAttrs","obj","newObj","Object","keys","forEach","key","defineComponent","name","inheritAttrs","props","setup","attrs","toRefs","checked","modelValue","useVModel","defaultChecked","onChange","innerChecked","setInnerChecked","radioChecked","computed","radioGroup","value","inject","RadioGroupInjectionKey","handleChange","e","setValue","target","handleClick","stopPropagation","onClick","allowUncheck","inputEvents","focus","onFocus","blur","onBlur","keydown","onKeydown","keyup","onKeyup","keypresss","onKeypresss","wrapperAttrs","events","map","str","toUpperCase","slice","omit","groupDisabled","disabled","useFormDisabled","inputProps","useCommonClassName","STATUS","radioButton","RadioButtonInjectionKey","radioBtnName","usePrefixClass","COMPONENT_NAME","prefixCls","inputClass","renderContent","useContent","_createVNode","_mergeProps"],"mappings":"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"}