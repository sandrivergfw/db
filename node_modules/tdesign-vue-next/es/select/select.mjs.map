{"version":3,"file":"select.mjs","sources":["../../src/select/select.tsx"],"sourcesContent":["import { defineComponent, provide, computed, toRefs, watch, ref, nextTick } from 'vue';\nimport picker from 'lodash/pick';\nimport isArray from 'lodash/isArray';\nimport isFunction from 'lodash/isFunction';\nimport debounce from 'lodash/debounce';\nimport cloneDeep from 'lodash/cloneDeep';\nimport get from 'lodash/get';\nimport intersection from 'lodash/intersection';\n\nimport FakeArrow from '../common-components/fake-arrow';\nimport SelectInput from '../select-input';\nimport SelectPanel from './select-panel';\n\nimport props from './props';\nimport { TdSelectProps, SelectValue } from './type';\nimport { PopupVisibleChangeContext } from '../popup';\n\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport useDefaultValue from '../hooks/useDefaultValue';\nimport useVModel from '../hooks/useVModel';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { useConfig, usePrefixClass } from '../hooks/useConfig';\nimport { selectInjectKey, getSingleContent, getMultipleContent, getNewMultipleValue } from './helper';\nimport { useSelectOptions } from './hooks/useSelectOptions';\n\nexport default defineComponent({\n  name: 'TSelect',\n  props: { ...props },\n  setup(props: TdSelectProps, { slots, expose, ...res }) {\n    const classPrefix = usePrefixClass();\n    const disabled = useFormDisabled();\n    const renderTNodeJSX = useTNodeJSX();\n    const COMPONENT_NAME = usePrefixClass('select');\n    const { globalConfig, t } = useConfig('select');\n    const { popupVisible, inputValue, modelValue, value } = toRefs(props);\n    const [orgValue, setOrgValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const selectPanelRef = ref(null);\n    const selectInputRef = ref(null);\n    const keys = computed(() => ({\n      label: props.keys?.label || 'label',\n      value: props.keys?.value || 'value',\n    }));\n    const { options, optionsMap, optionsList, optionsCache } = useSelectOptions(props, keys);\n\n    // 内部数据,格式化过的\n    const innerValue = computed(() => {\n      if (props.valueType === 'object') {\n        return !props.multiple\n          ? orgValue.value[keys.value.value]\n          : (orgValue.value as SelectValue[]).map((option) => option[keys.value.value]);\n      }\n      // 处理多选情况下值为非迭代器的情况\n      if (props.multiple && !orgValue.value) {\n        return [];\n      }\n      return orgValue.value;\n    });\n    const setInnerValue: TdSelectProps['onChange'] = (newVal: SelectValue | SelectValue[], e) => {\n      if (props.valueType === 'object') {\n        const { value, label } = keys.value;\n        const getOption = (val: SelectValue) => {\n          const option = optionsMap.value.get(val);\n          return {\n            [value]: get(option, value),\n            [label]: get(option, label),\n          };\n        };\n        newVal = props.multiple ? (newVal as SelectValue[]).map((val) => getOption(val)) : getOption(newVal);\n      }\n      if (newVal === orgValue.value) return;\n      setOrgValue(newVal, { selectedOptions: getSelectedOptions(newVal), trigger: e.trigger, e: e.e });\n    };\n\n    const [innerInputValue, setInputValue] = useDefaultValue(\n      inputValue,\n      props.defaultInputValue,\n      props.onInputChange,\n      'inputValue',\n    );\n    const [innerPopupVisible, setInnerPopupVisible] = useDefaultValue(\n      popupVisible,\n      false,\n      (visible: boolean, context: PopupVisibleChangeContext) => {\n        props.onPopupVisibleChange?.(visible, context);\n        props.onVisibleChange?.(visible);\n      },\n      'popupVisible',\n    );\n\n    const placeholderText = computed(\n      () =>\n        ((!props.multiple && innerPopupVisible.value && getSingleContent(innerValue.value, optionsMap)) ||\n          props.placeholder) ??\n        t(globalConfig.value.placeholder),\n    );\n\n    // selectInput 展示值\n    const displayText = computed(() =>\n      props.multiple\n        ? getMultipleContent(innerValue.value as SelectValue[], optionsMap)\n        : getSingleContent(innerValue.value, optionsMap),\n    );\n\n    // valueDisplayParams参数\n    const valueDisplayParams = computed(() => {\n      return props.multiple && isArray(innerValue.value)\n        ? (innerValue.value as SelectValue[]).map((value) => ({\n            value,\n            label: optionsMap.value.get(value)?.label,\n          }))\n        : innerValue.value;\n    });\n\n    const isFilterable = computed(() => {\n      return Boolean(props.filterable || globalConfig.value.filterable || isFunction(props.filter));\n    });\n\n    // 移除tag\n    const removeTag = (index: number, e?: MouseEvent) => {\n      e && e.stopPropagation();\n      const selectValue = cloneDeep(innerValue.value) as SelectValue[];\n      const value = selectValue[index];\n      selectValue.splice(index, 1);\n      setInnerValue(selectValue, { selectedOptions: getSelectedOptions(selectValue), trigger: 'tag-remove', e });\n      props.onRemove?.({\n        value: value as string | number,\n        data: optionsMap.value.get(value),\n        e,\n      });\n    };\n\n    const handleCreate = () => {\n      if (!innerInputValue.value) return;\n      props.onCreate?.(innerInputValue.value);\n      setInputValue('');\n    };\n\n    // 键盘操作逻辑\n    const hoverIndex = ref(-1);\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const optionsListLength = optionsList.value.length;\n      let newIndex = hoverIndex.value;\n      switch (e.code) {\n        case 'ArrowUp':\n          e.preventDefault();\n          if (hoverIndex.value === -1) {\n            newIndex = 0;\n          } else if (hoverIndex.value === 0) {\n            newIndex = optionsListLength - 1;\n          } else {\n            newIndex--;\n          }\n          if (optionsList.value[newIndex]?.disabled) {\n            newIndex--;\n          }\n          hoverIndex.value = newIndex;\n          break;\n        case 'ArrowDown':\n          e.preventDefault();\n          if (hoverIndex.value === -1 || hoverIndex.value === optionsListLength - 1) {\n            newIndex = 0;\n          } else {\n            newIndex++;\n          }\n          if (optionsList.value[newIndex]?.disabled) {\n            newIndex++;\n          }\n          hoverIndex.value = newIndex;\n          break;\n        case 'Enter':\n          if (hoverIndex.value === -1) break;\n          if (!innerPopupVisible.value) {\n            setInnerPopupVisible(true, { e });\n            break;\n          }\n          if (!props.multiple) {\n            setInnerValue(optionsList.value[hoverIndex.value].value, {\n              selectedOptions: getSelectedOptions(optionsList.value[hoverIndex.value].value),\n              trigger: 'check',\n              e,\n            });\n            setInnerPopupVisible(false, { e });\n          } else {\n            if (hoverIndex.value === -1) return;\n            const optionValue = optionsList.value[hoverIndex.value]?.value;\n            if (!optionValue) return;\n            const newValue = getNewMultipleValue(innerValue.value, optionValue);\n            setInnerValue(newValue.value, {\n              selectedOptions: getSelectedOptions(newValue.value),\n              trigger: newValue.isCheck ? 'check' : 'uncheck',\n              e,\n            });\n          }\n          break;\n        case 'Escape':\n          setInnerPopupVisible(false, { e });\n          break;\n      }\n    };\n\n    const popupContentRef = computed(() => selectInputRef.value?.selectInputRef.getOverlay() as HTMLElement);\n\n    /**\n     * 可选选项的列表\n     * 排除已禁用和全选的选项\n     */\n    const optionalList = computed(() =>\n      optionsList.value.filter((item) => {\n        return !item.disabled && !item['check-all'] && !item.checkAll;\n      }),\n    );\n\n    const getSelectedOptions = (selectValue: SelectValue[] | SelectValue = innerValue.value) => {\n      return optionsList.value.filter((option) => {\n        if (option.checkAll) return;\n        if (Array.isArray(selectValue)) return selectValue.includes(option.value);\n        return selectValue === option.value;\n      });\n    };\n\n    const onCheckAllChange = (checked: boolean) => {\n      if (!props.multiple) return;\n      const value = checked ? optionalList.value.map((option) => option.value) : [];\n      setInnerValue(value, { selectedOptions: getSelectedOptions(value), trigger: checked ? 'check' : 'clear' });\n    };\n\n    // 已选的长度\n    const intersectionLen = computed<number>(() => {\n      const values = optionalList.value.map((item) => item.value);\n      const n = intersection(innerValue.value, values);\n      return n.length;\n    });\n\n    // 全选\n    const isCheckAll = computed<boolean>(() => {\n      return intersectionLen.value === optionalList.value.length;\n    });\n\n    // 半选\n    const indeterminate = computed<boolean>(() => !isCheckAll.value && intersectionLen.value !== 0);\n\n    const SelectProvide = computed(() => ({\n      max: props.max,\n      multiple: props.multiple,\n      hoverIndex: hoverIndex.value,\n      selectValue: innerValue.value,\n      reserveKeyword: props.reserveKeyword,\n      handleValueChange: setInnerValue,\n      handlerInputChange: setInputValue,\n      handlePopupVisibleChange: setInnerPopupVisible,\n      handleCreate,\n      size: props.size,\n      popupContentRef,\n      indeterminate: indeterminate.value,\n      isCheckAll: isCheckAll.value,\n      onCheckAllChange,\n      getSelectedOptions,\n    }));\n\n    provide(selectInjectKey, SelectProvide);\n\n    const checkValueInvalid = () => {\n      // 参数类型检测与修复\n      if (!props.multiple && isArray(orgValue.value)) {\n        setOrgValue(undefined);\n      }\n      if (props.multiple && !isArray(orgValue.value)) {\n        setOrgValue([]);\n      }\n    };\n    const handleSearch = debounce((value: string) => {\n      props.onSearch?.(`${value}`);\n    }, 300);\n\n    const addCache = (val: SelectValue) => {\n      if (props.multiple) {\n        const newCache = [];\n        for (const item of (val as SelectValue[]) || []) {\n          const option = optionsMap.value.get(item);\n          if (option) {\n            newCache.push(option);\n          }\n        }\n        optionsCache.value = Array.from(new Set([...newCache, ...optionsCache.value]));\n      } else {\n        const option = optionsMap.value.get(val);\n        if (option) {\n          optionsCache.value = Array.from(new Set([option, ...optionsCache.value]));\n        }\n      }\n    };\n\n    watch(\n      orgValue,\n      (val) => {\n        checkValueInvalid();\n        nextTick(() => {\n          addCache(val);\n        });\n      },\n      {\n        immediate: true,\n      },\n    );\n    watch(\n      () => props.multiple,\n      () => {\n        checkValueInvalid();\n      },\n    );\n    watch(innerPopupVisible, (value) => {\n      if (value) {\n        // 显示\n        hoverIndex.value = -1;\n      } else {\n        // 隐藏\n        // eslint-disable-next-line no-lonely-if\n        if (innerInputValue.value) {\n          setInputValue('');\n        }\n      }\n    });\n\n    // 列表展开时定位置选中项\n    const updateScrollTop = (content: HTMLDivElement) => {\n      if (!selectPanelRef.value) {\n        return;\n      }\n      const firstSelectedNode: HTMLDivElement = (selectPanelRef.value?.innerRef as HTMLDivElement)?.querySelector(\n        `.${classPrefix.value}-is-selected`,\n      );\n      // 此处需要等待渲染后进行计算\n      nextTick(() => {\n        if (firstSelectedNode && content) {\n          const { paddingBottom } = getComputedStyle(firstSelectedNode);\n          const { marginBottom } = getComputedStyle(content);\n          const elementBottomHeight = parseInt(paddingBottom, 10) + parseInt(marginBottom, 10);\n          // 小于0时不需要特殊处理，会被设为0\n          const updateValue =\n            firstSelectedNode.offsetTop -\n            content.offsetTop -\n            (content.clientHeight - firstSelectedNode.clientHeight) +\n            elementBottomHeight;\n          // eslint-disable-next-line no-param-reassign\n          content.scrollTop = updateValue;\n        }\n      });\n    };\n    provide('updateScrollTop', updateScrollTop);\n\n    return () => {\n      const { overlayClassName, ...restPopupProps } = (props.popupProps || {}) as TdSelectProps['popupProps'];\n      return (\n        <div class={`${COMPONENT_NAME.value}__wrap`}>\n          <SelectInput\n            {...{\n              autoWidth: props.autoWidth,\n              readonly: props.readonly,\n              borderless: props.borderless || !props.bordered,\n              multiple: props.multiple,\n              clearable: props.clearable,\n              loading: props.loading,\n              status: props.status,\n              tips: props.tips,\n              minCollapsedNum: props.minCollapsedNum,\n            }}\n            ref={selectInputRef}\n            class={COMPONENT_NAME.value}\n            value={displayText.value}\n            disabled={disabled.value}\n            popupVisible={innerPopupVisible.value}\n            inputValue={innerPopupVisible.value ? innerInputValue.value : ''}\n            placeholder={`${placeholderText.value}`}\n            allowInput={isFilterable.value}\n            collapsed-items={props.collapsedItems}\n            inputProps={{\n              size: props.size,\n              ...(props.inputProps as TdSelectProps['inputProps']),\n              onkeydown: handleKeyDown,\n            }}\n            tagInputProps={{\n              size: props.size,\n              ...(props.tagInputProps as TdSelectProps['tagInputProps']),\n            }}\n            onTagChange={(val, ctx) => {\n              removeTag(ctx.index);\n            }}\n            tagProps={{ ...(props.tagProps as TdSelectProps['tagProps']) }}\n            popupProps={{\n              overlayClassName: [`${COMPONENT_NAME.value}__dropdown`, overlayClassName],\n              ...restPopupProps,\n            }}\n            label={() => renderTNodeJSX('prefixIcon')}\n            suffixIcon={() =>\n              props.showArrow && (\n                <FakeArrow\n                  overlayClassName={`${COMPONENT_NAME.value}__right-icon`}\n                  isActive={innerPopupVisible.value}\n                />\n              )\n            }\n            valueDisplay={() =>\n              renderTNodeJSX('valueDisplay', {\n                params: { value: valueDisplayParams.value, onClose: (index: number) => removeTag(index) },\n              })\n            }\n            onPopupVisibleChange={(val: boolean, context) => {\n              setInnerPopupVisible(val, context);\n            }}\n            onInputChange={(value) => {\n              if (!innerPopupVisible.value) return;\n              setInputValue(value);\n              handleSearch(`${value}`);\n            }}\n            onClear={({ e }) => {\n              setInnerValue(props.multiple ? [] : undefined, {\n                selectedOptions: getSelectedOptions(props.multiple ? [] : undefined),\n                trigger: 'clear',\n                e,\n              });\n              props.onClear?.({ e });\n            }}\n            onEnter={(inputValue, { e }) => {\n              props.onEnter?.({ inputValue: `${innerInputValue.value}`, e, value: innerValue.value });\n              handleCreate();\n            }}\n            onBlur={(inputValue, { e }) => {\n              props.onBlur?.({ e, value: innerValue.value });\n            }}\n            onFocus={(inputValue, { e }) => {\n              props.onFocus?.({ e, value: innerValue.value });\n            }}\n            {...(props.selectInputProps as TdSelectProps['selectInputProps'])}\n            v-slots={{\n              panel: () => (\n                <SelectPanel\n                  ref={selectPanelRef}\n                  {...picker(props, [\n                    'size',\n                    'multiple',\n                    'empty',\n                    'loading',\n                    'loadingText',\n                    'filterable',\n                    'creatable',\n                    'panelTopContent',\n                    'panelBottomContent',\n                    'filter',\n                    'scroll',\n                  ])}\n                  options={options.value}\n                  inputValue={innerInputValue.value}\n                  v-slots={slots}\n                />\n              ),\n              collapsedItems: slots.collapsedItems,\n            }}\n          />\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","setup","slots","expose","res","classPrefix","usePrefixClass","disabled","useFormDisabled","renderTNodeJSX","useTNodeJSX","COMPONENT_NAME","useConfig","globalConfig","t","toRefs","popupVisible","inputValue","modelValue","value","useVModel","defaultValue","onChange","orgValue","setOrgValue","selectPanelRef","ref","selectInputRef","keys","computed","label","useSelectOptions","options","optionsMap","optionsList","optionsCache","innerValue","valueType","multiple","map","option","setInnerValue","newVal","e","getOption","val","get","selectedOptions","getSelectedOptions","trigger","useDefaultValue","defaultInputValue","onInputChange","innerInputValue","setInputValue","visible","context","onPopupVisibleChange","onVisibleChange","innerPopupVisible","setInnerPopupVisible","placeholderText","getSingleContent","placeholder","displayText","getMultipleContent","valueDisplayParams","isArray","isFilterable","Boolean","filterable","isFunction","filter","removeTag","index","stopPropagation","selectValue","cloneDeep","splice","onRemove","data","handleCreate","onCreate","hoverIndex","handleKeyDown","optionsListLength","length","newIndex","code","preventDefault","optionValue","newValue","getNewMultipleValue","isCheck","popupContentRef","getOverlay","optionalList","item","checkAll","Array","includes","onCheckAllChange","checked","intersectionLen","values","n","intersection","isCheckAll","indeterminate","SelectProvide","max","reserveKeyword","handleValueChange","handlerInputChange","handlePopupVisibleChange","size","provide","selectInjectKey","checkValueInvalid","handleSearch","debounce","onSearch","addCache","newCache","push","from","Set","watch","nextTick","immediate","updateScrollTop","content","firstSelectedNode","innerRef","querySelector","getComputedStyle","paddingBottom","marginBottom","elementBottomHeight","parseInt","updateValue","offsetTop","clientHeight","scrollTop","popupProps","overlayClassName","restPopupProps","_createVNode","_mergeProps","autoWidth","readonly","borderless","bordered","clearable","loading","status","tips","minCollapsedNum","collapsedItems","inputProps","onkeydown","tagInputProps","ctx","tagProps","showArrow","params","onClose","onClear","onEnter","onBlur","onFocus","selectInputProps","panel","picker"],"mappings":"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"}