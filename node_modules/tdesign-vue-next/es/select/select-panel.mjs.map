{"version":3,"file":"select-panel.mjs","sources":["../../src/select/select-panel.tsx"],"sourcesContent":["import { computed, defineComponent, inject, PropType, Slots, ref, ComputedRef } from 'vue';\nimport isFunction from 'lodash/isFunction';\nimport omit from 'lodash/omit';\nimport { Styles } from '../common';\n\nimport { SelectOption, SelectOptionGroup, TdOptionProps } from './type';\nimport Option from './option';\nimport OptionGroup from './optionGroup';\nimport TdSelectProps from './props';\n\nimport { useTNodeJSX, useTNodeDefault } from '../hooks/tnode';\nimport { useConfig, usePrefixClass } from '../hooks/useConfig';\nimport { usePanelVirtualScroll } from './hooks/usePanelVirtualScroll';\nimport { selectInjectKey } from './helper';\n\nexport default defineComponent({\n  name: 'TSelectPanel',\n  props: {\n    inputValue: TdSelectProps.inputValue,\n    panelTopContent: TdSelectProps.panelTopContent,\n    panelBottomContent: TdSelectProps.panelBottomContent,\n    empty: TdSelectProps.empty,\n    creatable: TdSelectProps.creatable,\n    loading: TdSelectProps.loading,\n    loadingText: TdSelectProps.loadingText,\n    multiple: TdSelectProps.multiple,\n    filterable: TdSelectProps.filterable,\n    filter: TdSelectProps.filter,\n    options: {\n      type: Array as PropType<SelectOption[]>,\n      default: (): SelectOption[] => [],\n    },\n    scroll: TdSelectProps.scroll,\n  },\n  setup(props, { expose }) {\n    const COMPONENT_NAME = usePrefixClass('select');\n    const renderTNodeJSX = useTNodeJSX();\n    const renderDefaultTNode = useTNodeDefault();\n    const { t, globalConfig } = useConfig('select');\n    const tSelect = inject(selectInjectKey);\n    const innerRef = ref<HTMLElement>(null);\n\n    const popupContentRef = computed(() => tSelect.value.popupContentRef.value);\n    const showCreateOption = computed(() => props.creatable && props.filterable && props.inputValue);\n\n    const displayOptions = computed(() => {\n      if (!props.inputValue || !(props.filterable || isFunction(props.filter))) return props.options;\n\n      const filterMethods = (option: SelectOption) => {\n        if (isFunction(props.filter)) {\n          return props.filter(`${props.inputValue}`, option);\n        }\n\n        return option.label?.toLowerCase?.().indexOf(`${props.inputValue}`.toLowerCase()) > -1;\n      };\n\n      const res: SelectOption[] = [];\n\n      props.options.forEach((option) => {\n        if ((option as SelectOptionGroup).group && (option as SelectOptionGroup).children) {\n          res.push({\n            ...option,\n            children: (option as SelectOptionGroup).children.filter(filterMethods),\n          });\n        }\n        if (filterMethods(option)) {\n          res.push(option);\n        }\n      });\n\n      return res;\n    });\n\n    const { trs, scrollHeight, translateY, visibleData, handleRowMounted, isVirtual, panelStyle, cursorStyle } =\n      usePanelVirtualScroll({\n        scroll: props.scroll,\n        popupContentRef,\n        options: displayOptions,\n      });\n\n    const isEmpty = computed(() => !displayOptions.value.length);\n\n    const renderCreateOption = () => (\n      <ul class={[`${COMPONENT_NAME.value}__create-option`, `${COMPONENT_NAME.value}__list`]}>\n        <Option\n          value={props.inputValue}\n          label={`${props.inputValue}`}\n          createAble={true}\n          class={`${COMPONENT_NAME.value}__create-option--special`}\n        />\n      </ul>\n    );\n\n    // 递归render options\n    const renderOptionsContent = (options: SelectOption[]) => {\n      return (\n        <ul class={`${COMPONENT_NAME.value}__list`}>\n          {options.map((item: SelectOptionGroup & TdOptionProps & { slots: Slots } & { $index: number }, index) => {\n            if (item.group) {\n              return (\n                <OptionGroup label={item.group} divider={item.divider}>\n                  {renderOptionsContent(item.children)}\n                </OptionGroup>\n              );\n            }\n            return (\n              <Option\n                {...omit(item, '$index')}\n                {...(isVirtual.value\n                  ? {\n                      rowIndex: item.$index,\n                      trs,\n                      scrollType: props.scroll?.type,\n                      isVirtual: isVirtual.value,\n                      bufferSize: props.scroll?.bufferSize,\n                      key: `${item.$index || ''}_${index}`,\n                    }\n                  : {\n                      key: index,\n                    })}\n                multiple={props.multiple}\n                v-slots={item.slots}\n                onRowMounted={handleRowMounted}\n              />\n            );\n          })}\n        </ul>\n      );\n    };\n    const dropdownInnerSize = computed(() => {\n      return {\n        small: 's',\n        medium: 'm',\n        large: 'l',\n      }[tSelect.value.size];\n    });\n\n    expose({\n      innerRef,\n    });\n\n    const renderPanel = (options: ComputedRef<SelectOption[]>, extraStyle?: ComputedRef<Styles>) => (\n      <div\n        ref={innerRef}\n        class={[\n          `${COMPONENT_NAME.value}__dropdown-inner`,\n          `${COMPONENT_NAME.value}__dropdown-inner--size-${dropdownInnerSize.value}`,\n        ]}\n        onClick={(e) => e.stopPropagation()}\n        style={extraStyle?.value}\n      >\n        {renderTNodeJSX('panelTopContent')}\n        {/* create option */}\n        {showCreateOption.value && renderCreateOption()}\n        {/* loading状态 */}\n        {props.loading &&\n          renderDefaultTNode('loadingText', {\n            defaultNode: <div class={`${COMPONENT_NAME.value}__loading-tips`}>{t(globalConfig.value.loadingText)}</div>,\n          })}\n        {/* 空状态 */}\n        {!props.loading &&\n          isEmpty.value &&\n          !showCreateOption.value &&\n          renderDefaultTNode('empty', {\n            defaultNode: <div class={`${COMPONENT_NAME.value}__empty`}>{t(globalConfig.value.empty)}</div>,\n          })}\n        {!isEmpty.value && !props.loading && renderOptionsContent(options.value)}\n        {renderTNodeJSX('panelBottomContent')}\n      </div>\n    );\n\n    if (isVirtual.value) {\n      return () => (\n        <div>\n          <div style={cursorStyle.value}></div>\n          {renderPanel(visibleData as ComputedRef<SelectOption[]>, panelStyle)}\n        </div>\n      );\n    }\n\n    return () => renderPanel(displayOptions);\n  },\n});\n"],"names":["_isVNode","defineComponent","name","props","inputValue","TdSelectProps","panelTopContent","panelBottomContent","empty","creatable","loading","loadingText","multiple","filterable","filter","options","type","Array","scroll","setup","expose","COMPONENT_NAME","usePrefixClass","renderTNodeJSX","useTNodeJSX","renderDefaultTNode","useTNodeDefault","useConfig","t","globalConfig","tSelect","inject","selectInjectKey","innerRef","ref","popupContentRef","computed","value","showCreateOption","displayOptions","isFunction","filterMethods","option","label","toLowerCase","indexOf","res","forEach","group","children","push","usePanelVirtualScroll","trs","scrollHeight","translateY","visibleData","handleRowMounted","isVirtual","panelStyle","cursorStyle","isEmpty","length","renderCreateOption","_createVNode","Option","renderOptionsContent","map","item","index","OptionGroup","divider","omit","rowIndex","$index","scrollType","bufferSize","key","slots","dropdownInnerSize","small","medium","large","size","renderPanel","extraStyle","e","stopPropagation","defaultNode"],"mappings":"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"}