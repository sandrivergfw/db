{"version":3,"file":"image-viewer.mjs","sources":["../../src/image-viewer/image-viewer.tsx"],"sourcesContent":["import { computed, defineComponent, ref, toRefs, Teleport, onMounted, onBeforeUnmount, watch } from 'vue';\nimport { ChevronLeftIcon, ChevronDownIcon, CloseIcon } from 'tdesign-icons-vue-next';\n\nimport props from './props';\nimport TImageViewerIcon from './base/ImageModalIcon';\nimport TImageViewerUtils from './base/ImageViewerUtils';\nimport TImageItem from './base/ImageItem';\nimport TImageViewerModal from './base/ImageViewerModal';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport useVModel from '../hooks/useVModel';\nimport useDefaultValue from '../hooks/useDefaultValue';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { TdImageViewerProps } from './type';\nimport { useMirror, useRotate, useScale } from './hooks';\nimport { formatImages, getOverlay } from './utils';\nimport { EVENT_CODE } from './const';\n\nexport default defineComponent({\n  name: 'TImageViewer',\n  props: { ...props },\n  setup(props) {\n    const classPrefix = usePrefixClass();\n    const COMPONENT_NAME = usePrefixClass('image-viewer');\n    const renderTNodeJSX = useTNodeJSX();\n    const isExpand = ref(true);\n    const showOverlayValue = computed(() => getOverlay(props));\n\n    const { index, visible, modelValue } = toRefs(props);\n    const [indexValue, setIndexValue] = useDefaultValue(index, props.defaultIndex ?? 0, props.onIndexChange, 'index');\n    const [visibleValue, setVisibleValue] = useVModel(visible, modelValue, props.defaultVisible, () => {}, 'visible');\n\n    const wrapClass = computed(() => [\n      `${COMPONENT_NAME.value}-preview-image`,\n      {\n        [`${classPrefix.value}-is-hide`]: !visibleValue.value,\n      },\n    ]);\n    const headerClass = computed(() => [\n      `${classPrefix.value}-image-viewer__modal-header`,\n      {\n        [`${classPrefix.value}-is-show`]: isExpand.value,\n      },\n    ]);\n    const zIndexValue = computed(() => props.zIndex ?? 2000);\n    const toggleExpand = () => {\n      isExpand.value = !isExpand.value;\n    };\n\n    const { mirror, onMirror, resetMirror } = useMirror();\n    const { scale, onZoomIn, onZoomOut, resetScale } = useScale(props.imageScale);\n    const { rotate, onRotate, resetRotate } = useRotate();\n    const onRest = () => {\n      resetMirror();\n      resetScale();\n      resetRotate();\n    };\n\n    const images = computed(() => formatImages(props.images));\n    const currentImage = computed(() => images.value[indexValue.value] ?? { mainImage: '' });\n\n    const prevImage = () => {\n      const newIndex = indexValue.value - 1;\n      setIndexValue(newIndex < 0 ? 0 : newIndex, { trigger: 'prev' });\n    };\n\n    const nextImage = () => {\n      const newIndex = indexValue.value + 1;\n      setIndexValue(newIndex >= images.value.length ? indexValue.value : newIndex, { trigger: 'next' });\n    };\n\n    const onImgClick = (i: number) => {\n      setIndexValue(i);\n    };\n\n    const openHandler = () => {\n      setVisibleValue(true);\n    };\n    const onClose: TdImageViewerProps['onClose'] = (ctx) => {\n      setVisibleValue(false, ctx);\n      props.onClose?.(ctx);\n    };\n    const closeBtnAction = (e: MouseEvent) => {\n      onClose({ e, trigger: 'close-btn' });\n    };\n    const clickOverlayHandler = (e: MouseEvent) => {\n      if (props.closeOnOverlay) {\n        onClose({ e, trigger: 'overlay' });\n      }\n    };\n\n    const keydownHandler = (e: KeyboardEvent) => {\n      switch (e.code) {\n        case EVENT_CODE.left:\n          prevImage();\n          break;\n        case EVENT_CODE.right:\n          nextImage();\n          break;\n        case EVENT_CODE.up:\n          onZoomIn();\n          break;\n        case EVENT_CODE.down:\n          onZoomOut();\n          break;\n        case EVENT_CODE.esc:\n          onClose({ e, trigger: 'esc' });\n          break;\n        default:\n          break;\n      }\n    };\n\n    watch(\n      () => visibleValue.value,\n      (val) => {\n        if (val) {\n          window.addEventListener('keydown', keydownHandler);\n          return;\n        }\n        window.removeEventListener('keydown', keydownHandler);\n      },\n    );\n\n    const onWheel = (e: WheelEvent) => {\n      e.preventDefault();\n      const { deltaY, ctrlKey } = e;\n      // mac触摸板双指缩放时ctrlKey=true，deltaY>0为缩小  <0为放大\n      if (ctrlKey) {\n        return deltaY > 0 ? onZoomOut() : onZoomIn();\n      }\n      deltaY > 0 ? onZoomIn() : onZoomOut();\n    };\n\n    const transStyle = computed(() => ({\n      transform: `translateX(calc(-${indexValue.value} * (40px / 9 * 16 + 4px)))`,\n    }));\n\n    const renderHeader = () => (\n      <div class={headerClass.value}>\n        <TImageViewerIcon\n          icon={() => <ChevronDownIcon />}\n          class={`${COMPONENT_NAME.value}__header-pre-bt`}\n          onClick={toggleExpand}\n        />\n        <div class={`${COMPONENT_NAME.value}__header-prev`}>\n          <div class={`${COMPONENT_NAME.value}__header-trans`} style={transStyle.value}>\n            {images.value.map((image, index) => (\n              <div\n                key={index}\n                class={[\n                  `${COMPONENT_NAME.value}__header-box`,\n                  {\n                    [`${classPrefix.value}-is-active`]: index === indexValue.value,\n                  },\n                ]}\n              >\n                <img\n                  alt=\"\"\n                  src={image.thumbnail || image.mainImage}\n                  className={`${COMPONENT_NAME.value}__header-img`}\n                  onClick={() => onImgClick(index)}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n    const renderNavigationArrow = (type: 'prev' | 'next') => {\n      const rotateDeg = type === 'prev' ? 0 : 180;\n      const icon = renderTNodeJSX(\n        'navigationArrow',\n        <ChevronLeftIcon style={{ transform: `rotate(${rotateDeg}deg)` }} size=\"24px\" />,\n      );\n\n      return (\n        <TImageViewerIcon\n          class={`${COMPONENT_NAME.value}__modal-${type}-bt`}\n          onClick={type === 'prev' ? prevImage : nextImage}\n          icon={() => icon}\n        />\n      );\n    };\n\n    return () => {\n      if (props.mode === 'modeless') {\n        return (\n          <>\n            {renderTNodeJSX('trigger', { params: { open: openHandler } })}\n            <TImageViewerModal\n              zIndex={zIndexValue.value}\n              visible={visibleValue.value}\n              index={indexValue.value}\n              images={images.value}\n              scale={scale.value}\n              rotate={rotate.value}\n              mirror={mirror.value}\n              currentImage={currentImage.value}\n              onRotate={onRotate}\n              onZoomIn={onZoomIn}\n              onZoomOut={onZoomOut}\n              onMirror={onMirror}\n              onReset={onRest}\n              onClose={onClose}\n              draggable={props.draggable}\n              showOverlay={showOverlayValue.value}\n              title={props.title}\n            />\n          </>\n        );\n      }\n\n      return (\n        <>\n          {renderTNodeJSX('trigger', { params: { open: openHandler } })}\n          <Teleport to=\"body\">\n            {visibleValue.value && (\n              <div class={wrapClass.value} style={{ zIndex: zIndexValue.value }} onWheel={onWheel}>\n                {!!showOverlayValue.value && (\n                  <div class={`${COMPONENT_NAME.value}__modal-mask`} onClick={clickOverlayHandler} />\n                )}\n                {images.value.length > 1 && (\n                  <>\n                    {renderHeader()}\n                    <div class={`${COMPONENT_NAME.value}__modal-index`}>\n                      {props.title && renderTNodeJSX('title')}\n                      {`${indexValue.value + 1}/${images.value.length}`}\n                    </div>\n                    {renderNavigationArrow('prev')}\n                    {renderNavigationArrow('next')}\n                  </>\n                )}\n                <div\n                  class={[`${COMPONENT_NAME.value}__modal-icon`, `${COMPONENT_NAME.value}__modal-close-bt`]}\n                  onClick={closeBtnAction}\n                >\n                  {renderTNodeJSX('closeBtn', <CloseIcon size=\"24px\" />)}\n                </div>\n                <TImageViewerUtils\n                  onZoomIn={onZoomIn}\n                  onZoomOut={onZoomOut}\n                  onMirror={onMirror}\n                  onReset={onRest}\n                  onRotate={onRotate}\n                  scale={scale.value}\n                  currentImage={currentImage.value}\n                />\n                <TImageItem\n                  scale={scale.value}\n                  rotate={rotate.value}\n                  mirror={mirror.value}\n                  src={currentImage.value.mainImage}\n                  placementSrc={currentImage.value.thumbnail}\n                />\n              </div>\n            )}\n          </Teleport>\n        </>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","setup","classPrefix","usePrefixClass","COMPONENT_NAME","renderTNodeJSX","useTNodeJSX","isExpand","ref","showOverlayValue","computed","getOverlay","toRefs","index","visible","modelValue","useDefaultValue","defaultIndex","onIndexChange","indexValue","setIndexValue","useVModel","defaultVisible","visibleValue","setVisibleValue","wrapClass","value","headerClass","zIndexValue","zIndex","toggleExpand","useMirror","mirror","onMirror","resetMirror","useScale","imageScale","scale","onZoomIn","onZoomOut","resetScale","useRotate","rotate","onRotate","resetRotate","onRest","images","formatImages","currentImage","mainImage","prevImage","newIndex","trigger","nextImage","length","onImgClick","i","openHandler","onClose","ctx","closeBtnAction","e","clickOverlayHandler","closeOnOverlay","keydownHandler","code","EVENT_CODE","left","right","up","down","esc","watch","val","window","addEventListener","removeEventListener","onWheel","preventDefault","deltaY","ctrlKey","transStyle","transform","renderHeader","_createVNode","map","image","thumbnail","renderNavigationArrow","type","rotateDeg","icon","mode","params","open","draggable","title"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,mBAAeA,eAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,cAAA;EACNC,KAAA,EAAA,aAAA,CAAA,EAAA,EAAYA,KAAM,CAAA;EAClBC,sBAAMD,MAAO,EAAA;AAAA,IAAA,IAAA,oBAAA,CAAA;IACX,IAAME,cAAcC,cAAe,EAAA,CAAA;AAC7B,IAAA,IAAAC,cAAA,GAAiBD,eAAe,cAAc,CAAA,CAAA;IACpD,IAAME,iBAAiBC,WAAY,EAAA,CAAA;AAC7B,IAAA,IAAAC,QAAA,GAAWC,IAAI,IAAI,CAAA,CAAA;IACzB,IAAMC,gBAAmB,GAAAC,QAAA,CAAS,YAAA;MAAA,OAAMC,UAAA,CAAWX,MAAK,CAAC,CAAA;KAAA,CAAA,CAAA;IAEzD,IAAuCY,OAAAA,GAAAA,OAAOZ,MAAK,CAAA;AAA3Ca,MAAAA,KAAO,WAAPA,KAAO;AAAAC,MAAAA,OAAA,WAAAA,OAAA;AAASC,MAAAA,UAAW,WAAXA,UAAW,CAAA;AAC7B,IAAA,IAAA,gBAAA,GAA8BC,eAAA,CAAgBH,KAAOb,EAAAA,CAAAA,oBAAAA,GAAAA,MAAAA,CAAMiB,YAAgB,MAAA,IAAA,IAAA,oBAAA,KAAA,KAAA,CAAA,GAAA,oBAAA,GAAA,CAAA,EAAGjB,MAAM,CAAAkB,aAAA,EAAe,OAAO,CAAA;AAAA,MAAA,iBAAA,GAAA,cAAA,CAAA,gBAAA,EAAA,CAAA,CAAA;MAAzGC,UAAY,GAAA,iBAAA,CAAA,CAAA,CAAA;MAAAC,aAAa,GAAA,iBAAA,CAAA,CAAA,CAAA,CAAA;AAC1B,IAAA,IAAA,UAAA,GAAkCC,UAAUP,OAAS,EAAAC,UAAA,EAAYf,MAAM,CAAAsB,cAAA,EAAgB,YAAM,IAAI,SAAS,CAAA;AAAA,MAAA,WAAA,GAAA,cAAA,CAAA,UAAA,EAAA,CAAA,CAAA;MAAzGC;MAAcC,eAAe,GAAA,WAAA,CAAA,CAAA,CAAA,CAAA;IAE9B,IAAAC,SAAA,GAAYf,SAAS,YAAA;AAAA,MAAA,OAAM,CAC5BN,EAAAA,CAAAA,MAAAA,CAAAA,cAAe,CAAAsB,KAAA,EAEZxB,gBAAAA,CAAAA,EAAAA,eAAAA,CAAAA,EAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,WAAY,CAAAwB,KAAA,EAAkB,UAAA,CAAA,EAAA,CAACH,YAAa,CAAAG,KAAA,CAEnD,CAAA,CAAA;KAAA,CAAA,CAAA;IACK,IAAAC,WAAA,GAAcjB,SAAS,YAAA;AAAA,MAAA,OAAM,CAC9BR,EAAAA,CAAAA,MAAAA,CAAAA,WAAY,CAAAwB,KAAA,EAETxB,6BAAAA,CAAAA,EAAAA,eAAAA,CAAAA,EAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,WAAY,CAAAwB,KAAA,EAAkBnB,UAAAA,CAAAA,EAAAA,QAAS,CAAAmB,KAAA,CAE9C,CAAA,CAAA;KAAA,CAAA,CAAA;IACD,IAAME,WAAc,GAAAlB,QAAA,CAAS,YAAA;AAAA,MAAA,IAAA,cAAA,CAAA;AAAA,MAAA,OAAA,CAAA,cAAA,GAAMV,MAAAA,CAAM6B,iEAAU,GAAI,CAAA;KAAA,CAAA,CAAA;AACvD,IAAA,IAAMC,eAAe,SAAfA,eAAqB;AAChBvB,MAAAA,QAAA,CAAAmB,KAAA,GAAQ,CAACnB,QAAS,CAAAmB,KAAA,CAAA;KAC7B,CAAA;AAEA,IAAA,IAAA,UAAA,GAA0CK,SAAU,EAAA;AAA5CC,MAAAA,MAAA,cAAAA,MAAA;AAAQC,MAAAA,QAAU,cAAVA,QAAU;AAAAC,MAAAA,WAAA,cAAAA,WAAA,CAAA;AACpB,IAAA,IAAA,SAAA,GAA6CC,QAAA,CAASnC,OAAMoC,UAAU,CAAA;AAApEC,MAAAA,kBAAAA;AAAOC,MAAAA,QAAU,aAAVA,QAAU;AAAAC,MAAAA,SAAA,aAAAA,SAAA;AAAWC,MAAAA,uBAAAA;AACpC,IAAA,IAAA,UAAA,GAA0CC,SAAU,EAAA;AAA5CC,MAAAA,MAAA,cAAAA,MAAA;AAAQC,MAAAA,QAAU,cAAVA,QAAU;AAAAC,MAAAA,WAAA,cAAAA,WAAA,CAAA;AAC1B,IAAA,IAAMC,SAAS,SAATA,SAAe;AACPX,MAAAA,WAAA,EAAA,CAAA;AACDM,MAAAA,UAAA,EAAA,CAAA;AACCI,MAAAA,WAAA,EAAA,CAAA;KACd,CAAA;IAEA,IAAME,SAASpC,QAAS,CAAA,YAAA;AAAA,MAAA,OAAMqC,YAAa/C,CAAAA,MAAAA,CAAM8C,MAAM,CAAC,CAAA;KAAA,CAAA,CAAA;IAClD,IAAAE,YAAA,GAAetC,QAAS,CAAA,YAAA;AAAA,MAAA,IAAA,qBAAA,CAAA;MAAA,OAAMoC,CAAAA,qBAAAA,GAAAA,MAAO,CAAApB,KAAA,CAAMP,WAAWO,KAAU,CAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAA;AAAEuB,QAAAA,SAAW,EAAA,EAAA;OAAI,CAAA;KAAA,CAAA,CAAA;AAEvF,IAAA,IAAMC,YAAY,SAAZA,YAAkB;AAChB,MAAA,IAAAC,QAAA,GAAWhC,WAAWO,KAAQ,GAAA,CAAA,CAAA;MACpCN,aAAA,CAAc+B,WAAW,CAAI,GAAA,CAAA,GAAIA,UAAU;AAAEC,QAAAA,OAAA,EAAS,MAAA;AAAO,OAAC,CAAA,CAAA;KAChE,CAAA;AAEA,IAAA,IAAMC,YAAY,SAAZA,YAAkB;AAChB,MAAA,IAAAF,QAAA,GAAWhC,WAAWO,KAAQ,GAAA,CAAA,CAAA;AACtBN,MAAAA,aAAA,CAAA+B,QAAA,IAAYL,MAAO,CAAApB,KAAA,CAAM4B,MAAS,GAAAnC,UAAA,CAAWO,QAAQyB,QAAU,EAAA;AAAEC,QAAAA,OAAS,EAAA,MAAA;AAAO,OAAC,CAAA,CAAA;KAClG,CAAA;AAEM,IAAA,IAAAG,UAAA,GAAa,SAAbA,UAAA,CAAcC,CAAc,EAAA;MAChCpC,aAAA,CAAcoC,CAAC,CAAA,CAAA;KACjB,CAAA;AAEA,IAAA,IAAMC,cAAc,SAAdA,cAAoB;MACxBjC,eAAA,CAAgB,IAAI,CAAA,CAAA;KACtB,CAAA;AACM,IAAA,IAAAkC,OAAA,GAAyC,SAAzCA,OAAA,CAA0CC,GAAQ,EAAA;AAAA,MAAA,IAAA,eAAA,CAAA;AACtDnC,MAAAA,eAAA,CAAgB,OAAOmC,GAAG,CAAA,CAAA;MAC1B3D,CAAAA,eAAAA,GAAAA,MAAAA,CAAM0D,2DAAN1D,qBAAAA,MAAAA,EAAgB2D,GAAG,CAAA,CAAA;KACrB,CAAA;AACM,IAAA,IAAAC,cAAA,GAAiB,SAAjBA,cAAA,CAAkBC,CAAkB,EAAA;AACxCH,MAAAA,OAAA,CAAQ;AAAEG,QAAAA,CAAA,EAAAA,CAAA;AAAGT,QAAAA,OAAS,EAAA,WAAA;AAAY,OAAC,CAAA,CAAA;KACrC,CAAA;AACM,IAAA,IAAAU,mBAAA,GAAsB,SAAtBA,mBAAA,CAAuBD,CAAkB,EAAA;MAC7C,IAAI7D,OAAM+D,cAAgB,EAAA;AACxBL,QAAAA,OAAA,CAAQ;AAAEG,UAAAA,CAAA,EAAAA,CAAA;AAAGT,UAAAA,OAAS,EAAA,SAAA;AAAU,SAAC,CAAA,CAAA;AACnC,OAAA;KACF,CAAA;AAEM,IAAA,IAAAY,cAAA,GAAiB,SAAjBA,cAAA,CAAkBH,CAAqB,EAAA;MAC3C,QAAQA,CAAE,CAAAI,IAAA;QAAA,KACHC,UAAW,CAAAC,IAAA;AACJjB,UAAAA,SAAA,EAAA,CAAA;AACV,UAAA,MAAA;QAAA,KACGgB,UAAW,CAAAE,KAAA;AACJf,UAAAA,SAAA,EAAA,CAAA;AACV,UAAA,MAAA;QAAA,KACGa,UAAW,CAAAG,EAAA;AACL/B,UAAAA,QAAA,EAAA,CAAA;AACT,UAAA,MAAA;QAAA,KACG4B,UAAW,CAAAI,IAAA;AACJ/B,UAAAA,SAAA,EAAA,CAAA;AACV,UAAA,MAAA;QAAA,KACG2B,UAAW,CAAAK,GAAA;AACdb,UAAAA,OAAA,CAAQ;AAAEG,YAAAA,CAAA,EAAAA,CAAA;AAAGT,YAAAA,OAAS,EAAA,KAAA;AAAM,WAAC,CAAA,CAAA;AAC7B,UAAA,MAAA;AAAA,QAAA;AAEA,UAAA,MAAA;AAAA,OAAA;KAEN,CAAA;AAEAoB,IAAAA,KAAA,CACE,YAAA;MAAA,OAAMjD,YAAa,CAAAG,KAAA,CAAA;KACnB,EAAA,UAAC+C,GAAQ,EAAA;AACP,MAAA,IAAIA,GAAK,EAAA;AACAC,QAAAA,MAAA,CAAAC,gBAAA,CAAiB,WAAWX,cAAc,CAAA,CAAA;AACjD,QAAA,OAAA;AACF,OAAA;AACOU,MAAAA,MAAA,CAAAE,mBAAA,CAAoB,WAAWZ,cAAc,CAAA,CAAA;AACtD,KAAA,CACF,CAAA;AAEM,IAAA,IAAAa,OAAA,GAAU,SAAVA,OAAA,CAAWhB,CAAkB,EAAA;MACjCA,CAAA,CAAEiB,cAAe,EAAA,CAAA;AACX,MAAA,IAAEC,MAAQ,GAAYlB,CAAA,CAApBkB,MAAQ;QAAAC,OAAA,GAAYnB,CAAA,CAAZmB,OAAA,CAAA;AAEhB,MAAA,IAAIA,OAAS,EAAA;QACX,OAAOD,MAAS,GAAA,CAAA,GAAIxC,SAAU,EAAA,GAAID,QAAS,EAAA,CAAA;AAC7C,OAAA;AACSyC,MAAAA,MAAA,GAAA,CAAA,GAAIzC,QAAS,EAAA,GAAIC,SAAU,EAAA,CAAA;KACtC,CAAA;IAEM,IAAA0C,UAAA,GAAavE,SAAS,YAAA;MAAA,OAAO;QACjCwE,SAAA,EAAA,mBAAA,CAAA,MAAA,CAA+B/D,UAAW,CAAAO,KAAA,EAAA,4BAAA,CAAA;OAC1C,CAAA;AAAA,KAAA,CAAA,CAAA;IAEF,IAAMyD,YAAe,GAAA,SAAfA,YAAe,GAAA;AAAA,MAAA,OAAAC,WAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EACPzD,WAAY,CAAAD,KAAAA;AAAA,OAAA,EAAA,CAAA0D,WAAA,CAAA,gBAAA,EAAA;QAAA,MAEd,EAAA,SAAA,IAAA,GAAA;AAAA,UAAA,OAAAA,WAAA,CAAA,eAAA,EAAA,IAAA,EAAA,IAAA,CAAA,CAAA;SACN;QAAA,OAAUhF,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,cAAA,CAAesB,KACzB,EAAA,iBAAA,CAAA;QAAA,SAASI,EAAAA,YAAAA;AACX,OAAA,EAAA,IAAA,CAAA,EAAAsD,WAAA,CAAA,KAAA,EAAA;QAAA,OACehF,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,cAAA,CAAesB;;eACbtB,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,cAAe,CAAAsB,KAAA,EAAA,gBAAA,CAAA;AAAA,QAAA,OAAA,EAA8BuD,UAAW,CAAAvD,KAAAA;OACpEoB,EAAAA,CAAAA,MAAO,CAAApB,KAAA,CAAM2D,GAAI,CAAA,UAACC,KAAOzE,EAAAA,MAAAA,EAAAA;AAAAA,QAAAA,OAAAA,WAAAA,CAAAA,KAAAA,EAAAA;AAAAA,UAAAA,KAAAA,EAEjBA,MAAAA;AAAAA,UAAAA,OAAAA,EACE,CACFT,EAAAA,CAAAA,MAAAA,CAAAA,cAAe,CAAAsB,KAAA,EAEZxB,cAAAA,CAAAA,EAAAA,eAAAA,CAAAA,EAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,WAAY,CAAAwB,KAAA,EAAoBb,YAAAA,CAAAA,EAAAA,WAAUM,UAAW,CAAAO,KAAA,CAAA,CAAA;AAE7D,SAAA,EAAA,CAAA0D,WAAA,CAAA,KAAA,EAAA;AAAA,UAAA,KAAA,EAGM,EAAA;AAAA,UAAA,KAAA,EACCE,KAAM,CAAAC,SAAA,IAAaD,KAAM,CAAArC,SAAA;UAAA,WAChB7C,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,eAAesB,KAC7B,EAAA,cAAA,CAAA;UAAA,SAAS,EAAA,SAAA,OAAA,GAAA;YAAA,OAAM6B,UAAA,CAAW1C,MAAK,CAAA,CAAA;AAAA,WAAA;AAAA,SAAA,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA;AAAA,OAGpC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;KAzBN,CAAA;AA8BG,IAAA,IAAA2E,qBAAA,GAAwB,SAAxBA,qBAAA,CAAyBC,IAA0B,EAAA;MACjD,IAAAC,SAAA,GAAYD,IAAS,KAAA,MAAA,GAAS,CAAI,GAAA,GAAA,CAAA;AACxC,MAAA,IAAME,KAAO,GAAAtF,cAAA,CACX,iBAAA,EAAA+E,WAAA,CAAA,eAAA,EAAA;QAAA,OACwB,EAAA;AAAEF,UAAAA,4BAAqBQ,SAAA,EAAA,MAAA,CAAA;SAAmB;QAAA,MAAK,EAAA,MAAA;OACzE,EAAA,IAAA,CAAA,CAAA,CAAA;AAEA,MAAA,OAAAN,WAAA,CAAA,gBAAA,EAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAA,MAAA,CAEchF,eAAesB,KAAgB,EAAA,UAAA,CAAA,CAAA,MAAA,CAAA+D,IAAA,EAAA,KAAA,CAAA;AAAA,QAAA,SAAA,EAChCA,IAAA,KAAS,MAAS,GAAAvC,SAAA,GAAYG,SACvC;QAAA,MAAM,EAAA,SAAA,IAAA,GAAA;AAAA,UAAA,OAAMsC,KACd,CAAA;AAAA,SAAA;AAAA,OAAA,EAAA,IAAA,CAAA,CAAA;KAEJ,CAAA;AAEA,IAAA,OAAO,YAAM;AACP3F,MAAAA,IAAAA,MAAAA,CAAM4F,SAAS,UAAY,EAAA;QAE3B,OACGvF,WAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EAAAA,CAAAA,cAAA,CAAe,WAAW;AAAEwF,UAAAA,MAAA,EAAQ;AAAEC,YAAAA,IAAM,EAAArC,WAAAA;AAAY,WAAA;AAAE,SAAC,CAAA,EAAA2B,WAAA,CAAA,iBAAA,EAAA;UAAA,QAElDxD,EAAAA,WAAA,CAAYF;mBACXH,EAAAA,YAAA,CAAaG;iBACfP,EAAAA,UAAA,CAAWO;kBACVoB,EAAAA,MAAA,CAAOpB;iBACRW,EAAAA,KAAA,CAAMX;kBACLgB,EAAAA,MAAA,CAAOhB,KACf;UAAA,QAAQM,EAAAA,MAAO,CAAAN,KAAA;UAAA,cACDsB,EAAAA,YAAa,CAAAtB,KAAA;AAAA,UAAA,UAAA,EACjBiB,QACV;AAAA,UAAA,UAAA,EAAUL;uBACCC,SAAA;AAAA,UAAA,UAAA,EACDN,QACV;AAAA,UAAA,SAAA,EAASY;qBACAa,OAAA;UAAA,WACE1D,EAAAA,MAAM,CAAA+F,SAAA;UAAA,aACJtF,EAAAA,gBAAiB,CAAAiB,KAAA;AAAA,UAAA,OAAA,EACvB1B,MAAAA,CAAMgG,KAAAA;AACf,SAAA,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA;AAGN,OAAA;MAGE,OACG3F,WAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EAAAA,CAAAA,cAAA,CAAe,WAAW;AAAEwF,QAAAA,MAAA,EAAQ;AAAEC,UAAAA,IAAM,EAAArC,WAAAA;AAAY,SAAA;AAAE,OAAC,CAAA,EAAA2B,WAAA,CAAA,QAAA,EAAA;QAAA,IAC/C,EAAA,MAAA;AACV,OAAA,EAAA;AAAA,QAAA,SAAA,EAAA,SAAA,QAAA,GAAA;UAAA,OAAA7D,CAAAA,YAAA,CAAaG;mBACAD,EAAAA,SAAA,CAAUC;mBAAc,EAAA;cAAEG,QAAQD,WAAY,CAAAF,KAAAA;;qBAAkBmD,EAAAA,OAAAA;AAAA,WAAA,EAAA,CACzE,CAAC,CAACpE,gBAAA,CAAiBiB,KAClB,IAAA0D,WAAA,CAAA,KAAA,EAAA;YAAA,OAAehF,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,cAAA,CAAesB,KAAqB,EAAA,cAAA,CAAA;YAAA,SAASoC,EAAAA,mBAAAA;WAAqB,EAAA,IAAA,CAAA,EAElFhB,MAAA,CAAOpB,KAAM,CAAA4B,MAAA,GAAS,CACrB,IACG6B,WAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EAAAA,CAAAA,YAAa,EAAA,EAAAC,WAAA,CAAA,KAAA,EAAA;YAAA,OACChF,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,cAAe,CAAAsB,KAAA,EAAA,eAAA,CAAA;AAAA,WAAA,EAAA,CAC3B1B,MAAAA,CAAMgG,KAAS,IAAA3F,cAAA,CAAe,OAAO,CAAA,EAClCc,EAAAA,CAAAA,MAAAA,CAAAA,UAAA,CAAWO,KAAQ,GAAA,CAAA,EAAA,GAAA,CAAA,CAAA,MAAA,CAAKoB,OAAOpB,KAAM,CAAA4B,MAAA,CAAA,CAAA,CAAA,EAE1CkC,sBAAsB,MAAM,CAAA,EAC5BA,sBAAsB,MAAM,CAAA,CAC/B,CAAA,EAAAJ,WAAA,CAAA,KAAA,EAAA;YAAA,OAGO,EAAA,CAAA,EAAA,CAAA,MAAA,CAAIhF,cAAe,CAAAsB,KAAA,6BAAwBtB,cAAe,CAAAsB,KAAA;qBACxDkC,EAAAA,cAAAA;WAERvD,EAAAA,CAAAA,eAAe,UAAY,EAAA+E,WAAA,CAAA,SAAA,EAAA;YAAA,MAAgB,EAAA,MAAA;WAAS,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA,EAAAA,WAAA,CAAA,iBAAA,EAAA;AAAA,YAAA,UAAA,EAG3C9C,QACV;AAAA,YAAA,WAAA,EAAWC;wBACDN,QAAA;AAAA,YAAA,SAAA,EACDY,MAAA;AAAA,YAAA,UAAA,EACCF,QACV;YAAA,OAAON,EAAAA,MAAMX,KACb;AAAA,YAAA,cAAA,EAAcsB,aAAatB,KAAAA;AAC7B,WAAA,EAAA,IAAA,CAAA,EAAA0D,WAAA,CAAA,UAAA,EAAA;YAAA,OAES/C,EAAAA,MAAMX,KACb;YAAA,QAAQgB,EAAAA,OAAOhB,KACf;YAAA,QAAQM,EAAAA,MAAO,CAAAN,KAAA;AAAA,YAAA,KAAA,EACVsB,YAAa,CAAAtB,KAAA,CAAMuB;0BACVD,EAAAA,YAAA,CAAatB,MAAM6D,SAAAA;;;;KAO/C,CAAA;AACF,GAAA;AACF,CAAC,CAAA;;;;"}