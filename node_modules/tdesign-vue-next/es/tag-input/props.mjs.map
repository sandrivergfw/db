{"version":3,"file":"props.mjs","sources":["../../src/tag-input/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdTagInputProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 宽度随内容自适应 */\n  autoWidth: Boolean,\n  /** 是否可清空 */\n  clearable: Boolean,\n  /** 标签过多的情况下，折叠项内容，默认为 `+N`。如果需要悬浮就显示其他内容，可以使用 collapsedItems 自定义。`value` 表示标签值，`collapsedTags` 表示折叠标签值，`count` 表示总标签数量 */\n  collapsedItems: {\n    type: Function as PropType<TdTagInputProps['collapsedItems']>,\n  },\n  /** 是否禁用标签输入框 */\n  disabled: Boolean,\n  /** 拖拽调整标签顺序 */\n  dragSort: Boolean,\n  /** 标签超出时的呈现方式，有两种：横向滚动显示 和 换行显示 */\n  excessTagsDisplayType: {\n    type: String as PropType<TdTagInputProps['excessTagsDisplayType']>,\n    default: 'break-line' as TdTagInputProps['excessTagsDisplayType'],\n    validator(val: TdTagInputProps['excessTagsDisplayType']): boolean {\n      if (!val) return true;\n      return ['scroll', 'break-line'].includes(val);\n    },\n  },\n  /** 透传 Input 输入框组件全部属性 */\n  inputProps: {\n    type: Object as PropType<TdTagInputProps['inputProps']>,\n  },\n  /** 输入框的值 */\n  inputValue: {\n    type: [String, Number] as PropType<TdTagInputProps['inputValue']>,\n    default: undefined,\n  },\n  /** 输入框的值，非受控属性 */\n  defaultInputValue: {\n    type: [String, Number] as PropType<TdTagInputProps['defaultInputValue']>,\n    default: '',\n  },\n  /** 左侧文本 */\n  label: {\n    type: [String, Function] as PropType<TdTagInputProps['label']>,\n  },\n  /** 最大允许输入的标签数量 */\n  max: {\n    type: Number,\n  },\n  /** 最小折叠数量，用于标签数量过多的情况下折叠选中项，超出该数值的选中项折叠。值为 0 则表示不折叠 */\n  minCollapsedNum: {\n    type: Number,\n    default: 0,\n  },\n  /** 占位符 */\n  placeholder: {\n    type: String,\n    default: undefined,\n  },\n  /** 只读状态，值为真会隐藏标签移除按钮和输入框 */\n  readonly: Boolean,\n  /** 尺寸 */\n  size: {\n    type: String as PropType<TdTagInputProps['size']>,\n    default: 'medium' as TdTagInputProps['size'],\n    validator(val: TdTagInputProps['size']): boolean {\n      if (!val) return true;\n      return ['small', 'medium', 'large'].includes(val);\n    },\n  },\n  /** 输入框状态 */\n  status: {\n    type: String as PropType<TdTagInputProps['status']>,\n    default: 'default' as TdTagInputProps['status'],\n    validator(val: TdTagInputProps['status']): boolean {\n      if (!val) return true;\n      return ['default', 'success', 'warning', 'error'].includes(val);\n    },\n  },\n  /** 后置图标前的后置内容 */\n  suffix: {\n    type: [String, Function] as PropType<TdTagInputProps['suffix']>,\n  },\n  /** 组件后置图标 */\n  suffixIcon: {\n    type: Function as PropType<TdTagInputProps['suffixIcon']>,\n  },\n  /** 自定义标签的内部内容，每一个标签的当前值。注意和 `valueDisplay` 区分，`valueDisplay`  是用来定义全部标签内容，而非某一个标签 */\n  tag: {\n    type: [String, Function] as PropType<TdTagInputProps['tag']>,\n  },\n  /** 透传 Tag 组件全部属性 */\n  tagProps: {\n    type: Object as PropType<TdTagInputProps['tagProps']>,\n  },\n  /** 输入框下方提示文本，会根据不同的 `status` 呈现不同的样式 */\n  tips: {\n    type: [String, Function] as PropType<TdTagInputProps['tips']>,\n  },\n  /** 值 */\n  value: {\n    type: Array as PropType<TdTagInputProps['value']>,\n    default: undefined,\n  },\n  modelValue: {\n    type: Array as PropType<TdTagInputProps['value']>,\n    default: undefined,\n  },\n  /** 值，非受控属性 */\n  defaultValue: {\n    type: Array as PropType<TdTagInputProps['defaultValue']>,\n  },\n  /** 自定义值呈现的全部内容，参数为所有标签的值 */\n  valueDisplay: {\n    type: [String, Function] as PropType<TdTagInputProps['valueDisplay']>,\n  },\n  /** 失去焦点时触发 */\n  onBlur: Function as PropType<TdTagInputProps['onBlur']>,\n  /** 值变化时触发，参数 `context.trigger` 表示数据变化的触发来源；`context.index` 指当前变化项的下标；`context.item` 指当前变化项；`context.e` 表示事件参数 */\n  onChange: Function as PropType<TdTagInputProps['onChange']>,\n  /** 清空按钮点击时触发 */\n  onClear: Function as PropType<TdTagInputProps['onClear']>,\n  /** 【开发中】拖拽排序时触发 */\n  onDragSort: Function as PropType<TdTagInputProps['onDragSort']>,\n  /** 按键按下 Enter 时触发 */\n  onEnter: Function as PropType<TdTagInputProps['onEnter']>,\n  /** 聚焦时触发 */\n  onFocus: Function as PropType<TdTagInputProps['onFocus']>,\n  /** 输入框值发生变化时触发，`context.trigger` 表示触发输入框值变化的来源：文本输入触发、清除按钮触发、回车键触发等 */\n  onInputChange: Function as PropType<TdTagInputProps['onInputChange']>,\n  /** 进入输入框时触发 */\n  onMouseenter: Function as PropType<TdTagInputProps['onMouseenter']>,\n  /** 离开输入框时触发 */\n  onMouseleave: Function as PropType<TdTagInputProps['onMouseleave']>,\n  /** 粘贴事件，`pasteValue` 表示粘贴板的内容 */\n  onPaste: Function as PropType<TdTagInputProps['onPaste']>,\n  /** 移除单个标签时触发 */\n  onRemove: Function as PropType<TdTagInputProps['onRemove']>,\n};\n"],"names":["autoWidth","Boolean","clearable","collapsedItems","type","Function","disabled","dragSort","excessTagsDisplayType","String","validator","val","includes","inputProps","Object","inputValue","Number","defaultInputValue","label","max","minCollapsedNum","placeholder","readonly","size","status","suffix","suffixIcon","tag","tagProps","tips","value","Array","modelValue","defaultValue","valueDisplay","onBlur","onChange","onClear","onDragSort","onEnter","onFocus","onInputChange","onMouseenter","onMouseleave","onPaste","onRemove"],"mappings":"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"}