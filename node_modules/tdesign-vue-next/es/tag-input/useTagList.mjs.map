{"version":3,"file":"useTagList.mjs","sources":["../../src/tag-input/useTagList.tsx"],"sourcesContent":["import { ref, toRefs } from 'vue';\nimport { TagInputValue, TagInputChangeContext } from './type';\nimport { TagInputProps } from './interface';\nimport { InputValue } from '../input';\nimport Tag from '../tag';\nimport useVModel from '../hooks/useVModel';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useTNodeJSX } from '../hooks/tnode';\n\nexport type ChangeParams = [TagInputChangeContext];\n\n// handle tag add and remove\nexport default function useTagList(props: TagInputProps) {\n  const renderTNode = useTNodeJSX();\n  const classPrefix = usePrefixClass();\n  const { value, modelValue, onRemove, max, minCollapsedNum, size, disabled, readonly, tagProps, getDragProps } =\n    toRefs(props);\n  // handle controlled property and uncontrolled property\n  const [tagValue, setTagValue] = useVModel(value, modelValue, props.defaultValue || [], props.onChange);\n  const oldInputValue = ref<InputValue>();\n\n  // 点击标签关闭按钮，删除标签\n  const onClose = (p: { e?: MouseEvent; index: number; item: string | number }) => {\n    const arr = [...tagValue.value];\n    arr.splice(p.index, 1);\n    setTagValue(arr, { trigger: 'tag-remove', ...p });\n    onRemove.value?.({ ...p, trigger: 'tag-remove', value: arr });\n  };\n\n  const clearAll = (context: { e: MouseEvent }) => {\n    setTagValue([], { trigger: 'clear', e: context.e });\n  };\n\n  // 按下 Enter 键，新增标签\n  const onInnerEnter = (value: InputValue, context: { e: KeyboardEvent }) => {\n    const valueStr = value ? String(value).trim() : '';\n    if (!valueStr) return;\n    const isLimitExceeded = max && tagValue.value?.length >= max.value;\n    let newValue: TagInputValue = tagValue.value;\n    if (!isLimitExceeded) {\n      newValue = tagValue.value instanceof Array ? tagValue.value.concat(String(valueStr)) : [valueStr];\n      setTagValue(newValue, {\n        trigger: 'enter',\n        index: newValue.length - 1,\n        item: valueStr,\n        e: context.e,\n      });\n    }\n    props?.onEnter?.(newValue, { ...context, inputValue: value });\n  };\n\n  // 按下回退键，删除标签\n  const onInputBackspaceKeyUp = (value: InputValue, context: { e: KeyboardEvent }) => {\n    const { e } = context;\n    if (!tagValue.value || !tagValue.value.length) return;\n    // 回车键删除，输入框值为空时，才允许 Backspace 删除标签\n    if (!oldInputValue.value && ['Backspace', 'NumpadDelete'].includes(e.code)) {\n      const index = tagValue.value.length - 1;\n      const item = tagValue.value[index];\n      const trigger = 'backspace';\n      setTagValue(tagValue.value.slice(0, -1), { e, index, item, trigger });\n      onRemove.value?.({ e, index, item, trigger, value: tagValue.value });\n    }\n    oldInputValue.value = value;\n  };\n\n  const renderLabel = ({ displayNode, label }: { displayNode: any; label: any }) => {\n    const newList = minCollapsedNum.value ? tagValue.value.slice(0, minCollapsedNum.value) : tagValue.value;\n    const list = displayNode\n      ? [displayNode]\n      : newList?.map((item, index) => {\n          const tagContent = renderTNode('tag', { params: { value: item } });\n          return (\n            <Tag\n              key={`${item}${index}`}\n              size={size.value}\n              disabled={disabled.value}\n              onClose={(context: { e: MouseEvent }) => onClose({ e: context.e, item, index })}\n              closable={!readonly.value && !disabled.value}\n              {...getDragProps.value?.(index, item)}\n              {...tagProps.value}\n            >\n              {tagContent ?? item}\n            </Tag>\n          );\n        });\n    if (![null, undefined, ''].includes(label)) {\n      list.unshift(\n        <div class={`${classPrefix.value}-tag-input__prefix`} key=\"label\">\n          {label}\n        </div>,\n      );\n    }\n    // 超出省略\n    if (newList.length !== (tagValue.value || []).length) {\n      const len = tagValue.value.length - newList.length;\n      const more = renderTNode('collapsedItems', {\n        params: {\n          value: tagValue.value,\n          count: tagValue.value.length,\n          collapsedTags: tagValue.value.slice(minCollapsedNum.value, tagValue.value.length),\n          collapsedSelectedItems: tagValue.value.slice(minCollapsedNum.value, tagValue.value.length),\n        },\n      });\n      list.push(more ?? <Tag key=\"more\">+{len}</Tag>);\n    }\n    return list;\n  };\n\n  return {\n    tagValue,\n    clearAll,\n    onClose,\n    onInnerEnter,\n    onInputBackspaceKeyUp,\n    renderLabel,\n  };\n}\n"],"names":["useTagList","props","renderTNode","useTNodeJSX","classPrefix","usePrefixClass","toRefs","value","modelValue","onRemove","max","minCollapsedNum","size","disabled","readonly","tagProps","getDragProps","useVModel","defaultValue","onChange","tagValue","setTagValue","oldInputValue","ref","onClose","p","arr","splice","index","trigger","clearAll","context","e","onInnerEnter","valueStr","String","trim","isLimitExceeded","length","newValue","Array","concat","item","onEnter","inputValue","onInputBackspaceKeyUp","includes","code","slice","renderLabel","displayNode","label","newList","list","map","tagContent","params","_createVNode","_mergeProps","unshift","len","more","count","collapsedTags","collapsedSelectedItems","push"],"mappings":"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"}