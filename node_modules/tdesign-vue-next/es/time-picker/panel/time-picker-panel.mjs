/**
 * tdesign v0.24.9
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-b077039f.mjs';
import { defineComponent, toRefs, ref, computed, nextTick, onMounted, watch, createVNode, mergeProps } from 'vue';
import { d as dayjs } from '../../_chunks/dep-ba2c55ff.mjs';
import { c as customParseFormat } from '../../_chunks/dep-cdc28404.mjs';
import { DEFAULT_FORMAT, DEFAULT_STEPS } from '../../_common/js/time-picker/const.mjs';
import { panelProps } from './props.mjs';
import SinglePanel from './single-panel.mjs';
import TButton from '../../button/button.mjs';
import { usePrefixClass } from '../../hooks/useConfig.mjs';
import { useConfig } from '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-178810f1.mjs';
import '../../_chunks/dep-bedb7d80.mjs';
import '../../_chunks/dep-bc166b41.mjs';
import '../../_chunks/dep-7a4db73f.mjs';
import '../../_chunks/dep-ecf1f329.mjs';
import '../../_chunks/dep-bfc93151.mjs';
import '../../_chunks/dep-1375bf98.mjs';
import '../../_chunks/dep-74473837.mjs';
import '../props.mjs';
import '../../_chunks/dep-a9a65d10.mjs';
import '../../_chunks/dep-7fde6385.mjs';
import '../../_chunks/dep-ec5c33ee.mjs';
import '../../_chunks/dep-560cf0c7.mjs';
import '../../_chunks/dep-e97b14c2.mjs';
import '../../_chunks/dep-ea278d31.mjs';
import '../../_chunks/dep-da01978e.mjs';
import '../../_chunks/dep-2539b27d.mjs';
import '../../_chunks/dep-03d7fa8b.mjs';
import '../../_chunks/dep-61d894c9.mjs';
import '../../_chunks/dep-cacce51a.mjs';
import '../../_chunks/dep-5179d432.mjs';
import '../../_chunks/dep-7a8fb00c.mjs';
import '../../_common/js/time-picker/utils.mjs';
import '../../_chunks/dep-4cfcf90d.mjs';
import '../../loading/index.mjs';
import '../../loading/directive.mjs';
import '../../loading/plugin.mjs';
import '../../loading/loading.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_common/js/loading/circle-adapter.mjs';
import '../../_common/js/utils/set-style.mjs';
import '../../_common/js/utils/helper.mjs';
import '../../_chunks/dep-b9d3e48f.mjs';
import '../../utils/dom.mjs';
import '../../_chunks/dep-a63b383f.mjs';
import '../../utils/easing.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-64597fc0.mjs';
import '../../_chunks/dep-cddb9124.mjs';
import '../../_chunks/dep-df662d99.mjs';
import '../../_chunks/dep-671fd175.mjs';
import '../../_chunks/dep-4975791d.mjs';
import '../../_chunks/dep-2aad0459.mjs';
import '../../_chunks/dep-de4be2ca.mjs';
import '../../_chunks/dep-cd4a1d40.mjs';
import '../../_chunks/dep-9bb59c1a.mjs';
import '../../_chunks/dep-96027ed5.mjs';
import '../../utils/transfer-dom.mjs';
import '../../loading/props.mjs';
import '../../_chunks/dep-10b9d296.mjs';
import '../../_chunks/dep-dc72ac1e.mjs';
import '../../_chunks/dep-55f8205a.mjs';
import '../../_chunks/dep-708d2dc7.mjs';
import '../../_chunks/dep-df473a63.mjs';
import '../../_chunks/dep-3374d433.mjs';
import '../../_chunks/dep-180ba4d7.mjs';
import '../../_chunks/dep-0b20cec5.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../config-provider/type.mjs';
import '../../utils/withInstall.mjs';
import './style/css.mjs';
import '../../loading/type.mjs';
import '../../button/props.mjs';
import '../../hooks/useRipple.mjs';
import '../../hooks/useKeepAnimation.mjs';
import '../../utils/set-style.mjs';
import '../../form/hooks.mjs';
import '../../hooks/tnode.mjs';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
dayjs.extend(customParseFormat);
var _TimePickerPanel = defineComponent({
  name: "TimePickerPanel",
  props: _objectSpread(_objectSpread({}, panelProps()), {}, {
    isFooterDisplay: Boolean,
    handleConfirmClick: Function,
    onChange: Function
  }),
  setup: function setup(props) {
    var panelClassName = usePrefixClass("time-picker__panel");
    var _toRefs = toRefs(props),
      steps = _toRefs.steps,
      isFooterDisplay = _toRefs.isFooterDisplay,
      isShowPanel = _toRefs.isShowPanel;
    var triggerScroll = ref(false);
    var panelRef = ref();
    var _useConfig = useConfig("timePicker"),
      globalConfig = _useConfig.globalConfig;
    var showNowTimeBtn = computed(function () {
      return !!steps.value.filter(function (v) {
        return v > 1;
      }).length;
    });
    var defaultValue = computed(function () {
      var isStepsSet = showNowTimeBtn.value;
      if (props.value) {
        return dayjs(props.value, props.format);
      }
      if (isStepsSet) {
        return dayjs().hour(0).minute(0).second(0);
      }
      return dayjs();
    });
    var panelColUpdate = function panelColUpdate() {
      nextTick(function () {
        triggerScroll.value = true;
      });
    };
    var resetTriggerScroll = function resetTriggerScroll() {
      triggerScroll.value = false;
    };
    onMounted(function () {
      panelColUpdate();
    });
    watch(function () {
      return isShowPanel.value;
    }, function () {
      panelColUpdate();
    });
    return function () {
      return createVNode("div", {
        "class": panelClassName.value
      }, [createVNode("div", {
        "class": "".concat(panelClassName.value, "-section-body")
      }, [createVNode(SinglePanel, mergeProps(props, {
        "ref": panelRef,
        "format": props.format || DEFAULT_FORMAT,
        "steps": props.steps || DEFAULT_STEPS,
        "value": props.value,
        "triggerScroll": triggerScroll.value,
        "onChange": props.onChange,
        "resetTriggerScroll": resetTriggerScroll,
        "isShowPanel": props.isShowPanel
      }), null)]), isFooterDisplay.value ? createVNode("div", {
        "class": "".concat(panelClassName.value, "-section-footer")
      }, [createVNode(TButton, {
        "theme": "primary",
        "variant": "base",
        "onClick": function onClick() {
          return props.handleConfirmClick(defaultValue.value);
        },
        "size": "small"
      }, {
        "default": function _default() {
          return [globalConfig.value.confirm];
        }
      }), !showNowTimeBtn.value ? createVNode(TButton, {
        "theme": "primary",
        "variant": "text",
        "size": "small",
        "onClick": function onClick() {
          return props.onChange(dayjs().format(props.format));
        }
      }, {
        "default": function _default() {
          return [globalConfig.value.now];
        }
      }) : null]) : null]);
    };
  }
});

export { _TimePickerPanel as default };
//# sourceMappingURL=time-picker-panel.mjs.map
