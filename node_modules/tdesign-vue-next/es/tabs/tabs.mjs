/**
 * tdesign v0.24.9
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-b077039f.mjs';
import { _ as _slicedToArray } from '../_chunks/dep-a9a65d10.mjs';
import { defineComponent, toRefs, provide, createVNode, mergeProps } from 'vue';
import _TabPanel from './tab-panel.mjs';
import TTabNav from './tab-nav.mjs';
import props from './props.mjs';
import { useTNodeJSX } from '../hooks/tnode.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import useVModel from '../hooks/useVModel.mjs';
import '../_chunks/dep-7fde6385.mjs';
import './tab-panel-props.mjs';
import '../hooks/useDestroyOnClose.mjs';
import '../_chunks/dep-ec5c33ee.mjs';
import '../_chunks/dep-bedb7d80.mjs';
import '../_chunks/dep-7a4db73f.mjs';
import '../_chunks/dep-178810f1.mjs';
import '../_chunks/dep-ecf1f329.mjs';
import '../_chunks/dep-bfc93151.mjs';
import '../_chunks/dep-bc166b41.mjs';
import '../_chunks/dep-1375bf98.mjs';
import '../_chunks/dep-74473837.mjs';
import 'tdesign-icons-vue-next';
import '../_common/js/tabs/base.mjs';
import './tab-nav-item.mjs';
import '../hooks/useRipple.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../_chunks/dep-10b9d296.mjs';
import '../_chunks/dep-dc72ac1e.mjs';
import '../_chunks/dep-55f8205a.mjs';
import '../_chunks/dep-4975791d.mjs';
import '../_chunks/dep-da01978e.mjs';
import '../_chunks/dep-e97b14c2.mjs';
import '../_chunks/dep-df662d99.mjs';
import '../_chunks/dep-2539b27d.mjs';
import '../_chunks/dep-671fd175.mjs';
import '../_chunks/dep-708d2dc7.mjs';
import '../_chunks/dep-df473a63.mjs';
import '../_chunks/dep-2aad0459.mjs';
import '../_chunks/dep-cacce51a.mjs';
import '../_chunks/dep-03d7fa8b.mjs';
import '../_chunks/dep-ea278d31.mjs';
import '../_chunks/dep-3374d433.mjs';
import '../_chunks/dep-180ba4d7.mjs';
import '../_chunks/dep-0b20cec5.mjs';
import '../_chunks/dep-560cf0c7.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../config-provider/useConfig.mjs';
import '../config-provider/type.mjs';
import '../utils/set-style.mjs';
import '../hooks/useGlobalIcon.mjs';
import './tab-nav-bar.mjs';
import '../utils/helper.mjs';
import '../_chunks/dep-b9d3e48f.mjs';
import '../_chunks/dep-de4be2ca.mjs';
import '../_chunks/dep-61d894c9.mjs';
import '../_chunks/dep-cd4a1d40.mjs';
import '../_chunks/dep-5179d432.mjs';
import '../_chunks/dep-7a8fb00c.mjs';
import '../_chunks/dep-9bb59c1a.mjs';
import '../hooks/useListener.mjs';
import '../hooks/useDragSort.mjs';
import '../_chunks/dep-96027ed5.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-64597fc0.mjs';
import '../_chunks/dep-cddb9124.mjs';
import '../_chunks/dep-a63b383f.mjs';

var _Tabs = defineComponent({
  name: "TTabs",
  props: props,
  setup: function setup(props2) {
    var COMPONENT_NAME = usePrefixClass("tabs");
    var classPrefix = usePrefixClass();
    var renderTNodeJSX = useTNodeJSX();
    var _toRefs = toRefs(props2),
      value = _toRefs.value,
      modelValue = _toRefs.modelValue;
    var _useVModel = useVModel(value, modelValue, props2.defaultValue || "", props2.onChange),
      _useVModel2 = _slicedToArray(_useVModel, 2),
      tabValue = _useVModel2[0],
      setTabValue = _useVModel2[1];
    provide("tabs", {
      value: tabValue
    });
    var onTabAdd = function onTabAdd(context) {
      var _props2$onAdd;
      (_props2$onAdd = props2.onAdd) === null || _props2$onAdd === void 0 ? void 0 : _props2$onAdd.call(props2, {
        e: context.e
      });
    };
    var onTabChange = function onTabChange(value2) {
      setTabValue(value2);
    };
    var onTabRemove = function onTabRemove(_ref) {
      var e = _ref.e,
        value2 = _ref.value,
        index = _ref.index;
      props2.onRemove({
        value: value2,
        index: index,
        e: e
      });
    };
    var getSlotPanels = function getSlotPanels() {
      var content = renderTNodeJSX("default");
      if (!content) return [];
      content = content.map(function (item) {
        if (item.children && Array.isArray(item.children)) return item.children;
        return item;
      }).flat().filter(function (item) {
        return item.type.name === "TTabPanel";
      });
      return content;
    };
    var renderHeader = function renderHeader() {
      var _props2$list, _ref2;
      var panels = ((_props2$list = props2.list) !== null && _props2$list !== void 0 && _props2$list.length ? props2.list : getSlotPanels()) || [];
      var panelsData = panels.map(function (item) {
        var selfItem = item;
        if (item.props) {
          Object.keys(item.props).forEach(function (key) {
            selfItem[key] = item.props[key];
          });
        }
        return selfItem;
      });
      var tabNavProps = {
        theme: props2.theme,
        value: tabValue.value,
        size: props2.size,
        disabled: props2.disabled,
        placement: props2.placement,
        addable: props2.addable,
        panels: panelsData,
        dragSort: props2.dragSort
      };
      return createVNode("div", {
        "class": (_ref2 = {}, _defineProperty(_ref2, "".concat(classPrefix.value, "-tabs__header"), true), _defineProperty(_ref2, "".concat(classPrefix.value, "-is-").concat(props2.placement), true), _ref2)
      }, [createVNode(TTabNav, mergeProps(tabNavProps, {
        "onDragSort": props2.onDragSort,
        "onChange": onTabChange,
        "onAdd": onTabAdd,
        "onRemove": onTabRemove
      }), null)]);
    };
    var renderContent = function renderContent() {
      var _props2$list2;
      var panels = getSlotPanels();
      if ((_props2$list2 = props2.list) !== null && _props2$list2 !== void 0 && _props2$list2.length) {
        return props2.list.map(function (item) {
          return createVNode(_TabPanel, mergeProps(item, {
            "onRemove": onTabRemove
          }), null);
        });
      }
      if (panels && panels.length) {
        return createVNode("div", {
          "class": ["".concat(classPrefix.value, "-tabs__content")]
        }, [panels]);
      }
    };
    return function () {
      return createVNode("div", {
        "class": [COMPONENT_NAME.value]
      }, [props2.placement !== "bottom" ? [renderHeader(), renderContent()] : [renderContent(), renderHeader()]]);
    };
  }
});

export { _Tabs as default };
//# sourceMappingURL=tabs.mjs.map
