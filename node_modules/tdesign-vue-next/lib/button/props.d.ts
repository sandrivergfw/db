import { TdButtonProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    block: BooleanConstructor;
    content: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    default: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    disabled: BooleanConstructor;
    ghost: BooleanConstructor;
    href: StringConstructor;
    icon: {
        type: PropType<(h: typeof import("vue").h) => import("../common").SlotReturnValue>;
    };
    loading: BooleanConstructor;
    shape: {
        type: PropType<"square" | "round" | "circle" | "rectangle">;
        default: "square" | "round" | "circle" | "rectangle";
        validator(val: TdButtonProps['shape']): boolean;
    };
    size: {
        type: PropType<import("../common").SizeEnum>;
        default: import("../common").SizeEnum;
        validator(val: TdButtonProps['size']): boolean;
    };
    suffix: {
        type: PropType<(h: typeof import("vue").h) => import("../common").SlotReturnValue>;
    };
    tag: {
        type: PropType<"button" | "a" | "div">;
        validator(val: TdButtonProps['tag']): boolean;
    };
    theme: {
        type: PropType<"default" | "success" | "primary" | "warning" | "danger">;
        validator(val: TdButtonProps['theme']): boolean;
    };
    type: {
        type: PropType<"button" | "reset" | "submit">;
        default: "button" | "reset" | "submit";
        validator(val: TdButtonProps['type']): boolean;
    };
    variant: {
        type: PropType<"outline" | "base" | "text" | "dashed">;
        default: "outline" | "base" | "text" | "dashed";
        validator(val: TdButtonProps['variant']): boolean;
    };
    onClick: PropType<(e: MouseEvent) => void>;
};
export default _default;
