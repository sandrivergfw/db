{"version":3,"file":"anchor.js","sources":["../../src/anchor/anchor.tsx"],"sourcesContent":["import {\n  defineComponent,\n  nextTick,\n  ComponentPublicInstance,\n  ref,\n  reactive,\n  onMounted,\n  onUnmounted,\n  watchEffect,\n  provide,\n} from 'vue';\nimport { ANCHOR_SHARP_REGEXP, ANCHOR_CONTAINER, getOffsetTop } from './utils';\nimport { isServer, on, off, getScroll, scrollTo, getScrollContainer as utilsGetScrollContainer } from '../utils/dom';\nimport props from './props';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { SlotReturnValue } from '../common';\nimport Affix from '../affix';\nimport { TdAnchorProps } from './type';\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { AnchorInjectionKey } from './constants';\n\nexport interface Anchor extends ComponentPublicInstance {\n  scrollContainer: ANCHOR_CONTAINER;\n  // 执行scrollTo设置的flag, 用来禁止执行handleScroll\n  handleScrollLock: boolean;\n}\n\nexport default defineComponent({\n  name: 'TAnchor',\n  props,\n  setup(props: TdAnchorProps, { attrs }) {\n    const anchorRef = ref<HTMLElement | null>(null);\n    const links = ref<string[]>([]);\n    const active = ref('');\n    const scrollContainer = ref<ANCHOR_CONTAINER>(null);\n    const handleScrollLock = ref<boolean>(false);\n    const activeLineStyle = reactive({});\n    const COMPONENT_NAME = usePrefixClass('anchor');\n    const ANCHOR_LINE_CLASSNAME = usePrefixClass('anchor__line');\n    const ANCHOR_LINE_CURSOR_CLASSNAME = usePrefixClass('anchor__line-cursor');\n    const { STATUS, SIZE } = useCommonClassName();\n    const renderTNodeJSX = useTNodeJSX();\n    /**\n     * 获取滚动容器\n     * 1. 如果是string则通过id获取\n     * 2. 如果是method则获取方法返回值\n     */\n    const getScrollContainer = () => {\n      if (isServer) {\n        return;\n      }\n      const { container } = props;\n      scrollContainer.value = utilsGetScrollContainer(container) as HTMLElement;\n      on(scrollContainer.value, 'scroll', handleScroll);\n      handleScroll();\n    };\n    /**\n     * 监听滚动事件\n     */\n    const handleScroll = () => {\n      if (handleScrollLock.value) return;\n      const { bounds, targetOffset } = props;\n      const filters: { top: number; link: string }[] = [];\n      let active = '';\n      // 找出所有当前top小于预设值\n      links.value.forEach((link) => {\n        const anchor = getAnchorTarget(link);\n        if (!anchor) {\n          return;\n        }\n        const top = getOffsetTop(anchor, scrollContainer.value);\n        if (top < bounds + targetOffset) {\n          filters.push({\n            link,\n            top,\n          });\n        }\n      });\n      // 找出小于预设值集合中top最大的\n      if (filters.length) {\n        const latest = filters.reduce((prev, cur) => (prev.top > cur.top ? prev : cur));\n        active = latest.link;\n      }\n      setCurrentActiveLink(active);\n    };\n    /**\n     * 获取锚点对应的target元素\n     *\n     * @param {string} link\n     */\n    const getAnchorTarget = (link: string): HTMLElement => {\n      const matcher = link.match(ANCHOR_SHARP_REGEXP);\n      if (!matcher) {\n        return;\n      }\n      const anchor = document.getElementById(matcher[1]);\n      if (!anchor) {\n        return;\n      }\n      return anchor;\n    };\n    /**\n     * 注册锚点\n     *\n     * @param {string} link\n     */\n    const registerLink = (link: string) => {\n      if (!ANCHOR_SHARP_REGEXP.test(link) || links.value.indexOf(link) !== -1) {\n        return;\n      }\n      links.value.push(link);\n    };\n    /**\n     * 注销锚点\n     *\n     * @param {string} link\n     */\n    const unregisterLink = (link: string) => {\n      links.value = links.value.filter((each) => each !== link);\n    };\n    /**\n     * 设置当前激活状态锚点\n     *\n     * @param {string} link\n     */\n    const setCurrentActiveLink = async (link: string): Promise<void> => {\n      if (active.value === link) {\n        return;\n      }\n      active.value = link;\n      props.onChange?.(link, active.value);\n      await nextTick();\n      updateActiveLine();\n    };\n    /**\n     * 计算active-line所在的位置\n     * 当前active-item的top + height, 以及ANCHOR_ITEM_PADDING修正\n     */\n    const updateActiveLine = () => {\n      const ele = anchorRef.value?.querySelector(`.${STATUS.value.active}>a`) as HTMLAnchorElement;\n      if (!ele) {\n        Object.assign(activeLineStyle, {});\n        return;\n      }\n      const { offsetTop: top, offsetHeight: height } = ele;\n      Object.assign(activeLineStyle, {\n        top: `${top}px`,\n        height: `${height}px`,\n        opacity: 1,\n      });\n    };\n    /**\n     * 监听AnchorLink点击事件\n     * @param {{ href: string; title: string }} link\n     */\n    const handleLinkClick = (link: { href: string; title: string; e: MouseEvent }) => {\n      props.onClick?.(link);\n    };\n    /**\n     * 滚动到指定锚点\n     *\n     * @param {string} link\n     */\n    const handleScrollTo = async (link: string): Promise<void> => {\n      const anchor = getAnchorTarget(link);\n      setCurrentActiveLink(link);\n      if (!anchor) return;\n      handleScrollLock.value = true;\n      const { targetOffset } = props;\n      const scrollTop = getScroll(scrollContainer.value);\n      const offsetTop = getOffsetTop(anchor, scrollContainer.value);\n      const top = scrollTop + offsetTop - targetOffset;\n      await scrollTo(top, {\n        container: scrollContainer.value,\n      });\n      handleScrollLock.value = false;\n    };\n    const renderCursor = () => {\n      const titleContent: SlotReturnValue = renderTNodeJSX('cursor');\n      return titleContent || <div class={ANCHOR_LINE_CURSOR_CLASSNAME.value}></div>;\n    };\n    onMounted(async () => {\n      getScrollContainer();\n      if (active.value) {\n        await nextTick();\n        handleScrollTo(active.value);\n      }\n    });\n    onUnmounted(() => {\n      if (!scrollContainer.value) return;\n      off(scrollContainer.value, 'scroll', handleScroll);\n    });\n    watchEffect(() => {\n      // 清空上一个container的事件监听\n      if (scrollContainer.value) {\n        off(scrollContainer.value, 'scroll', handleScroll);\n      }\n      getScrollContainer();\n    });\n    provide(\n      AnchorInjectionKey,\n      reactive({\n        registerLink,\n        unregisterLink,\n        handleScrollTo,\n        handleLinkClick,\n        active,\n      }),\n    );\n    return () => {\n      const { size, affixProps } = props;\n      const className = [COMPONENT_NAME.value, SIZE.value[size]];\n\n      const content = (\n        <div ref={anchorRef} class={className} {...attrs}>\n          <div class={ANCHOR_LINE_CLASSNAME.value}>\n            <div class={`${ANCHOR_LINE_CURSOR_CLASSNAME.value}-wrapper`} style={activeLineStyle}>\n              {renderCursor()}\n            </div>\n          </div>\n          {renderTNodeJSX('default')}\n        </div>\n      );\n\n      if (affixProps) {\n        return <Affix {...affixProps}>{content}</Affix>;\n      }\n\n      return content;\n    };\n  },\n});\n"],"names":["_isVNode","defineComponent","name","props","setup","attrs","anchorRef","ref","links","active","scrollContainer","handleScrollLock","activeLineStyle","reactive","COMPONENT_NAME","usePrefixClass","ANCHOR_LINE_CLASSNAME","ANCHOR_LINE_CURSOR_CLASSNAME","useCommonClassName","STATUS","SIZE","renderTNodeJSX","useTNodeJSX","getScrollContainer","isServer","container","value","utilsGetScrollContainer","on","handleScroll","bounds","targetOffset","filters","forEach","link","anchor","getAnchorTarget","top","getOffsetTop","push","length","latest","reduce","prev","cur","setCurrentActiveLink","matcher","match","ANCHOR_SHARP_REGEXP","document","getElementById","registerLink","test","indexOf","unregisterLink","filter","each","onChange","nextTick","updateActiveLine","ele","querySelector","Object","assign","offsetTop","height","offsetHeight","opacity","handleLinkClick","onClick","handleScrollTo","scrollTop","getScroll","scrollTo","renderCursor","titleContent","_createVNode","onMounted","onUnmounted","off","watchEffect","provide","AnchorInjectionKey","size","affixProps","className","content"],"mappings":"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"}