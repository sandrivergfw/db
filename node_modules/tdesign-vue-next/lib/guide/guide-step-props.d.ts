import { TdGuideStepProps } from '../guide/type';
import { PropType } from 'vue';
declare const _default: {
    body: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    children: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    content: {
        type: PropType<(h: typeof import("vue").h) => import("../common").SlotReturnValue>;
    };
    element: {
        type: PropType<import("../common").AttachNode>;
        required: boolean;
    };
    highlightContent: {
        type: PropType<(h: typeof import("vue").h) => import("../common").SlotReturnValue>;
    };
    highlightPadding: {
        type: NumberConstructor;
    };
    mode: {
        type: PropType<"dialog" | "popup">;
        validator(val: TdGuideStepProps['mode']): boolean;
    };
    nextButtonProps: {
        type: PropType<import("..").TdButtonProps>;
    };
    offset: {
        type: PropType<(string | number)[]>;
    };
    placement: {
        type: StringConstructor;
        default: string;
    };
    prevButtonProps: {
        type: PropType<import("..").TdButtonProps>;
    };
    showOverlay: {
        type: BooleanConstructor;
        default: boolean;
    };
    skipButtonProps: {
        type: PropType<import("..").TdButtonProps>;
    };
    stepOverlayClass: {
        type: StringConstructor;
        default: string;
    };
    title: {
        type: StringConstructor;
        default: string;
    };
};
export default _default;
