{"version":3,"file":"useCommonClassName.js","sources":["../../src/hooks/useCommonClassName.ts"],"sourcesContent":["import { useConfig } from './useConfig';\n\nexport default function useCommonClassName() {\n  const { classPrefix } = useConfig();\n\n  const sizeClassNames = {\n    small: `${classPrefix.value}-size-s`,\n    medium: `${classPrefix.value}-size-m`,\n    large: `${classPrefix.value}-size-l`,\n    default: '',\n    xs: `${classPrefix.value}-size-xs`,\n    xl: `${classPrefix.value}-size-xl`,\n    block: `${classPrefix.value}-size-full-width`,\n  };\n\n  const statusClassNames = {\n    loading: `${classPrefix.value}-is-loading`,\n    loadMore: `${classPrefix.value}-is-load-more`,\n    disabled: `${classPrefix.value}-is-disabled`,\n    focused: `${classPrefix.value}-is-focused`,\n    success: `${classPrefix.value}-is-success`,\n    error: `${classPrefix.value}-is-error`,\n    warning: `${classPrefix.value}-is-warning`,\n    selected: `${classPrefix.value}-is-selected`,\n    active: `${classPrefix.value}-is-active`,\n    checked: `${classPrefix.value}-is-checked`,\n    current: `${classPrefix.value}-is-current`,\n    hidden: `${classPrefix.value}-is-hidden`,\n    visible: `${classPrefix.value}-is-visible`,\n    expanded: `${classPrefix.value}-is-expanded`,\n    indeterminate: `${classPrefix.value}-is-indeterminate`,\n  };\n  return {\n    classPrefix,\n    sizeClassNames,\n    statusClassNames,\n    classNames: {\n      size: sizeClassNames,\n      status: statusClassNames,\n    },\n  };\n}\n\nexport type CommonClassNameType = ReturnType<typeof useCommonClassName>;\n"],"names":["useCommonClassName","useConfig","classPrefix","sizeClassNames","small","value","medium","large","xs","xl","block","statusClassNames","loading","loadMore","disabled","focused","success","error","warning","selected","active","checked","current","hidden","visible","expanded","indeterminate","classNames","size","status"],"mappings":"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"}