{"version":3,"file":"tag-input.js","sources":["../../src/tag-input/tag-input.tsx"],"sourcesContent":["import { defineComponent, computed, toRefs, nextTick, reactive } from 'vue';\n\nimport { CloseCircleFilledIcon as TdCloseCircleFilledIcon } from 'tdesign-icons-vue-next';\nimport TInput, { InputValue } from '../input';\n\nimport { TdTagInputProps } from './type';\nimport props from './props';\nimport { renderTNodeJSX } from '../utils/render-tnode';\nimport { useConfig } from '../config-provider/useConfig';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\n\nimport useTagScroll from './hooks/useTagScroll';\nimport useTagList from './useTagList';\nimport useHover from './hooks/useHover';\nimport useDefault from '../hooks/useDefaultValue';\nimport useDragSorter from './hooks/useDragSorter';\n\nconst useComponentClassName = () => {\n  return {\n    NAME_CLASS: usePrefixClass('tag-input'),\n    CLEAR_CLASS: usePrefixClass('tag-input__suffix-clear'),\n    BREAK_LINE_CLASS: usePrefixClass('tag-input--break-line'),\n  };\n};\n\nexport default defineComponent({\n  name: 'TTagInput',\n\n  props: { ...props },\n\n  setup(props: TdTagInputProps) {\n    const { NAME_CLASS, CLEAR_CLASS, BREAK_LINE_CLASS } = useComponentClassName();\n    const { CloseCircleFilledIcon } = useGlobalIcon({ CloseCircleFilledIcon: TdCloseCircleFilledIcon });\n\n    const { inputValue } = toRefs(props);\n    const [tInputValue, setTInputValue] = useDefault(\n      inputValue,\n      props.defaultInputValue,\n      props.onInputChange,\n      'inputValue',\n    );\n    const { excessTagsDisplayType, readonly, disabled, clearable, placeholder } = toRefs(props);\n    const { isHover, addHover, cancelHover } = useHover({\n      readonly: props.readonly,\n      disabled: props.disabled,\n      onMouseenter: props.onMouseenter,\n      onMouseleave: props.onMouseleave,\n    });\n    const { classPrefix: prefix } = useConfig();\n    // 这里不需要响应式，因此直接传递参数\n    const { getDragProps } = useDragSorter({\n      ...props,\n      sortOnDraggable: props.dragSort,\n      onDragOverCheck: {\n        x: true,\n        targetClassNameRegExp: new RegExp(`^${prefix}-tag`),\n      },\n    });\n    const { scrollToRight, onWheel, scrollToRightOnEnter, scrollToLeftOnLeave, tagInputRef } = useTagScroll(props);\n    // handle tag add and remove\n    // 需要响应式，为了尽量的和 react 版本做法相同，这里进行响应式处理\n    const { tagValue, onInnerEnter, onInputBackspaceKeyUp, clearAll, renderLabel, onClose } = useTagList(\n      reactive({\n        ...toRefs(props),\n        getDragProps,\n      }),\n    );\n\n    const classes = computed(() => {\n      return [\n        NAME_CLASS.value,\n        {\n          [BREAK_LINE_CLASS.value]: excessTagsDisplayType.value === 'break-line',\n        },\n      ];\n    });\n\n    const tagInputPlaceholder = computed(() => (!tagValue.value?.length ? placeholder.value : ''));\n\n    const showClearIcon = computed(() =>\n      Boolean(\n        !readonly.value &&\n          !disabled.value &&\n          clearable.value &&\n          isHover.value &&\n          (tagValue.value?.length || tInputValue.value),\n      ),\n    );\n\n    const onInputEnter = (value: InputValue, context: { e: KeyboardEvent }) => {\n      // 阻止 Enter 默认行为，避免在 Form 中触发 submit 事件\n      context.e?.preventDefault?.();\n      setTInputValue('', { e: context.e, trigger: 'enter' });\n      onInnerEnter(value, context);\n      nextTick(() => {\n        scrollToRight();\n      });\n    };\n\n    const onClick = () => {\n      tagInputRef.value.focus();\n    };\n\n    const onClearClick = (context: { e: MouseEvent }) => {\n      clearAll(context);\n      setTInputValue('', { e: context.e, trigger: 'clear' });\n      props.onClear?.(context);\n    };\n\n    return {\n      CLEAR_CLASS,\n      CloseCircleFilledIcon,\n      tagValue,\n      tInputValue,\n      isHover,\n      tagInputPlaceholder,\n      showClearIcon,\n      tagInputRef,\n      setTInputValue,\n      addHover,\n      cancelHover,\n      onInputEnter,\n      onInnerEnter,\n      onInputBackspaceKeyUp,\n      renderLabel,\n      onWheel,\n      scrollToRightOnEnter,\n      scrollToLeftOnLeave,\n      onClick,\n      onClearClick,\n      onClose,\n      classes,\n    };\n  },\n\n  render() {\n    const { CloseCircleFilledIcon } = this;\n\n    const suffixIconNode = this.showClearIcon ? (\n      <CloseCircleFilledIcon class={this.CLEAR_CLASS} onClick={this.onClearClick} />\n    ) : (\n      renderTNodeJSX(this, 'suffixIcon')\n    );\n    // 自定义 Tag 节点\n    const displayNode = renderTNodeJSX(this, 'valueDisplay', {\n      params: {\n        value: this.tagValue,\n        onClose: (index: number, item: any) => this.onClose({ index, item }),\n      },\n    });\n    // 左侧文本\n    const label = renderTNodeJSX(this, 'label', { silent: true });\n    return (\n      <TInput\n        ref=\"tagInputRef\"\n        readonly={this.readonly}\n        value={this.tInputValue}\n        autoWidth={true} // 控制input_inner的宽度 设置为true让内部input不会提前换行\n        size={this.size}\n        disabled={this.disabled}\n        label={() => this.renderLabel({ displayNode, label })}\n        class={this.classes}\n        tips={this.tips}\n        status={this.status}\n        placeholder={this.tagInputPlaceholder}\n        suffix={this.suffix}\n        suffixIcon={() => suffixIconNode}\n        showInput={\n          !(this.inputProps as TdTagInputProps['inputProps'])?.readonly || !this.tagValue || !this.tagValue?.length\n        }\n        keepWrapperWidth={!this.autoWidth}\n        onWheel={this.onWheel}\n        onChange={(val: InputValue, context?: { e?: InputEvent | MouseEvent }) => {\n          this.setTInputValue(val, { ...context, trigger: 'input' });\n        }}\n        onPaste={this.onPaste}\n        onEnter={this.onInputEnter}\n        onKeyup={this.onInputBackspaceKeyUp}\n        onMouseenter={(context: { e: MouseEvent }) => {\n          this.addHover(context);\n          this.scrollToRightOnEnter();\n        }}\n        onMouseleave={(context: { e: MouseEvent }) => {\n          this.cancelHover(context);\n          this.scrollToLeftOnLeave();\n        }}\n        onFocus={(inputValue: InputValue, context: { e: MouseEvent }) => {\n          this.onFocus?.(this.tagValue, { e: context.e, inputValue });\n        }}\n        onBlur={(inputValue: InputValue, context: { e: MouseEvent }) => {\n          this.onBlur?.(this.tagValue, { e: context.e, inputValue });\n        }}\n        onClick={this.onClick}\n        {...(this.inputProps as TdTagInputProps['inputProps'])}\n      />\n    );\n  },\n});\n"],"names":["useComponentClassName","NAME_CLASS","usePrefixClass","CLEAR_CLASS","BREAK_LINE_CLASS","defineComponent","name","props","setup","useGlobalIcon","CloseCircleFilledIcon","TdCloseCircleFilledIcon","toRefs","inputValue","useDefault","defaultInputValue","onInputChange","tInputValue","setTInputValue","excessTagsDisplayType","readonly","disabled","clearable","placeholder","useHover","onMouseenter","onMouseleave","isHover","addHover","cancelHover","useConfig","prefix","classPrefix","useDragSorter","sortOnDraggable","dragSort","onDragOverCheck","x","targetClassNameRegExp","RegExp","getDragProps","useTagScroll","scrollToRight","onWheel","scrollToRightOnEnter","scrollToLeftOnLeave","tagInputRef","useTagList","reactive","tagValue","onInnerEnter","onInputBackspaceKeyUp","clearAll","renderLabel","onClose","classes","computed","value","tagInputPlaceholder","length","showClearIcon","Boolean","onInputEnter","context","e","preventDefault","trigger","nextTick","onClick","focus","onClearClick","onClear","render","suffixIconNode","_createVNode","renderTNodeJSX","displayNode","params","index","item","label","silent","TInput","_mergeProps","size","tips","status","suffix","inputProps","autoWidth","val","onPaste","onFocus","onBlur"],"mappings":"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"}