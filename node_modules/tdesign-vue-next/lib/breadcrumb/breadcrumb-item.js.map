{"version":3,"file":"breadcrumb-item.js","sources":["../../src/breadcrumb/breadcrumb-item.tsx"],"sourcesContent":["import { defineComponent, VNode, inject, ref, computed, getCurrentInstance, onMounted, onBeforeUpdate } from 'vue';\nimport { ChevronRightIcon as TdChevronRightIcon } from 'tdesign-icons-vue-next';\n\nimport props from './breadcrumb-item-props';\nimport Tooltip from '../tooltip/index';\nimport { isNodeOverflow } from '../utils/dom';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport { useTNodeJSX } from '../hooks/tnode';\n\ninterface LocalTBreadcrumb {\n  separator: (() => void) | string;\n  theme: string;\n  slots: {\n    separator: VNode | string;\n  };\n  maxItemWidth: string;\n}\n\nconst localTBreadcrumbOrigin: LocalTBreadcrumb = {\n  separator: '',\n  theme: 'light',\n  slots: { separator: '' },\n  maxItemWidth: undefined,\n};\n\nexport default defineComponent({\n  name: 'TBreadcrumbItem',\n  props: {\n    ...props,\n  },\n  setup(props, { slots, attrs }) {\n    const breadcrumbText = ref<HTMLElement>();\n    const localTBreadcrumb = inject('tBreadcrumb', localTBreadcrumbOrigin);\n    const themeClassName = ref(localTBreadcrumb?.theme);\n    const isCutOff = ref(false);\n    const COMPONENT_NAME = usePrefixClass('breadcrumb__item');\n    const separatorClass = usePrefixClass('breadcrumb__separator');\n    const disableClass = usePrefixClass('is-disabled');\n    const linkClass = usePrefixClass('link');\n    const maxLengthClass = usePrefixClass('breadcrumb__inner');\n    const textFlowClass = usePrefixClass('breadcrumb--text-overflow');\n\n    const { ChevronRightIcon } = useGlobalIcon({ ChevronRightIcon: TdChevronRightIcon });\n    const maxWithStyle = computed(() => {\n      const maxItemWidth = localTBreadcrumb?.maxItemWidth;\n      const maxWith: string = props.maxWidth || maxItemWidth || '120';\n      return { maxWidth: `${maxWith}px` };\n    });\n\n    onMounted(() => {\n      isCutOff.value = isNodeOverflow(breadcrumbText.value);\n    });\n    onBeforeUpdate(() => {\n      isCutOff.value = isNodeOverflow(breadcrumbText.value);\n    });\n\n    const separatorPropContent = localTBreadcrumb?.separator;\n    const separatorSlot = localTBreadcrumb?.slots?.separator;\n    const separatorContent = separatorPropContent || separatorSlot || (\n      <ChevronRightIcon {...{ color: 'rgba(0,0,0,.3)' }} />\n    );\n    const { proxy } = getCurrentInstance();\n    const bindEvent = (e: MouseEvent) => {\n      if (!props.disabled) {\n        e.preventDefault();\n        if (props.href) {\n          window.location.href = props.href;\n        }\n        const router = props.router || proxy.$root.$router;\n        if (props.to && router) {\n          props.replace ? router.replace(props.to) : router.push(props.to);\n        }\n      }\n    };\n\n    return () => {\n      const renderTNodeJSX = useTNodeJSX();\n\n      const itemClass = [COMPONENT_NAME.value, themeClassName.value];\n      const textClass = [textFlowClass.value];\n\n      if (props.disabled) {\n        textClass.push(disableClass.value);\n      }\n\n      const listeners = {\n        onClick: (e: MouseEvent) => {\n          if (props.disabled) {\n            e.stopPropagation();\n            return;\n          }\n          (props as any).onClick?.({ e });\n        },\n      };\n      const textContent = (\n        <span {...{ class: maxLengthClass.value, style: maxWithStyle.value }}>\n          {renderTNodeJSX('icon')}\n          <span ref={breadcrumbText} class={`${maxLengthClass.value}-text`}>\n            {renderTNodeJSX('default')}\n          </span>\n        </span>\n      );\n      let itemContent = <span {...{ class: textClass, ...listeners }}>{textContent}</span>;\n\n      if ((props.href || props.to) && !props.disabled) {\n        textClass.push(linkClass.value);\n        itemContent = (\n          <a class={textClass} href={props.href} target={props.target} {...listeners} onClick={bindEvent}>\n            {textContent}\n          </a>\n        );\n      }\n      return (\n        <div class={itemClass} {...attrs}>\n          {isCutOff.value ? <Tooltip content={() => slots?.default()}>{itemContent}</Tooltip> : itemContent}\n          <span class={separatorClass.value}>\n            {typeof separatorContent === 'function' ? separatorContent() : separatorContent}\n          </span>\n        </div>\n      );\n    };\n  },\n});\n"],"names":["_isVNode","localTBreadcrumbOrigin","separator","theme","slots","maxItemWidth","defineComponent","name","props","setup","attrs","breadcrumbText","ref","localTBreadcrumb","inject","themeClassName","isCutOff","COMPONENT_NAME","usePrefixClass","separatorClass","disableClass","linkClass","maxLengthClass","textFlowClass","useGlobalIcon","ChevronRightIcon","TdChevronRightIcon","maxWithStyle","computed","maxWith","maxWidth","onMounted","value","isNodeOverflow","onBeforeUpdate","separatorPropContent","separatorSlot","separatorContent","_createVNode","color","getCurrentInstance","proxy","bindEvent","e","disabled","preventDefault","href","window","location","router","$root","$router","to","replace","push","renderTNodeJSX","useTNodeJSX","itemClass","textClass","listeners","onClick","stopPropagation","textContent","style","itemContent","_mergeProps","target"],"mappings":"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"}