import { PropType } from 'vue';
import { SortType } from './type';
declare type SortTypeEnums = Array<'desc' | 'asc'>;
declare const _default: import("vue").DefineComponent<{
    sortType: {
        type: PropType<SortType>;
        default: string;
    };
    sortOrder: {
        type: StringConstructor;
        default: () => string;
    };
    sortIcon: PropType<(h: typeof import("vue").h) => import("../common").SlotReturnValue>;
    tooltipProps: PropType<import("../tooltip").TdTooltipProps>;
    hideSortTips: BooleanConstructor;
}, {
    t: <T>(pattern: T, ...args: any[]) => any;
    globalConfig: import("vue").ComputedRef<({
        expandIcon: any;
        sortIcon: any;
        filterIcon: any;
        treeExpandAndFoldIcon: any;
        hideSortTips: boolean;
    } & {
        empty: string;
        loadingText: string;
        loadingMoreText: string;
        filterInputPlaceholder: string;
        sortAscendingOperationText: string;
        sortCancelOperationText: string;
        sortDescendingOperationText: string;
        clearFilterResultButtonText: string;
        columnConfigButtonText: string;
        columnConfigTitleText: string;
        columnConfigDescriptionText: string;
        confirmText: string;
        cancelText: string;
        resetText: string;
        selectAllText: string;
        searchResultText: string;
    }) | import("..").TableConfig>;
    ChevronDownIcon: any;
    tableSortClasses: {
        sortable: string;
        sortColumn: string;
        title: string;
        trigger: string;
        doubleIcon: string;
        sortIcon: string;
        iconDirection: {
            asc: string;
            desc: string;
        };
        iconActive: string;
        iconDefault: string;
    };
    negativeRotate180: string;
    allowSortTypes: import("vue").ComputedRef<SortTypeEnums>;
    onSortIconClick: (e: MouseEvent, direction: string) => void;
    renderTNode: (name: string, options?: import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }> | import("../utils/render-tnode").JSXRenderContext) => any;
}, unknown, {}, {
    getSortIcon(direction: string, activeClass: string): JSX.Element;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "sort-icon-click"[], "sort-icon-click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    sortType: {
        type: PropType<SortType>;
        default: string;
    };
    sortOrder: {
        type: StringConstructor;
        default: () => string;
    };
    sortIcon: PropType<(h: typeof import("vue").h) => import("../common").SlotReturnValue>;
    tooltipProps: PropType<import("../tooltip").TdTooltipProps>;
    hideSortTips: BooleanConstructor;
}>> & {
    "onSort-icon-click"?: (...args: any[]) => any;
}, {
    hideSortTips: boolean;
    sortType: SortType;
    sortOrder: string;
}>;
export default _default;
