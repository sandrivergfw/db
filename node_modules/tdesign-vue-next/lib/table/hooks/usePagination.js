/**
 * tdesign v0.24.9
 * (c) 2022 tdesign
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { toRefs, ref, watch, createVNode, mergeProps } from 'vue';
import { useConfig } from '../../config-provider/useConfig.js';
import { Pagination } from '../../pagination/index.js';
import '../../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import '../../_common/js/global-config/default-config.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../pagination/pagination.js';
import '@babel/runtime/helpers/typeof';
import '@babel/runtime/helpers/objectWithoutProperties';
import '@babel/runtime/helpers/slicedToArray';
import 'lodash/isNaN';
import 'tdesign-icons-vue-next';
import '../../hooks/useConfig.js';
import '../../hooks/useGlobalIcon.js';
import '../../input-number/index.js';
import '../../input-number/input-number.js';
import '../../button/index.js';
import '../../button/button.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../../loading/index.js';
import '../../loading/directive.js';
import '../../loading/plugin.js';
import '../../loading/loading.js';
import '../../loading/icon/gradient.js';
import '../../_common/js/loading/circle-adapter.js';
import '../../_common/js/utils/set-style.js';
import '../../_common/js/utils/helper.js';
import '../../utils/dom.js';
import '../../_chunks/dep-010ef7cd.js';
import 'lodash/isString';
import '../../utils/easing.js';
import '../../utils/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isFunction';
import 'lodash/isObject';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../../utils/transfer-dom.js';
import '../../loading/props.js';
import '../../utils/withInstall.js';
import '../../button/props.js';
import '../../hooks/useRipple.js';
import '../../hooks/useKeepAnimation.js';
import '../../utils/set-style.js';
import '../../form/hooks.js';
import '../../hooks/tnode.js';
import '../../input/index.js';
import '../../input/input.js';
import '../../input/props.js';
import '../../input/useInput.js';
import '../../form/const.js';
import '../../hooks/useVModel.js';
import '../../input/useLengthLimit.js';
import '../../_common/js/log/log.js';
import '../../input/useInputEventHandler.js';
import '../../input/useInputWidth.js';
import '../../input/input-group.js';
import '../../input-number/props.js';
import '../../input-number/useInputNumber.js';
import '../../hooks/useCommonClassName.js';
import '../../_common/js/input-number/number.js';
import 'lodash/isNumber';
import '../../_common/js/input-number/large-number.js';
import '../../select/index.js';
import '../../select/select.js';
import 'lodash/pick';
import 'lodash/isArray';
import 'lodash/debounce';
import 'lodash/cloneDeep';
import 'lodash/get';
import 'lodash/intersection';
import '../../common-components/fake-arrow.js';
import '../../select-input/index.js';
import '../../select-input/select-input.js';
import '../../popup/index.js';
import '../../popup/popup.js';
import '@popperjs/core';
import '../../popup/props.js';
import '../../popup/container.js';
import '../../select-input/props.js';
import '../../select-input/useSingle.js';
import '../../hooks/useDefaultValue.js';
import '../../select-input/useMultiple.js';
import '../../tag-input/index.js';
import '../../tag-input/tag-input.js';
import '../../tag-input/props.js';
import '../../tag-input/hooks/useTagScroll.js';
import '../../tag-input/useTagList.js';
import '../../tag/index.js';
import '../../tag/tag.js';
import '../../tag/props.js';
import '../../tag/check-tag.js';
import '../../tag/check-tag-props.js';
import '../../tag-input/hooks/useHover.js';
import '../../tag-input/hooks/useDragSorter.js';
import '../../select-input/useOverlayInnerStyle.js';
import '../../select/select-panel.js';
import 'lodash/omit';
import '../../select/option.js';
import '../../select/option-props.js';
import '../../checkbox/index.js';
import '../../checkbox/checkbox.js';
import '../../checkbox/props.js';
import '../../checkbox/constants.js';
import '../../checkbox/group.js';
import '../../checkbox/checkbox-group-props.js';
import '../../hooks/slot.js';
import '../../select/helper.js';
import '../../select/optionGroup.js';
import '../../select/option-group-props.js';
import '../../select/props.js';
import '../../select/hooks/usePanelVirtualScroll.js';
import '../../hooks/useVirtualScroll.js';
import '../../select/hooks/useSelectOptions.js';
import '../../input-adornment/index.js';
import '../../input-adornment/input-adornment.js';
import '../../input-adornment/props.js';
import '../../pagination/props.js';
import '../../pagination/usePaginationClasses.js';
import '../../pagination/useMoreAction.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function usePagination(props) {
  var _toRefs = toRefs(props),
    pagination = _toRefs.pagination,
    data = _toRefs.data,
    disableDataPage = _toRefs.disableDataPage;
  var _useConfig = useConfig(),
    classPrefix = _useConfig.classPrefix;
  var dataSource = ref([]);
  var isPaginateData = ref(false);
  var updateDataSourceAndPaginate = function updateDataSourceAndPaginate() {
    var current = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
    var pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;
    var data2 = props.data;
    var t = Boolean(!disableDataPage.value && data2.length > pageSize);
    isPaginateData.value = t;
    if (t) {
      var start = (current - 1) * pageSize;
      var end = current * pageSize;
      dataSource.value = data2.slice(start, end);
    } else {
      dataSource.value = data2;
    }
  };
  watch(function () {
    var _pagination$value, _pagination$value2;
    return [(_pagination$value = pagination.value) === null || _pagination$value === void 0 ? void 0 : _pagination$value.current, (_pagination$value2 = pagination.value) === null || _pagination$value2 === void 0 ? void 0 : _pagination$value2.pageSize, data.value.length, disableDataPage];
  }, function () {
    if (!pagination.value || !pagination.value.current) return;
    updateDataSourceAndPaginate(pagination.value.current, pagination.value.pageSize);
  }, {
    immediate: true
  });
  watch([data], function () {
    if (!pagination.value || !pagination.value.defaultCurrent) return;
    updateDataSourceAndPaginate(pagination.value.defaultCurrent, pagination.value.defaultPageSize);
  }, {
    immediate: true
  });
  var renderPagination = function renderPagination() {
    if (!props.pagination) return null;
    var paginationProps = _objectSpread({}, props.pagination);
    delete paginationProps.onChange;
    return createVNode("div", {
      "class": "".concat(classPrefix.value, "-table__pagination")
    }, [createVNode(Pagination, mergeProps(paginationProps, {
      "onChange": function onChange(pageInfo) {
        var _props$pagination, _props$pagination$onC, _props$onPageChange;
        (_props$pagination = props.pagination) === null || _props$pagination === void 0 ? void 0 : (_props$pagination$onC = _props$pagination.onChange) === null || _props$pagination$onC === void 0 ? void 0 : _props$pagination$onC.call(_props$pagination, pageInfo);
        (_props$onPageChange = props.onPageChange) === null || _props$onPageChange === void 0 ? void 0 : _props$onPageChange.call(props, pageInfo, dataSource.value);
        if (pagination && !pagination.value.current && pagination.value.defaultCurrent) {
          updateDataSourceAndPaginate(pageInfo.current, pageInfo.pageSize);
        }
      }
    }), null)]);
  };
  return {
    isPaginateData: isPaginateData,
    dataSource: dataSource,
    renderPagination: renderPagination
  };
}

export { usePagination as default };
//# sourceMappingURL=usePagination.js.map
