{"version":3,"file":"collapse-panel.js","sources":["../../src/collapse/collapse-panel.tsx"],"sourcesContent":["import { defineComponent, ref, computed, inject, Ref, toRefs, Transition } from 'vue';\nimport props from './collapse-panel-props';\nimport FakeArrow from '../common-components/fake-arrow';\nimport { CollapseValue, TdCollapsePanelProps } from './type';\nimport { useTNodeJSX, useContent } from '../hooks/tnode';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport useCollapseAnimation from './useCollapseAnimation';\n\nexport default defineComponent({\n  name: 'TCollapsePanel',\n  props,\n  setup(props: TdCollapsePanelProps, { slots }) {\n    const renderTNodeJSX = useTNodeJSX();\n    const renderContent = useContent();\n    const componentName = usePrefixClass('collapse-panel');\n    const disableClass = usePrefixClass('is-disabled');\n    const clickableClass = usePrefixClass('is-clickable');\n    const transitionClass = usePrefixClass('slide-down');\n    const { value, disabled, destroyOnCollapse } = toRefs(props);\n    const collapseValue: Ref<CollapseValue> = inject('collapseValue');\n    const updateCollapseValue: Function = inject('updateCollapseValue');\n    const getUniqId: Function = inject('getUniqId', () => undefined, false);\n    const {\n      defaultExpandAll,\n      disabled: disableAll,\n      expandIconPlacement,\n      expandOnRowClick,\n    } = inject<any>('collapseProps');\n    const renderParentTNode: Function = inject('renderParentTNode');\n    const innerValue = value.value || getUniqId();\n    if (defaultExpandAll.value) {\n      updateCollapseValue(innerValue);\n    }\n    const { beforeEnter, enter, afterEnter, beforeLeave, leave, afterLeave } = useCollapseAnimation();\n    const iconRef = ref<HTMLElement>();\n    const isDisabled = computed(() => disabled.value || disableAll.value);\n    const isActive = computed(() =>\n      collapseValue.value instanceof Array\n        ? collapseValue.value.includes(innerValue)\n        : collapseValue.value === innerValue,\n    );\n    const classes = computed(() => {\n      return [componentName.value, { [disableClass.value]: isDisabled.value }];\n    });\n    const panelExpandIcon = computed(() => slots.expandIcon || props.expandIcon);\n    const handleClick = (e: MouseEvent) => {\n      const canExpand = expandOnRowClick.value || e.currentTarget === iconRef.value;\n      if (canExpand && !isDisabled.value) {\n        updateCollapseValue(innerValue);\n      }\n      e.stopPropagation();\n    };\n    const renderDefaultIcon = () => {\n      return <FakeArrow overlayClassName={`${componentName.value}__icon--default`} />;\n    };\n    const renderIcon = () => {\n      const tNodeRender = panelExpandIcon.value === undefined ? renderParentTNode : renderTNodeJSX;\n      return (\n        <div\n          ref={iconRef}\n          class={`${componentName.value}__icon ${componentName.value}__icon--${expandIconPlacement.value} ${\n            isActive.value ? `${componentName.value}__icon--active` : ''\n          }`}\n          onClick={handleClick}\n        >\n          {tNodeRender('expandIcon', renderDefaultIcon())}\n        </div>\n      );\n    };\n    const renderBlank = () => {\n      return <div class={`${componentName.value}__header--blank`}></div>;\n    };\n    const renderHeader = () => {\n      const cls = [\n        `${componentName.value}__header`,\n        {\n          [clickableClass.value]: expandOnRowClick.value && !isDisabled.value,\n        },\n      ];\n      return (\n        <div class={cls} onClick={handleClick}>\n          {expandIconPlacement.value === 'left' && renderIcon()}\n          {renderTNodeJSX('header')}\n          {renderBlank()}\n          {renderTNodeJSX('headerRightContent')}\n          {expandIconPlacement.value === 'right' && renderIcon()}\n        </div>\n      );\n    };\n    const renderBodyByNormal = () => {\n      return (\n        <div v-show={isActive.value} class={`${componentName.value}__body`}>\n          <div class={`${componentName.value}__content`}>{renderContent('default', 'content')}</div>\n        </div>\n      );\n    };\n    const renderBodyDestroyOnCollapse = () => {\n      return isActive.value ? (\n        <div class={`${componentName.value}__body`}>\n          <div class={`${componentName.value}__content`}>{renderContent('default', 'content')}</div>\n        </div>\n      ) : null;\n    };\n    const renderBody = () => {\n      return destroyOnCollapse.value ? renderBodyDestroyOnCollapse() : renderBodyByNormal();\n    };\n    return () => {\n      return (\n        <div class={classes.value}>\n          <div class={`${componentName.value}__wrapper`}>\n            {renderHeader()}\n            <Transition\n              name={transitionClass.value}\n              onBeforeEnter={beforeEnter}\n              onEnter={enter}\n              onAfterEnter={afterEnter}\n              onBeforeLeave={beforeLeave}\n              onLeave={leave}\n              onAfterLeave={afterLeave}\n            >\n              {renderBody()}\n            </Transition>\n          </div>\n        </div>\n      );\n    };\n  },\n});\n"],"names":["_isVNode","defineComponent","name","props","setup","slots","renderTNodeJSX","useTNodeJSX","renderContent","useContent","componentName","usePrefixClass","disableClass","clickableClass","transitionClass","toRefs","value","disabled","destroyOnCollapse","collapseValue","inject","updateCollapseValue","getUniqId","defaultExpandAll","disableAll","expandIconPlacement","expandOnRowClick","renderParentTNode","innerValue","useCollapseAnimation","beforeEnter","enter","afterEnter","beforeLeave","leave","afterLeave","iconRef","ref","isDisabled","computed","isActive","Array","includes","classes","panelExpandIcon","expandIcon","handleClick","e","canExpand","currentTarget","stopPropagation","renderDefaultIcon","_createVNode","renderIcon","tNodeRender","renderBlank","renderHeader","cls","renderBodyByNormal","_withDirectives","_vShow","renderBodyDestroyOnCollapse","renderBody"],"mappings":"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"}