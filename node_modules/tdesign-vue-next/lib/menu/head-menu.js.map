{"version":3,"file":"head-menu.js","sources":["../../src/menu/head-menu.tsx"],"sourcesContent":["import { defineComponent, computed, provide, ref, reactive, watch, onMounted, watchEffect, toRefs, h } from 'vue';\nimport { EllipsisIcon } from 'tdesign-icons-vue-next';\nimport log from '../_common/js/log/log';\nimport props from './head-menu-props';\nimport { MenuValue } from './type';\nimport { TdMenuInterface, TdOpenType } from './const';\nimport { Tabs, TabPanel } from '../tabs';\n\nimport Submenu from './submenu';\nimport VMenu from './v-menu';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport useVModel from '../hooks/useVModel';\nimport useDefaultValue from '../hooks/useDefaultValue';\n\nexport default defineComponent({\n  name: 'THeadMenu',\n  props: { ...props },\n  setup(props, ctx) {\n    const classPrefix = usePrefixClass();\n    watchEffect(() => {\n      if (ctx.slots.options) {\n        log.warnOnce('TMenu', '`options` slot is going to be deprecated, please use `operations` for slot instead.');\n      }\n    });\n    const { value, modelValue, expanded } = toRefs(props);\n    const [activeValue, setActiveValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const [expandValues, setExpanded] = useDefaultValue(expanded, props.defaultExpanded, props.onExpand, 'expanded');\n    const activeValues = ref([]);\n    const theme = computed(() => props.theme);\n    const menuClass = computed(() => [\n      `${classPrefix.value}-menu`,\n      `${classPrefix.value}-head-menu`,\n      `${classPrefix.value}-menu--${props.theme}`,\n    ]);\n    const mode = ref(props.expandType);\n    const submenu = reactive([]);\n    const vMenu = new VMenu({ isMutex: true, expandValues: expandValues.value });\n\n    provide<TdMenuInterface>('TdMenu', {\n      mode,\n      theme,\n      vMenu,\n      isHead: true,\n      expandValues,\n      activeValue,\n      activeValues,\n      select: (value: MenuValue) => {\n        setActiveValue(value);\n      },\n      open: (value: MenuValue, type: TdOpenType) => {\n        const expanded = [...expandValues.value];\n        const index = expanded.indexOf(value);\n\n        if (mode.value === 'popup') {\n          if (type === 'add') {\n            if (index === -1) {\n              // 可能初始expanded里包含了该value\n              expanded.push(value);\n            }\n          } else if (type === 'remove') {\n            expanded.splice(index, 1);\n          }\n        } else if (mode.value === 'normal' && value !== undefined) {\n          expanded.splice(0, 1);\n          if (index === -1) {\n            expanded.push(value);\n          }\n        }\n        setExpanded(expanded);\n      },\n    });\n\n    // methods\n    const handleTabChange = (value: MenuValue) => {\n      setActiveValue(value);\n    };\n\n    const handleSubmenuExpand = (value: MenuValue) => {\n      const ans = vMenu.getChild(value);\n      submenu.length = 0;\n      submenu.push(...ans);\n    };\n\n    // watch\n    watch(expandValues, (value) => {\n      if (mode.value === 'normal') {\n        handleSubmenuExpand(value[0]);\n      }\n    });\n    const updateActiveValues = (value: MenuValue) => {\n      activeValues.value = vMenu.select(value);\n    };\n    watch(activeValue, updateActiveValues);\n    watch(\n      () => props.expandType,\n      (value) => {\n        mode.value = value;\n      },\n    );\n\n    onMounted(() => {\n      activeValues.value = vMenu.select(activeValue.value);\n      if (expandValues.value?.length > 0) {\n        handleSubmenuExpand(expandValues.value[0]); // 顶部导航只能同时展开一个子菜单\n      }\n    });\n    // setup返回的render函数中无法访问methods属性中的类容，移动此方法到setup中\n    const renderNormalSubmenu = () => {\n      if (submenu.length === 0) return null;\n      return (\n        <ul class={[`${classPrefix.value}-head-menu__submenu`, `${classPrefix.value}-submenu`]}>\n          {\n            <Tabs value={activeValue.value} onChange={handleTabChange}>\n              {submenu.map((item) => (\n                <TabPanel value={item.value} label={item.vnode()[0]?.children} />\n              ))}\n            </Tabs>\n          }\n        </ul>\n      );\n    };\n\n    const menuContainerRef = ref<HTMLDivElement>();\n    const menuRef = ref<HTMLUListElement>();\n    const innerRef = ref<HTMLDivElement>();\n    const logoRef = ref<HTMLDivElement>();\n    const operationRef = ref<HTMLDivElement>();\n\n    const getComputedCss = (el: Element, cssProperty: keyof CSSStyleDeclaration) =>\n      getComputedStyle(el)[cssProperty] ?? '';\n\n    const getComputedCssValue = (el: Element, cssProperty: keyof CSSStyleDeclaration) =>\n      Number.parseInt(String(getComputedCss(el, cssProperty)), 10);\n\n    const calcMenuWidth = () => {\n      const menuPaddingLeft = getComputedCssValue(menuContainerRef.value, 'paddingLeft');\n      const menuPaddingRight = getComputedCssValue(menuContainerRef.value, 'paddingRight');\n      let totalWidth = innerRef.value.clientWidth;\n      if (logoRef.value) {\n        const logoMarginLeft = getComputedCssValue(logoRef.value, 'marginLeft');\n        const logoMarginRight = getComputedCssValue(logoRef.value, 'marginRight');\n        totalWidth = totalWidth - logoRef.value.offsetWidth - logoMarginLeft - logoMarginRight;\n      }\n\n      if (operationRef.value) {\n        const operationMarginLeft = getComputedCssValue(operationRef.value, 'marginLeft');\n        const operationMarginRight = getComputedCssValue(operationRef.value, 'marginRight');\n        totalWidth = totalWidth - operationRef.value.offsetWidth - operationMarginLeft - operationMarginRight;\n      }\n\n      return totalWidth - menuPaddingLeft - menuPaddingRight;\n    };\n\n    const formatContent = () => {\n      let slot = ctx.slots.default?.() || ctx.slots.content?.() || [];\n\n      if (menuRef.value && innerRef.value) {\n        const validNodes = Array.from(menuRef.value.childNodes ?? []).filter(\n          (item) => item.nodeName !== '#text' || item.nodeValue,\n        ) as HTMLElement[];\n\n        const menuWidth = calcMenuWidth();\n        const menuItemMinWidth = 104;\n\n        let remainWidth = menuWidth;\n        let sliceIndex = validNodes.length;\n\n        for (let index = 0; index < validNodes.length; index++) {\n          const element = validNodes[index];\n          remainWidth -= element.offsetWidth || 0;\n          if (remainWidth < menuItemMinWidth) {\n            sliceIndex = index;\n            break;\n          }\n        }\n\n        const defaultSlot = slot.slice(0, sliceIndex);\n        const subMore = slot.slice(sliceIndex);\n\n        if (subMore.length) {\n          slot = defaultSlot.concat(\n            <Submenu expandType=\"popup\" title={() => <EllipsisIcon />}>\n              {subMore}\n            </Submenu>,\n          );\n        }\n      }\n      return slot;\n    };\n\n    return () => {\n      const logo = props.logo?.(h) || ctx.slots.logo?.();\n      const operations = props.operations?.(h) || ctx.slots.operations?.() || ctx.slots.options?.();\n      const content = formatContent();\n\n      return (\n        <div class={menuClass.value}>\n          <div class={`${classPrefix.value}-head-menu__inner`} ref={innerRef}>\n            {logo && (\n              <div class={`${classPrefix.value}-menu__logo`} ref={logoRef}>\n                {logo}\n              </div>\n            )}\n            <div class={`${classPrefix.value}-menu__container`} ref={menuContainerRef}>\n              <ul class={`${classPrefix.value}-menu`} ref={menuRef}>\n                {content}\n              </ul>\n            </div>\n            {operations && (\n              <div class={`${classPrefix.value}-menu__operations`} ref={operationRef}>\n                {operations}\n              </div>\n            )}\n          </div>\n          {mode.value === 'normal' && renderNormalSubmenu()}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["_isVNode","defineComponent","name","props","setup","ctx","classPrefix","usePrefixClass","watchEffect","slots","options","log","warnOnce","toRefs","value","modelValue","expanded","useVModel","defaultValue","onChange","activeValue","setActiveValue","useDefaultValue","defaultExpanded","onExpand","expandValues","setExpanded","activeValues","ref","theme","computed","menuClass","mode","expandType","submenu","reactive","vMenu","VMenu","isMutex","provide","isHead","select","open","type","index","indexOf","push","splice","handleTabChange","handleSubmenuExpand","ans","getChild","length","watch","updateActiveValues","onMounted","renderNormalSubmenu","_createVNode","map","item","vnode","children","menuContainerRef","menuRef","innerRef","logoRef","operationRef","getComputedCss","el","cssProperty","getComputedStyle","getComputedCssValue","Number","parseInt","String","calcMenuWidth","menuPaddingLeft","menuPaddingRight","totalWidth","clientWidth","logoMarginLeft","logoMarginRight","offsetWidth","operationMarginLeft","operationMarginRight","formatContent","slot","content","validNodes","Array","from","childNodes","filter","nodeName","nodeValue","menuWidth","menuItemMinWidth","remainWidth","sliceIndex","element","defaultSlot","slice","subMore","concat","Submenu","logo","h","operations"],"mappings":"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"}