import { TdAlertProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    close: {
        type: PropType<string | boolean | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
        default: boolean;
    };
    default: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    icon: {
        type: PropType<(h: typeof import("vue").h) => import("../common").SlotReturnValue>;
    };
    maxLine: {
        type: NumberConstructor;
        default: number;
    };
    message: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    operation: {
        type: PropType<(h: typeof import("vue").h) => import("../common").SlotReturnValue>;
    };
    theme: {
        type: PropType<"error" | "success" | "warning" | "info">;
        default: "error" | "success" | "warning" | "info";
        validator(val: TdAlertProps['theme']): boolean;
    };
    title: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    onClose: PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onClosed: PropType<(context: {
        e: TransitionEvent;
    }) => void>;
};
export default _default;
