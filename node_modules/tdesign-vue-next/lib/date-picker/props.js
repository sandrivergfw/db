/**
 * tdesign v0.24.9
 * (c) 2022 tdesign
 * @license MIT
 */

var datePickerProps = {
  allowInput: Boolean,
  clearable: Boolean,
  disableDate: {
    type: [Object, Array, Function]
  },
  disabled: Boolean,
  enableTimePicker: Boolean,
  firstDayOfWeek: {
    type: Number,
    validator: function validator(val) {
      if (!val) return true;
      return [1, 2, 3, 4, 5, 6, 7].includes(val);
    }
  },
  format: {
    type: String,
    "default": void 0
  },
  inputProps: {
    type: Object
  },
  mode: {
    type: String,
    "default": "date",
    validator: function validator(val) {
      if (!val) return true;
      return ["year", "quarter", "month", "week", "date"].includes(val);
    }
  },
  placeholder: {
    type: [String, Array],
    "default": void 0
  },
  popupProps: {
    type: Object
  },
  prefixIcon: {
    type: Function
  },
  presets: {
    type: Object
  },
  presetsPlacement: {
    type: String,
    "default": "bottom",
    validator: function validator(val) {
      if (!val) return true;
      return ["left", "top", "right", "bottom"].includes(val);
    }
  },
  status: {
    type: String,
    validator: function validator(val) {
      if (!val) return true;
      return ["default", "success", "warning", "error"].includes(val);
    }
  },
  suffixIcon: {
    type: Function
  },
  timePickerProps: {
    type: Object
  },
  tips: {
    type: [String, Function]
  },
  value: {
    type: [String, Number, Array, Date],
    "default": void 0
  },
  modelValue: {
    type: [String, Number, Array, Date],
    "default": void 0
  },
  defaultValue: {
    type: [String, Number, Array, Date],
    "default": ""
  },
  valueType: {
    type: String,
    validator: function validator(val) {
      if (!val) return true;
      return ["time-stamp", "Date", "YYYY", "YYYY-MM", "YYYY-MM-DD", "YYYY-MM-DD HH", "YYYY-MM-DD HH:mm", "YYYY-MM-DD HH:mm:ss", "YYYY-MM-DD HH:mm:ss:SSS"].includes(val);
    }
  },
  onBlur: Function,
  onChange: Function,
  onFocus: Function,
  onPick: Function
};

export { datePickerProps as default };
//# sourceMappingURL=props.js.map
