{"version":3,"file":"range-input-popup.js","sources":["../../src/range-input/range-input-popup.tsx"],"sourcesContent":["import { defineComponent, computed } from 'vue';\nimport Popup from '../popup';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport RangeInput from './range-input';\nimport props from './range-input-popup-props';\nimport useOverlayInnerStyle from '../select-input/useOverlayInnerStyle';\nimport { TdRangeInputPopupProps } from './type';\n\nexport default defineComponent({\n  name: 'TRangeInputPopup',\n  props,\n\n  setup(props: TdRangeInputPopupProps) {\n    const COMPONENT_NAME = usePrefixClass('range-input-popup');\n\n    const { tOverlayInnerStyle, innerPopupVisible, onInnerPopupVisibleChange } = useOverlayInnerStyle(props);\n\n    const popupClasses = computed(() => [\n      COMPONENT_NAME.value,\n      {\n        [`${COMPONENT_NAME.value}--visible`]: props.popupVisible || innerPopupVisible.value,\n      },\n    ]);\n\n    return () => (\n      <div class={popupClasses.value}>\n        <Popup\n          hideEmptyPopup\n          content={props.panel}\n          trigger=\"click\"\n          placement=\"bottom-left\"\n          disabled={props.disabled}\n          visible={props.popupVisible || innerPopupVisible.value}\n          {...{\n            overlayInnerStyle: tOverlayInnerStyle.value,\n            onVisibleChange: onInnerPopupVisibleChange,\n            ...props.popupProps,\n          }}\n        >\n          <RangeInput\n            {...{\n              value: props.inputValue,\n              onChange: props.onInputChange,\n              disabled: props.disabled,\n              status: props.status,\n              tips: props.tips,\n              ...props.rangeInputProps,\n            }}\n          />\n        </Popup>\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","setup","COMPONENT_NAME","usePrefixClass","useOverlayInnerStyle","tOverlayInnerStyle","innerPopupVisible","onInnerPopupVisibleChange","popupClasses","computed","value","popupVisible","_createVNode","_mergeProps","panel","disabled","overlayInnerStyle","onVisibleChange","popupProps","RangeInput","inputValue","onChange","onInputChange","status","tips","rangeInputProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,uBAAeA,eAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,kBAAA;AACNC,EAAAA,KAAA,EAAAA,KAAA;EAEAC,sBAAMD,MAA+B,EAAA;AAC7B,IAAA,IAAAE,cAAA,GAAiBC,eAAe,mBAAmB,CAAA,CAAA;IAEzD,IAA6EC,qBAAAA,GAAAA,qBAAqBJ,MAAK,CAAA;AAA/FK,MAAAA,kBAAoB,yBAApBA,kBAAoB;AAAAC,MAAAA,iBAAA,yBAAAA,iBAAA;AAAmBC,MAAAA,yBAA0B,yBAA1BA,yBAA0B,CAAA;IAEnE,IAAAC,YAAA,GAAeC,SAAS,YAAA;AAAA,MAAA,OAAM,CAClCP,cAAe,CAAAQ,KAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,CAAA,MAAA,CAETR,cAAA,CAAeQ,KAAmBV,EAAAA,WAAAA,CAAAA,EAAAA,MAAAA,CAAMW,gBAAgBL,iBAAkB,CAAAI,KAAA,CAEjF,CAAA,CAAA;KAAA,CAAA,CAAA;IAEM,OAAA,YAAA;AAAA,MAAA,OAAAE,WAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EACOJ,aAAaE,KAAAA;AACvB,OAAA,EAAA,CAAAE,WAAA,CAAA,KAAA,EAAAC,UAAA,CAAA;AAAA,QAAA,gBAAA,EAAA,IAAA;QAAA,SAEWb,EAAAA,MAAAA,CAAMc;mBACP,OAAA;AAAA,QAAA,WAAA,EACE,aAAA;QAAA,UACAd,EAAAA,MAAAA,CAAMe;mBACPf,MAAAA,CAAMW,YAAgB,IAAAL,iBAAA,CAAkBI,KAAAA;AAC7C,OAAA,EAAA,aAAA,CAAA;QACFM,mBAAmBX,kBAAmB,CAAAK,KAAA;AACtCO,QAAAA,eAAiB,EAAAV,yBAAAA;OACdP,EAAAA,MAAM,CAAAkB,UAAA,CAAA,CAAA,EAAA;AAAA,QAAA,SAAA,EAAA,SAAA,QAAA,GAAA;AAAA,UAAA,OAAA,CAAAN,WAAA,CAAAO,WAAA,EAAA,aAAA,CAAA;YAKPT,OAAOV,MAAM,CAAAoB,UAAA;YACbC,UAAUrB,MAAM,CAAAsB,aAAA;YAChBP,UAAUf,MAAM,CAAAe,QAAA;YAChBQ,QAAQvB,MAAM,CAAAuB,MAAA;YACdC,MAAMxB,MAAM,CAAAwB,IAAAA;WACTxB,EAAAA,MAAM,CAAAyB,eAAA,CAAA,EAAA,IAAA,CAAA,CAAA,CAAA;AAAA,SAAA;AAAA,OAAA,CAAA,CAAA,CAAA,CAAA;KArBhB,CAAA;AA2BL,GAAA;AACF,CAAC,CAAA;;;;"}