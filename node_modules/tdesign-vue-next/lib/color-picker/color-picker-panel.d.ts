declare const _default: import("vue").DefineComponent<{
    closeBtn: {
        type: import("vue").PropType<string | boolean | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
        default: boolean;
    };
    colorModes: {
        type: import("vue").PropType<("monochrome" | "linear-gradient")[]>;
        default: string[];
    };
    disabled: BooleanConstructor;
    enableAlpha: BooleanConstructor;
    format: {
        type: import("vue").PropType<"RGB" | "RGBA" | "HSL" | "HSLA" | "HSB" | "HSV" | "HSVA" | "HEX" | "CMYK" | "CSS">;
        default: "RGB" | "RGBA" | "HSL" | "HSLA" | "HSB" | "HSV" | "HSVA" | "HEX" | "CMYK" | "CSS";
        validator(val: "RGB" | "RGBA" | "HSL" | "HSLA" | "HSB" | "HSV" | "HSVA" | "HEX" | "CMYK" | "CSS"): boolean;
    };
    inputProps: {
        type: import("vue").PropType<import("..").TdInputProps>;
    };
    multiple: BooleanConstructor;
    popupProps: {
        type: import("vue").PropType<import("..").TdPopupProps>;
    };
    recentColors: {
        type: import("vue").PropType<boolean | string[]>;
        default: any;
    };
    defaultRecentColors: {
        type: import("vue").PropType<boolean | string[]>;
        default: () => boolean | string[];
    };
    selectInputProps: {
        type: import("vue").PropType<import("..").TdSelectInputProps>;
    };
    swatchColors: {
        type: import("vue").PropType<string[]>;
    };
    value: {
        type: StringConstructor;
        default: any;
    };
    modelValue: {
        type: StringConstructor;
        default: any;
    };
    defaultValue: {
        type: StringConstructor;
        default: string;
    };
    onChange: import("vue").PropType<(value: string, context: {
        color: import("./type").ColorObject;
        trigger: import("./type").ColorPickerChangeTrigger;
    }) => void>;
    onPaletteBarChange: import("vue").PropType<(context: {
        color: import("./type").ColorObject;
    }) => void>;
    onRecentColorsChange: import("vue").PropType<(value: string[]) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    closeBtn: {
        type: import("vue").PropType<string | boolean | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
        default: boolean;
    };
    colorModes: {
        type: import("vue").PropType<("monochrome" | "linear-gradient")[]>;
        default: string[];
    };
    disabled: BooleanConstructor;
    enableAlpha: BooleanConstructor;
    format: {
        type: import("vue").PropType<"RGB" | "RGBA" | "HSL" | "HSLA" | "HSB" | "HSV" | "HSVA" | "HEX" | "CMYK" | "CSS">;
        default: "RGB" | "RGBA" | "HSL" | "HSLA" | "HSB" | "HSV" | "HSVA" | "HEX" | "CMYK" | "CSS";
        validator(val: "RGB" | "RGBA" | "HSL" | "HSLA" | "HSB" | "HSV" | "HSVA" | "HEX" | "CMYK" | "CSS"): boolean;
    };
    inputProps: {
        type: import("vue").PropType<import("..").TdInputProps>;
    };
    multiple: BooleanConstructor;
    popupProps: {
        type: import("vue").PropType<import("..").TdPopupProps>;
    };
    recentColors: {
        type: import("vue").PropType<boolean | string[]>;
        default: any;
    };
    defaultRecentColors: {
        type: import("vue").PropType<boolean | string[]>;
        default: () => boolean | string[];
    };
    selectInputProps: {
        type: import("vue").PropType<import("..").TdSelectInputProps>;
    };
    swatchColors: {
        type: import("vue").PropType<string[]>;
    };
    value: {
        type: StringConstructor;
        default: any;
    };
    modelValue: {
        type: StringConstructor;
        default: any;
    };
    defaultValue: {
        type: StringConstructor;
        default: string;
    };
    onChange: import("vue").PropType<(value: string, context: {
        color: import("./type").ColorObject;
        trigger: import("./type").ColorPickerChangeTrigger;
    }) => void>;
    onPaletteBarChange: import("vue").PropType<(context: {
        color: import("./type").ColorObject;
    }) => void>;
    onRecentColorsChange: import("vue").PropType<(value: string[]) => void>;
}>>, {
    value: string;
    disabled: boolean;
    multiple: boolean;
    format: "RGB" | "RGBA" | "HSL" | "HSLA" | "HSB" | "HSV" | "HSVA" | "HEX" | "CMYK" | "CSS";
    modelValue: string;
    defaultValue: string;
    closeBtn: string | boolean | ((h: typeof import("vue").h) => import("../common").SlotReturnValue);
    colorModes: ("monochrome" | "linear-gradient")[];
    recentColors: boolean | string[];
    defaultRecentColors: boolean | string[];
    enableAlpha: boolean;
}>;
export default _default;
