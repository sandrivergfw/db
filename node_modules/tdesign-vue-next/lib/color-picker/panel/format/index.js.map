{"version":3,"file":"index.js","sources":["../../../../src/color-picker/panel/format/index.tsx"],"sourcesContent":["import { defineComponent, PropType, ref, watch } from 'vue';\nimport upperCase from 'lodash/upperCase';\nimport { TdColorPickerProps } from '../../type';\nimport props from '../../props';\nimport { FORMATS } from '../../const';\nimport { Color } from '../../utils';\nimport { Select as TSelect, Option as TOption } from '../../../select';\nimport FormatInputs from './inputs';\nimport { useBaseClassName } from '../../hooks';\n\nexport default defineComponent({\n  name: 'FormatPanel',\n  inheritAttrs: false,\n  props: {\n    ...props,\n    color: {\n      type: Object as PropType<Color>,\n    },\n    onModeChange: {\n      type: Function,\n      default: () => {\n        return () => {};\n      },\n    },\n    onInputChange: {\n      type: Function,\n      default: () => {\n        return () => {};\n      },\n    },\n  },\n  setup(props) {\n    const baseClassName = useBaseClassName();\n    const formatModel = ref<TdColorPickerProps['format']>(props.format);\n    watch(\n      () => [props.format],\n      () => (formatModel.value = props.format),\n    );\n\n    /**\n     * 格式化类型改变触发\n     * @param v\n     */\n    const handleModeChange = (v: TdColorPickerProps['format']) => {\n      formatModel.value = v;\n      props.onModeChange(v);\n    };\n\n    return {\n      formatModel,\n      baseClassName,\n      handleModeChange,\n    };\n  },\n  render() {\n    const formats: TdColorPickerProps['format'][] = [...FORMATS];\n    const { baseClassName, handleModeChange } = this;\n    const newProps = {\n      ...this.$props,\n      format: this.formatModel,\n    };\n    const selectInputProps = {\n      ...((this.selectInputProps as Object) || {}),\n    };\n    return (\n      <div class={`${baseClassName}__format`}>\n        <div class={`${baseClassName}__format--item`}>\n          <TSelect\n            size=\"small\"\n            class={`${baseClassName}__format-mode-select`}\n            {...selectInputProps}\n            popupProps={{\n              overlayClassName: `${baseClassName}__select-options`,\n            }}\n            v-model={this.formatModel}\n            onChange={handleModeChange}\n          >\n            {formats.map((item) => (\n              <TOption key={item} value={item} label={upperCase(item)} style={{ fontSize: '12px' }} />\n            ))}\n          </TSelect>\n        </div>\n        <div class={`${baseClassName}__format--item`}>\n          <FormatInputs {...newProps} />\n        </div>\n      </div>\n    );\n  },\n});\n"],"names":["_isVNode","defineComponent","name","inheritAttrs","props","color","type","Object","onModeChange","Function","onInputChange","setup","baseClassName","useBaseClassName","formatModel","ref","format","watch","value","handleModeChange","v","render","formats","FORMATS","newProps","$props","selectInputProps","_createVNode","TSelect","_mergeProps","overlayClassName","map","item","TOption","upperCase","fontSize"],"mappings":"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"}