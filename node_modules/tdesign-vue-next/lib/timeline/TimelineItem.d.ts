import { h } from 'vue';
declare const _default: import("vue").DefineComponent<{
    index: {
        type: NumberConstructor;
    };
    content: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue)>;
    };
    dot: {
        type: import("vue").PropType<(h: typeof h) => import("../common").SlotReturnValue>;
    };
    dotColor: {
        type: import("vue").PropType<string>;
        default: string;
    };
    label: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue)>;
    };
    labelAlign: {
        type: import("vue").PropType<"left" | "top" | "bottom" | "right">;
        validator(val: "left" | "top" | "bottom" | "right"): boolean;
    };
    loading: BooleanConstructor;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    index: {
        type: NumberConstructor;
    };
    content: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue)>;
    };
    dot: {
        type: import("vue").PropType<(h: typeof h) => import("../common").SlotReturnValue>;
    };
    dotColor: {
        type: import("vue").PropType<string>;
        default: string;
    };
    label: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue)>;
    };
    labelAlign: {
        type: import("vue").PropType<"left" | "top" | "bottom" | "right">;
        validator(val: "left" | "top" | "bottom" | "right"): boolean;
    };
    loading: BooleanConstructor;
}>>, {
    loading: boolean;
    dotColor: string;
}>;
export default _default;
