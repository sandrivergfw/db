{"version":3,"file":"TimelineItem.js","sources":["../../src/timeline/TimelineItem.tsx"],"sourcesContent":["import { defineComponent, inject, h } from 'vue';\nimport TimeLineItemProps from './time-line-item-props';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useContent, useTNodeJSX } from '../hooks/tnode';\nimport { TimelineInjectKey } from './hooks';\nimport Loading from '../loading';\n\nconst DefaultTheme = ['default', 'primary', 'success', 'warning', 'error'];\n\nexport default defineComponent({\n  name: 'TTimelineItem',\n  props: {\n    ...TimeLineItemProps,\n    index: {\n      type: Number,\n    },\n  },\n\n  setup(props) {\n    const COMPONENT_NAME = usePrefixClass('timeline-item');\n    const TimelineProvider = inject(TimelineInjectKey);\n    const renderContent = useContent();\n    const renderTNodeJSX = useTNodeJSX();\n\n    // 计算节点模式 CSS 类名\n    const getPositionClassName = (index: number) => {\n      const { layout, renderAlign } = TimelineProvider.value;\n      // 横向布局 以及 纵向布局对应为不同的样式名\n      const left = layout === 'horizontal' ? 'top' : 'left';\n      const right = layout === 'horizontal' ? 'bottom' : 'right';\n      // 单独设置则单独生效\n      if (renderAlign === 'alternate') {\n        return props.labelAlign || index % 2 === 0\n          ? `${COMPONENT_NAME.value}-${left}`\n          : `${COMPONENT_NAME.value}-${right}`;\n      }\n      if (renderAlign === 'left' || renderAlign === 'top') {\n        return `${COMPONENT_NAME.value}-${left}`;\n      }\n      if (renderAlign === 'right' || renderAlign === 'bottom') {\n        return `${COMPONENT_NAME.value}-${right}`;\n      }\n      return '';\n    };\n\n    return () => {\n      const { mode, theme, itemsStatus, reverse } = TimelineProvider.value;\n      const { label, loading, dotColor, index } = props;\n\n      let dotElement = renderTNodeJSX('dot');\n      if (dotElement) {\n        dotElement = h(renderTNodeJSX('dot'), {\n          class: `${COMPONENT_NAME.value}__dot-content`,\n        });\n      }\n\n      return (\n        <li class={[`${COMPONENT_NAME.value}`, `${getPositionClassName(props.index)}`]}>\n          {mode === 'alternate' && label && (\n            <div class={[`${COMPONENT_NAME.value}__label`, `${COMPONENT_NAME.value}__label--${mode}`]}>{label}</div>\n          )}\n          <div class={`${COMPONENT_NAME.value}__wrapper`}>\n            <div\n              class={{\n                [`${COMPONENT_NAME.value}__dot`]: true,\n                [`${COMPONENT_NAME.value}__dot--custom`]: !!dotElement || (!dotElement && loading),\n                [`${COMPONENT_NAME.value}__dot--${dotColor}`]: DefaultTheme.includes(dotColor),\n              }}\n              style={{ borderColor: !DefaultTheme.includes(dotColor) && dotColor }}\n            >\n              {!dotElement && loading && <Loading size=\"12px\" class={`${COMPONENT_NAME.value}__dot-content`} />}\n              {dotElement}\n            </div>\n            <div\n              class={{\n                [`${COMPONENT_NAME.value}__tail`]: true,\n                [`${COMPONENT_NAME.value}__tail--theme-${theme}`]: true,\n                [`${COMPONENT_NAME.value}__tail--status-${itemsStatus[index]}`]: reverse,\n              }}\n            />\n          </div>\n          <div class={`${COMPONENT_NAME.value}__content`}>\n            {renderContent('default', 'content')}\n            {mode === 'same' && label && (\n              <div class={[`${COMPONENT_NAME.value}__label`, `${COMPONENT_NAME.value}__label--${mode}`]}>{label}</div>\n            )}\n          </div>\n        </li>\n      );\n    };\n  },\n});\n"],"names":["DefaultTheme","defineComponent","name","props","TimeLineItemProps","index","type","Number","setup","COMPONENT_NAME","usePrefixClass","TimelineProvider","inject","TimelineInjectKey","renderContent","useContent","renderTNodeJSX","useTNodeJSX","getPositionClassName","value","layout","renderAlign","left","right","labelAlign","mode","theme","itemsStatus","reverse","label","loading","dotColor","dotElement","h","_createVNode","includes","borderColor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAMA,eAAe,CAAC,SAAA,EAAW,SAAW,EAAA,SAAA,EAAW,WAAW,OAAO,CAAA,CAAA;AAEzE,oBAAeC,eAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,eAAA;AACNC,EAAAA,KAAO,kCACFC,iBAAA,CAAA,EAAA,EAAA,EAAA;AACHC,IAAAA,KAAO,EAAA;AACLC,MAAAA,IAAM,EAAAC,MAAAA;AACR,KAAA;GACF,CAAA;EAEAC,sBAAML,KAAO,EAAA;AACL,IAAA,IAAAM,cAAA,GAAiBC,eAAe,eAAe,CAAA,CAAA;AAC/C,IAAA,IAAAC,gBAAA,GAAmBC,OAAOC,iBAAiB,CAAA,CAAA;IACjD,IAAMC,gBAAgBC,UAAW,EAAA,CAAA;IACjC,IAAMC,iBAAiBC,WAAY,EAAA,CAAA;AAG7B,IAAA,IAAAC,oBAAA,GAAuB,SAAvBA,oBAAA,CAAwBb,KAAkB,EAAA;MAC9C,IAAgCM,qBAAAA,GAAAA,gBAAiB,CAAAQ,KAAA;AAAzCC,QAAAA,MAAA,yBAAAA,MAAA;AAAQC,QAAAA,WAAY,yBAAZA,WAAY,CAAA;MAEtB,IAAAC,IAAA,GAAOF,MAAW,KAAA,YAAA,GAAe,KAAQ,GAAA,MAAA,CAAA;MACzC,IAAAG,KAAA,GAAQH,MAAW,KAAA,YAAA,GAAe,QAAW,GAAA,OAAA,CAAA;MAEnD,IAAIC,gBAAgB,WAAa,EAAA;QACxB,OAAAlB,KAAA,CAAMqB,UAAc,IAAAnB,KAAA,GAAQ,CAAM,KAAA,CAAA,GAAA,EAAA,CAAA,MAAA,CAClCI,cAAA,CAAeU,KAAS,cAAAG,IAAA,CAAA,GAAA,EAAA,CAAA,MAAA,CACxBb,cAAA,CAAeU,KAAS,EAAAI,GAAAA,CAAAA,CAAAA,MAAAA,CAAAA,KAAA,CAAA,CAAA;AACjC,OAAA;AACI,MAAA,IAAAF,WAAA,KAAgB,MAAU,IAAAA,WAAA,KAAgB,KAAO,EAAA;AAC5C,QAAA,OAAA,EAAA,CAAA,MAAA,CAAGZ,eAAeU,KAAS,EAAA,GAAA,CAAA,CAAA,MAAA,CAAAG,IAAA,CAAA,CAAA;AACpC,OAAA;AACI,MAAA,IAAAD,WAAA,KAAgB,OAAW,IAAAA,WAAA,KAAgB,QAAU,EAAA;AAChD,QAAA,OAAA,EAAA,CAAA,MAAA,CAAGZ,eAAeU,KAAS,EAAA,GAAA,CAAA,CAAA,MAAA,CAAAI,KAAA,CAAA,CAAA;AACpC,OAAA;AACO,MAAA,OAAA,EAAA,CAAA;KACT,CAAA;AAEA,IAAA,OAAO,YAAM;AAAA,MAAA,IAAA,IAAA,EAAA,KAAA,CAAA;MACX,IAA8CZ,sBAAAA,GAAAA,gBAAiB,CAAAQ,KAAA;AAAvDM,QAAAA,IAAM,0BAANA,IAAM;AAAAC,QAAAA,KAAA,0BAAAA,KAAA;AAAOC,QAAAA,WAAa,0BAAbA,WAAa;AAAAC,QAAAA,OAAA,0BAAAA,OAAA,CAAA;AAClC,MAAA,IAAQC,KAAA,GAAoC1B,KAAA,CAApC0B,KAAA;QAAOC,OAAS,GAAoB3B,KAAA,CAA7B2B,OAAS;QAAAC,QAAA,GAAoB5B,KAAA,CAApB4B,QAAA;QAAU1B,QAAUF,KAAA,CAAVE;AAE9B,MAAA,IAAA2B,UAAA,GAAahB,eAAe,KAAK,CAAA,CAAA;AACrC,MAAA,IAAIgB,UAAY,EAAA;AACDA,QAAAA,UAAA,GAAAC,CAAA,CAAEjB,cAAe,CAAA,KAAK,CAAG,EAAA;UACpC,OAAUP,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,cAAe,CAAAU,KAAA,EAAA,eAAA,CAAA;AAC3B,SAAC,CAAA,CAAA;AACH,OAAA;AAGE,MAAA,OAAAe,WAAA,CAAA,IAAA,EAAA;QAAA,OAAW,EAAA,CAAA,EAAA,CAAA,MAAA,CAAIzB,cAAe,CAAAU,KAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAYD,oBAAA,CAAqBf,KAAM,CAAAE,KAAK,CAAG,CAAA,CAAA;AAAA,OAAA,EAAA,CAC1EoB,SAAS,WAAe,IAAAI,KAAA,IAAAK,WAAA,CAAA,KAAA,EAAA;QAAA,OACX,EAAA,CAAA,EAAA,CAAA,MAAA,CAAIzB,cAAe,CAAAU,KAAA,wBAAmBV,cAAe,CAAAU,KAAA,EAAA,WAAA,CAAA,CAAA,MAAA,CAAiBM,IAAM,CAAA,CAAA;AAAA,OAAA,EAAA,CAAII,MAA3F,CAAA,EAAAK,WAAA,CAAA,KAAA,EAAA;QAAA,OAEYzB,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,cAAe,CAAAU,KAAA,EAAA,WAAA,CAAA;AAAA,OAAA,EAAA,CAAAe,WAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,GAAA,IAAA,GAAA,EAAA,EAAA,eAAA,CAAA,IAAA,EAAA,EAAA,CAAA,MAAA,CAGpBzB,cAAA,CAAeU,KAAe,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,EAAA,eAAA,CAAA,IAAA,EAAA,EAAA,CAAA,MAAA,CAC9BV,cAAe,CAAAU,KAAA,EAAA,eAAA,CAAA,EAAuB,CAAC,CAACa,UAAA,IAAe,CAACA,UAAc,IAAAF,OAAA,CAAA,EAAA,eAAA,CAAA,IAAA,EAAA,EAAA,CAAA,MAAA,CACtErB,cAAA,CAAeU,yBAAeY,QAAa,CAAA,EAAA/B,YAAA,CAAamC,SAASJ,QAAQ,CAAA,CAAA,EAAA,IAAA,CAAA;QAAA,OAExE,EAAA;UAAEK,WAAA,EAAa,CAACpC,YAAa,CAAAmC,QAAA,CAASJ,QAAQ,CAAA,IAAKA,QAAAA;AAAS,SAAA;OAElE,EAAA,CAAA,CAACC,UAAc,IAAAF,OAAA,IAAAI,WAAA,CAAA,OAAA,EAAA;AAAA,QAAA,MAAA,EAAyB,MAAO;QAAA,OAAUzB,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,cAAA,CAAeU,KAAsB,EAAA,eAAA,CAAA;AAAA,OAAA,EAAA,IAAA,CAAA,EAC9Fa,UAAA,CAAA,CAAA,EAAAE,WAAA,CAAA,KAAA,EAAA;QAAA,OAIKzB,GAAAA,KAAAA,GAAAA,EAAAA,EAAAA,eAAAA,CAAAA,KAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,cAAA,CAAeU,KAAgB,EAAA,QAAA,CAAA,EAAA,IAAA,CAC/BV,EAAAA,eAAAA,CAAAA,KAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,cAAe,CAAAU,KAAA,EAAsBO,gBAAAA,CAAAA,CAAAA,MAAAA,CAAAA,KAAU,GAAA,IAAA,CAAA,EAAA,eAAA,CAAA,KAAA,EAAA,EAAA,CAAA,MAAA,CAC/CjB,cAAe,CAAAU,KAAA,EAAA,iBAAA,CAAA,CAAA,MAAA,CAAuBQ,YAAYtB,KAAW,CAAA,CAAA,EAAAuB,OAAA,CAAA,EAAA,KAAA,CAAA;AAAA,OAAA,EAAA,IAAA,CAAA,CAAA,CAAA,EAAAM,WAAA,CAAA,KAAA,EAAA;QAAA,OAIxDzB,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,cAAe,CAAAU,KAAA,EAAA,WAAA,CAAA;OAC3BL,EAAAA,CAAAA,aAAA,CAAc,WAAW,SAAS,CAAA,EAClCW,SAAS,MAAU,IAAAI,KAAA,IAAAK,WAAA,CAAA,KAAA,EAAA;QAAA,OACN,EAAA,CAAA,EAAA,CAAA,MAAA,CAAIzB,cAAe,CAAAU,KAAA,wBAAmBV,cAAe,CAAAU,KAAA,EAAA,WAAA,CAAA,CAAA,MAAA,CAAiBM,IAAM,CAAA,CAAA;AAAA,OAAA,EAAA,CAAII,MAA3F,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;KAKX,CAAA;AACF,GAAA;AACF,CAAC,CAAA;;;;"}