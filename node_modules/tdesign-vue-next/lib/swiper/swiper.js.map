{"version":3,"file":"swiper.js","sources":["../../src/swiper/swiper.tsx"],"sourcesContent":["import { defineComponent, ref, computed, watch, isVNode, onMounted, cloneVNode } from 'vue';\nimport { ChevronLeftIcon as TdChevronLeftIcon, ChevronRightIcon as TdChevronRightIcon } from 'tdesign-icons-vue-next';\n\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport { useChildComponentSlots } from '../hooks';\nimport props from './props';\nimport { SwiperNavigation, SwiperChangeSource } from './type';\nimport TSwiperItem from './swiper-item';\n\nconst defaultNavigation: SwiperNavigation = {\n  placement: 'inside',\n  showSlideBtn: 'always',\n  size: 'medium',\n  type: 'bars',\n};\n\nexport default defineComponent({\n  name: 'TSwiper',\n  props: { ...props },\n  setup(props) {\n    const prefix = usePrefixClass();\n    const { ChevronLeftIcon, ChevronRightIcon } = useGlobalIcon({\n      ChevronLeftIcon: TdChevronLeftIcon,\n      ChevronRightIcon: TdChevronRightIcon,\n    });\n    let swiperTimer = 0;\n    let swiperSwitchingTimer = 0;\n    let isBeginToEnd = false;\n    let isEndToBegin = false;\n    const currentIndex = ref(props.current || props.defaultCurrent);\n    const isHovering = ref(false);\n    const isSwitching = ref(false);\n    const showArrow = ref(false);\n    const swiperWrap = ref<HTMLElement>();\n    const getChildComponentByName = useChildComponentSlots();\n\n    const swiperItemLength = ref(0);\n    const navigationConfig = computed(() => {\n      return {\n        ...defaultNavigation,\n        ...(isVNode(props.navigation) ? {} : (props.navigation as object)),\n      };\n    });\n    const isEnd = computed(() => {\n      if (props.type === 'card') {\n        return !props.loop && currentIndex.value + 1 >= swiperItemLength.value;\n      }\n      return !props.loop && currentIndex.value + 2 >= swiperItemLength.value;\n    });\n    const propsToUpdateSetTimer = computed(() => {\n      return [props.autoplay, currentIndex.value, props.duration, props.interval];\n    });\n    const swiperWrapClass = computed(() => {\n      return {\n        [`${prefix.value}-swiper__wrap`]: true,\n        [`${prefix.value}-swiper--inside`]: navigationConfig.value.placement === 'inside',\n        [`${prefix.value}-swiper--outside`]: navigationConfig.value.placement === 'outside',\n        [`${prefix.value}-swiper--vertical`]: props.direction === 'vertical',\n        [`${prefix.value}-swiper--large`]: navigationConfig.value.size === 'large',\n        [`${prefix.value}-swiper--small`]: navigationConfig.value.size === 'small',\n      };\n    });\n    const containerStyle = computed(() => {\n      const offsetHeight = props.height ? `${props.height}px` : `${getWrapAttribute('offsetHeight')}px`;\n      if (props.type === 'card' || props.animation === 'fade') {\n        return {\n          height: offsetHeight,\n        };\n      }\n      if (props.animation === 'slide') {\n        const style: Record<string, number | string> = {\n          transition: isSwitching.value ? `transform ${props.duration / 1000}s ease` : '',\n        };\n        let active = currentIndex.value;\n        if (swiperItemLength.value > 1) {\n          active += 1;\n          if (isBeginToEnd || isEndToBegin) {\n            style.transition = '';\n          }\n        }\n        if (props.direction === 'vertical') {\n          style.height = offsetHeight;\n          style.transform = `translate3d(0, -${active * 100}%, 0px)`;\n        } else {\n          style.transform = `translate3d(-${active * 100}%, 0px, 0px)`;\n        }\n        ['msTransform', 'WebkitTransform'].forEach((key) => {\n          style[key] = style.transform;\n        });\n        return style;\n      }\n      return {};\n    });\n    const swiperItems = () => {\n      const swiperItemList = getChildComponentByName('SwiperItem');\n      swiperItemLength.value = swiperItemList.length;\n      const items = swiperItemList.map((swiperItem: any, index) => {\n        const p = { ...props, ...swiperItem.props };\n        return (\n          <TSwiperItem\n            index={index}\n            currentIndex={currentIndex.value}\n            isSwitching={isSwitching.value}\n            getWrapAttribute={getWrapAttribute}\n            swiperItemLength={swiperItemLength.value}\n            {...p}\n          >\n            {swiperItem.children.default()}\n          </TSwiperItem>\n        );\n      });\n      if (props.animation === 'slide' && items.length > 1) {\n        const first = cloneVNode(items[0], {\n          key: `swiper-item-append-${0}`,\n        });\n        const last = cloneVNode(items[items.length - 1], {\n          key: `swiper-item-prepend-${items.length - 1}`,\n        });\n        items.unshift(last);\n        items.push(first);\n      }\n      return items;\n    };\n\n    const swiperTo = (index: number, context: { source: SwiperChangeSource }) => {\n      let targetIndex = index % swiperItemLength.value;\n      props.onChange?.(targetIndex, context);\n      isSwitching.value = true;\n      if (props.animation === 'slide' && swiperItemLength.value > 1 && props.type !== 'card') {\n        targetIndex = index;\n        isBeginToEnd = false;\n        isEndToBegin = false;\n        if (index >= swiperItemLength.value) {\n          clearTimer();\n          setTimeout(() => {\n            isEndToBegin = true;\n            currentIndex.value = 0;\n          }, props.duration);\n        }\n        if (currentIndex.value === 0) {\n          if ((swiperItemLength.value > 2 && index !== 1) || (swiperItemLength.value === 2 && index === 0)) {\n            targetIndex = -1;\n            clearTimer();\n            setTimeout(() => {\n              isBeginToEnd = true;\n              currentIndex.value = swiperItemLength.value - 1;\n            }, props.duration);\n          }\n        }\n      }\n      currentIndex.value = targetIndex;\n    };\n    const clearTimer = () => {\n      if (swiperTimer) {\n        clearTimeout(swiperTimer);\n        swiperTimer = 0;\n      }\n    };\n    const setTimer = () => {\n      if (props.autoplay && props.interval > 0) {\n        clearTimer();\n        swiperTimer = setTimeout(\n          () => {\n            swiperTo(currentIndex.value + 1, { source: 'autoplay' });\n          },\n          currentIndex.value === 0 ? props.interval - (props.duration + 50) : props.interval, // 当 index 为 0 的时候，表明刚从克隆的最后一项跳转过来，已经经历了duration + 50 的间隔时间，减去即可\n        ) as unknown as number;\n      }\n    };\n\n    const onMouseEnter = () => {\n      isHovering.value = true;\n      if (props.stopOnHover) {\n        clearTimer();\n      }\n      if (navigationConfig.value.showSlideBtn === 'hover') {\n        showArrow.value = true;\n      }\n    };\n    const onMouseLeave = () => {\n      isHovering.value = false;\n      if (!isEnd.value) {\n        setTimer();\n      }\n      if (navigationConfig.value.showSlideBtn === 'hover') {\n        showArrow.value = false;\n      }\n    };\n    const onMouseEnterNavigationItem = (i: number) => {\n      if (props.trigger === 'hover') {\n        swiperTo(i, { source: 'hover' });\n      }\n    };\n    const onClickNavigationItem = (i: number) => {\n      if (props.trigger === 'click') {\n        swiperTo(i, { source: 'click' });\n      }\n    };\n    const goNext = (context: { source: SwiperChangeSource }) => {\n      if (isSwitching.value) return;\n      if (props.type === 'card') {\n        return swiperTo(currentIndex.value + 1 >= swiperItemLength.value ? 0 : currentIndex.value + 1, context);\n      }\n      return swiperTo(currentIndex.value + 1, context);\n    };\n    const goPrevious = (context: { source: SwiperChangeSource }) => {\n      if (isSwitching.value) return;\n      if (currentIndex.value - 1 < 0) {\n        if (props.animation === 'slide' && swiperItemLength.value === 2) {\n          return swiperTo(0, context);\n        }\n        return swiperTo(swiperItemLength.value - 1, context);\n      }\n      return swiperTo(currentIndex.value - 1, context);\n    };\n    const getWrapAttribute = (attr: string) => {\n      return swiperWrap.value?.parentNode?.[attr];\n    };\n    const renderPagination = () => {\n      const fractionIndex = currentIndex.value + 1 > swiperItemLength.value ? 1 : currentIndex.value + 1;\n      return (\n        <div class={`${prefix.value}-swiper__arrow`}>\n          <div class={`${prefix.value}-swiper__arrow-left`} onClick={() => goPrevious({ source: 'click' })}>\n            <ChevronLeftIcon />\n          </div>\n          <div class={`${prefix.value}-swiper__navigation-text-fraction`}>\n            {fractionIndex}/{swiperItemLength.value}\n          </div>\n          <div class={`${prefix.value}-swiper__arrow-right`} onClick={() => goNext({ source: 'click' })}>\n            <ChevronRightIcon />\n          </div>\n        </div>\n      );\n    };\n    const renderArrow = () => {\n      if (!showArrow.value) return null;\n      return (\n        <div class={[`${prefix.value}-swiper__arrow`, `${prefix.value}-swiper__arrow--default`]}>\n          <div class={`${prefix.value}-swiper__arrow-left`} onClick={() => goPrevious({ source: 'click' })}>\n            <ChevronLeftIcon />\n          </div>\n          <div class={`${prefix.value}-swiper__arrow-right`} onClick={() => goNext({ source: 'click' })}>\n            <ChevronRightIcon />\n          </div>\n        </div>\n      );\n    };\n    const renderNavigation = () => {\n      if (isVNode(props.navigation)) return props.navigation;\n      if (navigationConfig.value.type === 'fraction') {\n        return (\n          <div class={[`${prefix.value}-swiper__navigation`, `${prefix.value}-swiper__navigation--fraction`]}>\n            {renderPagination()}\n          </div>\n        );\n      }\n      const swiperItemList = getChildComponentByName('SwiperItem');\n      return (\n        <ul\n          class={[\n            `${prefix.value}-swiper__navigation`,\n            {\n              [`${prefix.value}-swiper__navigation-bars`]: navigationConfig.value.type === 'bars',\n              [`${prefix.value}-swiper__navigation-dots`]: navigationConfig.value.type === 'dots',\n              [`${prefix.value}-swiper__navigation-dots-bar`]: navigationConfig.value.type === 'dots-bar',\n            },\n          ]}\n        >\n          {swiperItemList.map((_, i: number) => (\n            <li\n              key={i}\n              class={[\n                `${prefix.value}-swiper__navigation-item`,\n                {\n                  [`${prefix.value}-is-active`]: i === currentIndex.value,\n                },\n              ]}\n              onMouseenter={() => onMouseEnterNavigationItem(i)}\n              onClick={() => onClickNavigationItem(i)}\n            >\n              <span></span>\n            </li>\n          ))}\n        </ul>\n      );\n    };\n    const renderSwiperItems = () => {\n      return swiperItems();\n    };\n\n    watch(\n      () => propsToUpdateSetTimer.value,\n      () => {\n        setTimer();\n      },\n    );\n    watch(\n      () => isSwitching.value,\n      () => {\n        if (isSwitching.value) {\n          if (swiperSwitchingTimer) clearTimeout(swiperSwitchingTimer);\n          swiperSwitchingTimer = setTimeout(() => {\n            isSwitching.value = false;\n            swiperSwitchingTimer = 0;\n            if (isEnd.value) {\n              clearTimer();\n            }\n          }, props.duration + 50) as unknown as number;\n        }\n      },\n    );\n    watch(\n      () => props.current,\n      () => {\n        swiperTo(props.current, { source: 'autoplay' });\n      },\n    );\n\n    onMounted(() => {\n      setTimer();\n      showArrow.value = navigationConfig.value.showSlideBtn === 'always';\n    });\n\n    return () => (\n      <div class={[`${prefix.value}-swiper`]} onMouseenter={onMouseEnter} onMouseleave={onMouseLeave} ref={swiperWrap}>\n        <div class={swiperWrapClass.value}>\n          <div\n            class={[\n              `${prefix.value}-swiper__content`,\n              {\n                [`${prefix.value}-swiper-fade`]: props.animation === 'fade',\n                [`${prefix.value}-swiper-card`]: props.type === 'card',\n              },\n            ]}\n          >\n            <div class={`${prefix.value}-swiper__container`} style={containerStyle.value}>\n              {renderSwiperItems()}\n            </div>\n          </div>\n          {renderNavigation()}\n          {renderArrow()}\n        </div>\n      </div>\n    );\n  },\n});\n"],"names":["_isVNode","defaultNavigation","placement","showSlideBtn","size","type","defineComponent","name","props","setup","prefix","usePrefixClass","useGlobalIcon","ChevronLeftIcon","TdChevronLeftIcon","ChevronRightIcon","TdChevronRightIcon","swiperTimer","swiperSwitchingTimer","isBeginToEnd","isEndToBegin","currentIndex","ref","current","defaultCurrent","isHovering","isSwitching","showArrow","swiperWrap","getChildComponentByName","useChildComponentSlots","swiperItemLength","navigationConfig","computed","isVNode","navigation","isEnd","loop","value","propsToUpdateSetTimer","autoplay","duration","interval","swiperWrapClass","direction","containerStyle","offsetHeight","height","getWrapAttribute","animation","style","transition","active","transform","forEach","key","swiperItems","swiperItemList","length","items","map","swiperItem","index","p","_createVNode","TSwiperItem","_mergeProps","children","first","cloneVNode","last","unshift","push","swiperTo","context","targetIndex","onChange","clearTimer","setTimeout","clearTimeout","setTimer","source","onMouseEnter","stopOnHover","onMouseLeave","onMouseEnterNavigationItem","i","trigger","onClickNavigationItem","goNext","goPrevious","attr","parentNode","renderPagination","fractionIndex","renderArrow","renderNavigation","_","renderSwiperItems","watch","onMounted"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAQwB,SAAA,OAAA,CAAA,CAAA,EAAA;AAAA,EAAA,OAAA,OAAA,CAAA,KAAA,UAAA,IAAA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,KAAA,iBAAA,IAAA,CAAAA,OAAA,CAAA,CAAA,CAAA,CAAA;AAAA,CAAA;AAExB,IAAMC,iBAAsC,GAAA;AAC1CC,EAAAA,SAAW,EAAA,QAAA;AACXC,EAAAA,YAAc,EAAA,QAAA;AACdC,EAAAA,IAAM,EAAA,QAAA;AACNC,EAAAA,IAAM,EAAA,MAAA;AACR,CAAA,CAAA;AAEA,cAAeC,eAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,SAAA;EACNC,KAAA,EAAA,aAAA,CAAA,EAAA,EAAYA,KAAM,CAAA;EAClBC,sBAAMD,MAAO,EAAA;IACX,IAAME,SAASC,cAAe,EAAA,CAAA;AAC9B,IAAA,IAAA,cAAA,GAA8CC,aAAc,CAAA;AAC1DC,QAAAA,eAAiB,EAAAC,eAAA;AACjBC,QAAAA,gBAAkB,EAAAC,gBAAAA;AACpB,OAAC,CAAA;AAHOH,MAAAA,iBAAA,kBAAAA,eAAA;AAAiBE,MAAAA,kBAAiB,kBAAjBA,gBAAiB,CAAA;IAI1C,IAAIE,WAAc,GAAA,CAAA,CAAA;IAClB,IAAIC,oBAAuB,GAAA,CAAA,CAAA;IAC3B,IAAIC,YAAe,GAAA,KAAA,CAAA;IACnB,IAAIC,YAAe,GAAA,KAAA,CAAA;IACnB,IAAMC,YAAe,GAAAC,GAAA,CAAId,MAAM,CAAAe,OAAA,IAAWf,OAAMgB,cAAc,CAAA,CAAA;AACxD,IAAA,IAAAC,UAAA,GAAaH,IAAI,KAAK,CAAA,CAAA;AACtB,IAAA,IAAAI,WAAA,GAAcJ,IAAI,KAAK,CAAA,CAAA;AACvB,IAAA,IAAAK,SAAA,GAAYL,IAAI,KAAK,CAAA,CAAA;IAC3B,IAAMM,aAAaN,GAAiB,EAAA,CAAA;IACpC,IAAMO,0BAA0BC,sBAAuB,EAAA,CAAA;AAEjD,IAAA,IAAAC,gBAAA,GAAmBT,IAAI,CAAC,CAAA,CAAA;AACxB,IAAA,IAAAU,gBAAA,GAAmBC,SAAS,YAAM;AAC/B,MAAA,OAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EACFhC,iBAAA,CAAA,EACCiC,OAAQ1B,CAAAA,MAAAA,CAAM2B,UAAU,CAAI,GAAA,KAAM3B,MAAM,CAAA2B,UAAA,CAAA,CAAA;AAEhD,KAAC,CAAA,CAAA;AACK,IAAA,IAAAC,KAAA,GAAQH,SAAS,YAAM;AACvBzB,MAAAA,IAAAA,MAAAA,CAAMH,SAAS,MAAQ,EAAA;AACzB,QAAA,OAAO,CAACG,MAAM,CAAA6B,IAAA,IAAQhB,YAAa,CAAAiB,KAAA,GAAQ,KAAKP,gBAAiB,CAAAO,KAAA,CAAA;AACnE,OAAA;AACA,MAAA,OAAO,CAAC9B,MAAM,CAAA6B,IAAA,IAAQhB,YAAa,CAAAiB,KAAA,GAAQ,KAAKP,gBAAiB,CAAAO,KAAA,CAAA;AACnE,KAAC,CAAA,CAAA;AACK,IAAA,IAAAC,qBAAA,GAAwBN,SAAS,YAAM;AACpC,MAAA,OAAA,CAACzB,OAAMgC,QAAU,EAAAnB,YAAA,CAAaiB,OAAO9B,MAAM,CAAAiC,QAAA,EAAUjC,OAAMkC,QAAQ,CAAA,CAAA;AAC5E,KAAC,CAAA,CAAA;AACK,IAAA,IAAAC,eAAA,GAAkBV,SAAS,YAAM;AAAA,MAAA,IAAA,IAAA,CAAA;AAC9B,MAAA,OAAA,IAAA,GAAA,EAAA,EAAA,eAAA,CAAA,IAAA,EAAA,EAAA,CAAA,MAAA,CACDvB,MAAA,CAAO4B,KAAuB,EAAA,eAAA,CAAA,EAAA,IAAA,CAAA,EAAA,eAAA,CAAA,IAAA,EAAA,EAAA,CAAA,MAAA,CAC9B5B,MAAA,CAAO4B,KAAyB,EAAA,iBAAA,CAAA,EAAAN,gBAAA,CAAiBM,MAAMpC,SAAc,KAAA,QAAA,CAAA,EAAA,eAAA,CAAA,IAAA,EAAA,EAAA,CAAA,MAAA,CACrEQ,MAAA,CAAO4B,KAA0B,EAAA,kBAAA,CAAA,EAAAN,gBAAA,CAAiBM,MAAMpC,SAAc,KAAA,SAAA,CACtEQ,EAAAA,eAAAA,CAAAA,IAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,MAAO,CAAA4B,KAAA,EAA2B9B,mBAAAA,CAAAA,EAAAA,OAAMoC,SAAc,KAAA,UAAA,CACtDlC,EAAAA,eAAAA,CAAAA,IAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,MAAA,CAAO4B,KAAwB,EAAAN,gBAAAA,CAAAA,EAAAA,gBAAA,CAAiBM,MAAMlC,IAAS,KAAA,OAAA,CAC/DM,EAAAA,eAAAA,CAAAA,IAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,MAAA,CAAO4B,KAAwB,EAAAN,gBAAAA,CAAAA,EAAAA,gBAAA,CAAiBM,MAAMlC,IAAS,KAAA,OAAA,CAAA,EAAA,IAAA,CAAA;AAEvE,KAAC,CAAA,CAAA;AACK,IAAA,IAAAyC,cAAA,GAAiBZ,SAAS,YAAM;AAC9B,MAAA,IAAAa,YAAA,GAAetC,OAAMuC,MAAS,GAAGvC,EAAAA,CAAAA,MAAAA,CAAAA,OAAMuC,MAAa,EAAGC,IAAAA,CAAAA,GAAAA,EAAAA,CAAAA,MAAAA,CAAAA,iBAAiB,cAAc,CAAA,EAAA,IAAA,CAAA,CAAA;MAC5F,IAAIxC,MAAM,CAAAH,IAAA,KAAS,MAAUG,IAAAA,MAAAA,CAAMyC,cAAc,MAAQ,EAAA;QAChD,OAAA;AACLF,UAAAA,MAAQ,EAAAD,YAAAA;SACV,CAAA;AACF,OAAA;AACItC,MAAAA,IAAAA,MAAAA,CAAMyC,cAAc,OAAS,EAAA;AAC/B,QAAA,IAAMC,KAAyC,GAAA;UAC7CC,YAAYzB,WAAY,CAAAY,KAAA,GAAA,YAAA,CAAA,MAAA,CAAqB9B,MAAAA,CAAMiC,WAAW,GAAe,EAAA,QAAA,CAAA,GAAA,EAAA;SAC/E,CAAA;AACA,QAAA,IAAIW,SAAS/B,YAAa,CAAAiB,KAAA,CAAA;AACtB,QAAA,IAAAP,gBAAA,CAAiBO,QAAQ,CAAG,EAAA;AACpBc,UAAAA,MAAA,IAAA,CAAA,CAAA;UACV,IAAIjC,gBAAgBC,YAAc,EAAA;YAChC8B,KAAA,CAAMC,UAAa,GAAA,EAAA,CAAA;AACrB,WAAA;AACF,SAAA;AACI3C,QAAAA,IAAAA,MAAAA,CAAMoC,cAAc,UAAY,EAAA;UAClCM,KAAA,CAAMH,MAAS,GAAAD,YAAA,CAAA;AACTI,UAAAA,KAAA,CAAAG,SAAA,GAAA,kBAAA,CAAA,MAAA,CAA+BD,MAAS,GAAA,GAAA,EAAA,SAAA,CAAA,CAAA;AAChD,SAAO,MAAA;AACCF,UAAAA,KAAA,CAAAG,SAAA,GAAA,eAAA,CAAA,MAAA,CAA4BD,MAAS,GAAA,GAAA,EAAA,cAAA,CAAA,CAAA;AAC7C,SAAA;QACA,CAAC,aAAe,EAAA,iBAAiB,CAAE,CAAAE,OAAA,CAAQ,UAACC,GAAQ,EAAA;AAClDL,UAAAA,KAAA,CAAMK,OAAOL,KAAM,CAAAG,SAAA,CAAA;AACrB,SAAC,CAAA,CAAA;AACM,QAAA,OAAAH,KAAA,CAAA;AACT,OAAA;AACA,MAAA,OAAO,EAAC,CAAA;AACV,KAAC,CAAA,CAAA;AACD,IAAA,IAAMM,cAAc,SAAdA,cAAoB;AAClB,MAAA,IAAAC,cAAA,GAAiB5B,wBAAwB,YAAY,CAAA,CAAA;AAC3DE,MAAAA,gBAAA,CAAiBO,QAAQmB,cAAe,CAAAC,MAAA,CAAA;MACxC,IAAMC,KAAQ,GAAAF,cAAA,CAAeG,GAAI,CAAA,UAACC,YAAiBC,KAAU,EAAA;AAAA,QAAA,IAAA,KAAA,CAAA;AAC3D,QAAA,IAAMC,IAASvD,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EAAAA,MAAO,GAAGqD,WAAWrD,KAAM,CAAA,CAAA;AAExC,QAAA,OAAAwD,WAAA,CAAAC,WAAA,EAAAC,UAAA,CAAA;AAAA,UAAA,OAAA,EACSJ,KAAA;UAAA,cACOzC,EAAAA,YAAa,CAAAiB,KAAA;UAAA,aACdZ,EAAAA,WAAY,CAAAY,KAAA;AAAA,UAAA,kBAAA,EACPU,gBAClB;AAAA,UAAA,kBAAA,EAAkBjB,iBAAiBO,KAAAA;AAC/B,SAAA,EAAAyB,CAAA,CAEHF,EAAAA,OAAAA,CAAAA,KAAAA,GAAAA,WAAWM,QAAS,WAAA;;;;;AAG3B,OAAC,CAAA,CAAA;MACD,IAAI3D,MAAM,CAAAyC,SAAA,KAAc,OAAW,IAAAU,KAAA,CAAMD,SAAS,CAAG,EAAA;QAC7C,IAAAU,KAAA,GAAQC,UAAW,CAAAV,KAAA,CAAM,CAAI,CAAA,EAAA;AACjCJ,UAAAA,kCAA2B,CAAA,CAAA;AAC7B,SAAC,CAAA,CAAA;AACD,QAAA,IAAMe,IAAO,GAAAD,UAAA,CAAWV,KAAM,CAAAA,KAAA,CAAMD,SAAS,CAAI,CAAA,EAAA;AAC/CH,UAAAA,GAAA,EAA4BI,sBAAAA,CAAAA,MAAAA,CAAAA,KAAA,CAAMD,MAAS,GAAA,CAAA,CAAA;AAC7C,SAAC,CAAA,CAAA;AACDC,QAAAA,KAAA,CAAMY,QAAQD,IAAI,CAAA,CAAA;AAClBX,QAAAA,KAAA,CAAMa,KAAKJ,KAAK,CAAA,CAAA;AAClB,OAAA;AACO,MAAA,OAAAT,KAAA,CAAA;KACT,CAAA;IAEM,IAAAc,QAAA,GAAW,SAAXA,QAAA,CAAYX,KAAA,EAAeY,OAA4C,EAAA;AAAA,MAAA,IAAA,gBAAA,CAAA;AACvE,MAAA,IAAAC,WAAA,GAAcb,QAAQ/B,gBAAiB,CAAAO,KAAA,CAAA;MAC3C9B,CAAAA,gBAAAA,GAAAA,MAAAA,CAAMoE,QAAW,MAAjBpE,IAAAA,IAAAA,gBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,gBAAAA,CAAAA,IAAAA,CAAAA,MAAAA,EAAiBmE,WAAA,EAAaD,OAAO,CAAA,CAAA;MACrChD,WAAA,CAAYY,KAAQ,GAAA,IAAA,CAAA;AAChB9B,MAAAA,IAAAA,MAAAA,CAAMyC,cAAc,OAAW,IAAAlB,gBAAA,CAAiBO,QAAQ,CAAK9B,IAAAA,MAAAA,CAAMH,SAAS,MAAQ,EAAA;AACxEsE,QAAAA,WAAA,GAAAb,KAAA,CAAA;AACC3C,QAAAA,YAAA,GAAA,KAAA,CAAA;AACAC,QAAAA,YAAA,GAAA,KAAA,CAAA;AACX,QAAA,IAAA0C,KAAA,IAAS/B,iBAAiBO,KAAO,EAAA;AACxBuC,UAAAA,UAAA,EAAA,CAAA;AACXC,UAAAA,UAAA,CAAW,YAAM;AACA1D,YAAAA,YAAA,GAAA,IAAA,CAAA;YACfC,YAAA,CAAaiB,KAAQ,GAAA,CAAA,CAAA;AACvB,WAAA,EAAG9B,OAAMiC,QAAQ,CAAA,CAAA;AACnB,SAAA;AACI,QAAA,IAAApB,YAAA,CAAaiB,UAAU,CAAG,EAAA;AACvB,UAAA,IAAAP,gBAAA,CAAiBO,QAAQ,CAAK,IAAAwB,KAAA,KAAU,KAAO/B,gBAAiB,CAAAO,KAAA,KAAU,CAAK,IAAAwB,KAAA,KAAU,CAAI,EAAA;YAClFa,WAAA,GAAA,CAAA,CAAA,CAAA;AACHE,YAAAA,UAAA,EAAA,CAAA;AACXC,YAAAA,UAAA,CAAW,YAAM;AACA3D,cAAAA,YAAA,GAAA,IAAA,CAAA;AACFE,cAAAA,YAAA,CAAAiB,KAAA,GAAQP,iBAAiBO,KAAQ,GAAA,CAAA,CAAA;AAChD,aAAA,EAAG9B,OAAMiC,QAAQ,CAAA,CAAA;AACnB,WAAA;AACF,SAAA;AACF,OAAA;MACApB,YAAA,CAAaiB,KAAQ,GAAAqC,WAAA,CAAA;KACvB,CAAA;AACA,IAAA,IAAME,aAAa,SAAbA,aAAmB;AACvB,MAAA,IAAI5D,WAAa,EAAA;QACf8D,YAAA,CAAa9D,WAAW,CAAA,CAAA;AACVA,QAAAA,WAAA,GAAA,CAAA,CAAA;AAChB,OAAA;KACF,CAAA;AACA,IAAA,IAAM+D,WAAW,SAAXA,WAAiB;MACrB,IAAIxE,MAAM,CAAAgC,QAAA,IAAYhC,MAAM,CAAAkC,QAAA,GAAW,CAAG,EAAA;AAC7BmC,QAAAA,UAAA,EAAA,CAAA;QACG5D,WAAA,GAAA6D,UAAA,CACZ,YAAM;AACJL,UAAAA,QAAA,CAASpD,aAAaiB,KAAQ,GAAA,CAAA,EAAG;AAAE2C,YAAAA,MAAA,EAAQ,UAAA;AAAW,WAAC,CAAA,CAAA;SACzD,EACA5D,YAAA,CAAaiB,UAAU,CAAI9B,GAAAA,MAAAA,CAAMkC,YAAYlC,MAAM,CAAAiC,QAAA,GAAW,MAAMjC,MAAM,CAAAkC,QAAA,CAC5E,CAAA;AACF,OAAA;KACF,CAAA;AAEA,IAAA,IAAMwC,eAAe,SAAfA,eAAqB;MACzBzD,UAAA,CAAWa,KAAQ,GAAA,IAAA,CAAA;MACnB,IAAI9B,OAAM2E,WAAa,EAAA;AACVN,QAAAA,UAAA,EAAA,CAAA;AACb,OAAA;AACI,MAAA,IAAA7C,gBAAA,CAAiBM,KAAM,CAAAnC,YAAA,KAAiB,OAAS,EAAA;QACnDwB,SAAA,CAAUW,KAAQ,GAAA,IAAA,CAAA;AACpB,OAAA;KACF,CAAA;AACA,IAAA,IAAM8C,eAAe,SAAfA,eAAqB;MACzB3D,UAAA,CAAWa,KAAQ,GAAA,KAAA,CAAA;AACf,MAAA,IAAA,CAACF,MAAME,KAAO,EAAA;AACP0C,QAAAA,QAAA,EAAA,CAAA;AACX,OAAA;AACI,MAAA,IAAAhD,gBAAA,CAAiBM,KAAM,CAAAnC,YAAA,KAAiB,OAAS,EAAA;QACnDwB,SAAA,CAAUW,KAAQ,GAAA,KAAA,CAAA;AACpB,OAAA;KACF,CAAA;AACM,IAAA,IAAA+C,0BAAA,GAA6B,SAA7BA,0BAAA,CAA8BC,CAAc,EAAA;AAC5C9E,MAAAA,IAAAA,MAAAA,CAAM+E,YAAY,OAAS,EAAA;QAC7Bd,QAAA,CAASa,CAAG,EAAA;AAAEL,UAAAA,MAAQ,EAAA,OAAA;AAAQ,SAAC,CAAA,CAAA;AACjC,OAAA;KACF,CAAA;AACM,IAAA,IAAAO,qBAAA,GAAwB,SAAxBA,qBAAA,CAAyBF,CAAc,EAAA;AACvC9E,MAAAA,IAAAA,MAAAA,CAAM+E,YAAY,OAAS,EAAA;QAC7Bd,QAAA,CAASa,CAAG,EAAA;AAAEL,UAAAA,MAAQ,EAAA,OAAA;AAAQ,SAAC,CAAA,CAAA;AACjC,OAAA;KACF,CAAA;AACM,IAAA,IAAAQ,MAAA,GAAS,SAATA,MAAA,CAAUf,OAA4C,EAAA;MAC1D,IAAIhD,WAAY,CAAAY,KAAA,EAAO,OAAA;AACnB9B,MAAAA,IAAAA,MAAAA,CAAMH,SAAS,MAAQ,EAAA;QAClB,OAAAoE,QAAA,CAASpD,YAAa,CAAAiB,KAAA,GAAQ,CAAK,IAAAP,gBAAA,CAAiBO,QAAQ,CAAI,GAAAjB,YAAA,CAAaiB,KAAQ,GAAA,CAAA,EAAGoC,OAAO,CAAA,CAAA;AACxG,OAAA;MACA,OAAOD,QAAS,CAAApD,YAAA,CAAaiB,KAAQ,GAAA,CAAA,EAAGoC,OAAO,CAAA,CAAA;KACjD,CAAA;AACM,IAAA,IAAAgB,UAAA,GAAa,SAAbA,UAAA,CAAchB,OAA4C,EAAA;MAC9D,IAAIhD,WAAY,CAAAY,KAAA,EAAO,OAAA;AACnB,MAAA,IAAAjB,YAAA,CAAaiB,KAAQ,GAAA,CAAA,GAAI,CAAG,EAAA;QAC9B,IAAI9B,MAAM,CAAAyC,SAAA,KAAc,OAAW,IAAAlB,gBAAA,CAAiBO,UAAU,CAAG,EAAA;AACxD,UAAA,OAAAmC,QAAA,CAAS,GAAGC,OAAO,CAAA,CAAA;AAC5B,SAAA;QACA,OAAOD,QAAS,CAAA1C,gBAAA,CAAiBO,KAAQ,GAAA,CAAA,EAAGoC,OAAO,CAAA,CAAA;AACrD,OAAA;MACA,OAAOD,QAAS,CAAApD,YAAA,CAAaiB,KAAQ,GAAA,CAAA,EAAGoC,OAAO,CAAA,CAAA;KACjD,CAAA;AACM,IAAA,IAAA1B,gBAAA,GAAmB,SAAnBA,gBAAA,CAAoB2C,IAAiB,EAAA;AAAA,MAAA,IAAA,iBAAA,EAAA,qBAAA,CAAA;MAClC,OAAA/D,CAAAA,iBAAAA,GAAAA,UAAA,CAAWU,oFAAX,kBAAkBsD,UAAa,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA/B,qBAA+BD,CAAAA,IAAA,CAAA,CAAA;KACxC,CAAA;AACA,IAAA,IAAME,mBAAmB,SAAnBA,mBAAyB;AACvB,MAAA,IAAAC,aAAA,GAAgBzE,aAAaiB,KAAQ,GAAA,CAAA,GAAIP,iBAAiBO,KAAQ,GAAA,CAAA,GAAIjB,aAAaiB,KAAQ,GAAA,CAAA,CAAA;AACjG,MAAA,OAAA0B,WAAA,CAAA,KAAA,EAAA;QAAA,OACiBtD,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,MAAO,CAAA4B,KAAA,EAAA,gBAAA,CAAA;AAAA,OAAA,EAAA,CAAA0B,WAAA,CAAA,KAAA,EAAA;QAAA,OACLtD,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,MAAA,CAAO4B;iBAAqC,EAAA,SAAA,OAAA,GAAA;AAAA,UAAA,OAAMoD,UAAW,CAAA;AAAET,YAAAA,QAAQ,OAAA;AAAQ,WAAC;;;eAGhFvE,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,MAAO,CAAA4B,KAAA,EAAA,mCAAA,CAAA;AAAA,OAAA,EAAA,CACnBwD,aAAA,EAAc,GAAA,EAAE/D,gBAAiB,CAAAO,KAAA,CAAA,CAAA,EAAA0B,WAAA,CAAA,KAAA,EAAA;QAAA,OAErBtD,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,MAAA,CAAO4B;iBAAsC,EAAA,SAAA,OAAA,GAAA;AAAA,UAAA,OAAMmD,MAAO,CAAA;AAAER,YAAAA,QAAQ,OAAA;AAAQ,WAAC;;;KAKlG,CAAA;AACA,IAAA,IAAMc,cAAc,SAAdA,cAAoB;AACxB,MAAA,IAAI,CAACpE,SAAU,CAAAW,KAAA,EAAc,OAAA,IAAA,CAAA;AAE3B,MAAA,OAAA0B,WAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EAAY,WAAItD,MAAO,CAAA4B,KAAA,EAA0B5B,gBAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,MAAA,CAAO4B,KAA8B,EAAA,yBAAA,CAAA,CAAA;AAAA,OAAA,EAAA,CAAA0B,WAAA,CAAA,KAAA,EAAA;QAAA,OACrEtD,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,MAAA,CAAO4B;iBAAqC,EAAA,SAAA,OAAA,GAAA;AAAA,UAAA,OAAMoD,UAAW,CAAA;AAAET,YAAAA,QAAQ,OAAA;AAAQ,WAAC;;;eAGhFvE,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,MAAA,CAAO4B;iBAAsC,EAAA,SAAA,OAAA,GAAA;AAAA,UAAA,OAAMmD,MAAO,CAAA;AAAER,YAAAA,QAAQ,OAAA;AAAQ,WAAC;;;KAKlG,CAAA;AACA,IAAA,IAAMe,mBAAmB,SAAnBA,mBAAyB;AAAA,MAAA,IAAA,KAAA,CAAA;MACzB,IAAA9D,OAAA,CAAQ1B,OAAM2B,UAAU,CAAA,EAAG,OAAO3B,MAAM,CAAA2B,UAAA,CAAA;AACxC,MAAA,IAAAH,gBAAA,CAAiBM,KAAM,CAAAjC,IAAA,KAAS,UAAY,EAAA;AAC9C,QAAA,OAAA2D,WAAA,CAAA,KAAA,EAAA;AAAA,UAAA,OAAA,EACc,WAAItD,MAAA,CAAO4B,KAA4B,EAAG5B,qBAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,MAAO,CAAA4B,KAAA,EAAA,+BAAA,CAAA,CAAA;AAC1D,SAAA,EAAA,CAAAuD,gBAAA;AAGP,OAAA;AACM,MAAA,IAAApC,cAAA,GAAiB5B,wBAAwB,YAAY,CAAA,CAAA;AAEzD,MAAA,OAAAmC,WAAA,CAAA,IAAA,EAAA;AAAA,QAAA,OAAA,EACS,WACFtD,MAAO,CAAA4B,KAAA,EAAA,qBAAA,CAAA,GAAA,KAAA,GAAA,EAAA,EAAA,eAAA,CAAA,KAAA,EAAA,EAAA,CAAA,MAAA,CAEJ5B,MAAA,CAAO4B,KAAkC,EAAAN,0BAAAA,CAAAA,EAAAA,gBAAA,CAAiBM,MAAMjC,IAAS,KAAA,MAAA,oCACzEK,MAAA,CAAO4B,KAAkC,EAAA,0BAAA,CAAA,EAAAN,gBAAA,CAAiBM,MAAMjC,IAAS,KAAA,MAAA,CACzEK,EAAAA,eAAAA,CAAAA,KAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,MAAA,CAAO4B,KAAsC,mCAAAN,gBAAA,CAAiBM,MAAMjC,IAAS,KAAA,UAAA,CAAA,EAAA,KAAA,EAAA;AAErF,OAAA,EAAA,CAECoD,cAAe,CAAAG,GAAA,CAAI,UAACqC,CAAA,EAAGX;;iBAEfA,CAAA;AAAA,UAAA,OAAA,EACE,CACF5E,EAAAA,CAAAA,MAAAA,CAAAA,MAAO,CAAA4B,KAAA,6DAEJ5B,MAAO,CAAA4B,KAAA,EAAA,YAAA,CAAA,EAAoBgD,MAAMjE,YAAa,CAAAiB,KAAA;wBAGxC,EAAA,SAAA,YAAA,GAAA;YAAA,OAAM+C,0BAA2B,CAAAC,CAAC;;mBACvC,EAAA,SAAA,OAAA,GAAA;YAAA,OAAME,qBAAsB,CAAAF,CAAC;;;OAIzC;KAGP,CAAA;AACA,IAAA,IAAMY,oBAAoB,SAApBA,oBAA0B;AAC9B,MAAA,OAAO1C,WAAY,EAAA,CAAA;KACrB,CAAA;AAEA2C,IAAAA,KAAA,CACE,YAAA;MAAA,OAAM5D,qBAAsB,CAAAD,KAAA,CAAA;AAAA,KAAA,EAC5B,YAAM;AACK0C,MAAAA,QAAA,EAAA,CAAA;AACX,KAAA,CACF,CAAA;AACAmB,IAAAA,KAAA,CACE,YAAA;MAAA,OAAMzE,WAAY,CAAAY,KAAA,CAAA;AAAA,KAAA,EAClB,YAAM;MACJ,IAAIZ,YAAYY,KAAO,EAAA;AACjB,QAAA,IAAApB,oBAAA,EAAsB6D,YAAA,CAAa7D,oBAAoB,CAAA,CAAA;QAC3DA,oBAAA,GAAuB4D,WAAW,YAAM;UACtCpD,WAAA,CAAYY,KAAQ,GAAA,KAAA,CAAA;AACGpB,UAAAA,oBAAA,GAAA,CAAA,CAAA;UACvB,IAAIkB,MAAME,KAAO,EAAA;AACJuC,YAAAA,UAAA,EAAA,CAAA;AACb,WAAA;AACF,SAAA,EAAGrE,MAAM,CAAAiC,QAAA,GAAW,EAAE,CAAA,CAAA;AACxB,OAAA;AACF,KAAA,CACF,CAAA;AACA0D,IAAAA,KAAA,CACE,YAAA;MAAA,OAAM3F,MAAM,CAAAe,OAAA,CAAA;AAAA,KAAA,EACZ,YAAM;AACJkD,MAAAA,QAAA,CAASjE,MAAM,CAAAe,OAAA,EAAS;AAAE0D,QAAAA,MAAA,EAAQ,UAAA;AAAW,OAAC,CAAA,CAAA;AAChD,KAAA,CACF,CAAA;AAEAmB,IAAAA,SAAA,CAAU,YAAM;AACLpB,MAAAA,QAAA,EAAA,CAAA;MACCrD,SAAA,CAAAW,KAAA,GAAQN,gBAAiB,CAAAM,KAAA,CAAMnC,YAAiB,KAAA,QAAA,CAAA;AAC5D,KAAC,CAAA,CAAA;IAED,OAAO,YAAA;AAAA,MAAA,IAAA,KAAA,CAAA;AAAA,MAAA,OAAA6D,WAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EACO,CAAItD,EAAAA,CAAAA,MAAAA,CAAAA,OAAO4B,KAAc,EAAA,SAAA,CAAA,CAAA;AAAA,QAAA,cAAA,EAAiB4C,YAAA;AAAA,QAAA,cAAA,EAA4BE,YAAc;QAAA,KAAKxD,EAAAA,UAAAA;;iBACvFe,eAAgB,CAAAL,KAAAA;AAAA,OAAA,EAAA,CAAA0B,WAAA,CAAA,KAAA,EAAA;QAAA,OAEjB,EAAA,CAAA,EAAA,CAAA,MAAA,CACFtD,MAAO,CAAA4B,KAAA,qEAEJ5B,MAAO,CAAA4B,KAAA,EAAA,cAAA,CAAA,EAAsB9B,OAAMyC,SAAc,KAAA,MAAA,CACjDvC,EAAAA,eAAAA,CAAAA,KAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,MAAO,CAAA4B,KAAA,mBAAsB9B,OAAMH,IAAS,KAAA,MAAA,CAAA,EAAA,KAAA,EAAA;AAIpD,OAAA,EAAA,CAAA2D,WAAA,CAAA,KAAA,EAAA;QAAA,OAAetD,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,MAAO,CAAA4B,KAAA,EAAA,oBAAA,CAAA;AAAA,QAAA,OAAA,EAAkCO,cAAA,CAAeP,KAAAA;AACpE,OAAA,EAAA,CAAA4D,iBAAA,EACH,CAAA,CAAA,CAAA,CAAA,EAEDF,gBAAiB,EAAA,EACjBD,WAAY,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA;KAhBhB,CAAA;AAoBL,GAAA;AACF,CAAC,CAAA;;;;"}