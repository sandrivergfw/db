/**
 * tdesign v0.24.9
 * (c) 2022 tdesign
 * @license MIT
 */

import _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';
import _slicedToArray from '@babel/runtime/helpers/slicedToArray';
import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, toRefs, ref, computed, watch, nextTick, onMounted, provide, reactive, createVNode, h } from 'vue';
import _regeneratorRuntime from '@babel/runtime/regenerator';
import isString from 'lodash/isString';
import isNumber from 'lodash/isNumber';
import isNil from 'lodash/isNil';
import props from './radio-group-props.js';
import _Radio from './radio.js';
import { RadioGroupInjectionKey } from './constants.js';
import { usePrefixClass, useCommonClassName } from '../hooks/useConfig.js';
import useVModel from '../hooks/useVModel.js';
import { useTNodeDefault } from '../hooks/tnode.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../utils/helper.js';
import '@babel/runtime/helpers/objectWithoutProperties';
import 'lodash/camelCase';
import './props.js';
import '../form/hooks.js';
import '../config-provider/useConfig.js';
import '../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import '../_common/js/global-config/default-config.js';
import '../_common/js/global-config/locale/zh_CN.js';
import 'lodash/kebabCase';
import 'lodash/isFunction';
import '../utils/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isObject';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _Group = defineComponent({
  name: "TRadioGroup",
  props: _objectSpread({}, props),
  setup: function setup(props2) {
    var _toRefs = toRefs(props2),
      value = _toRefs.value,
      modelValue = _toRefs.modelValue;
    var _useVModel = useVModel(value, modelValue, props2.defaultValue, props2.onChange),
      _useVModel2 = _slicedToArray(_useVModel, 2),
      innerValue = _useVModel2[0],
      setInnerValue = _useVModel2[1];
    var radioGroupRef = ref();
    var radioBtnName = usePrefixClass("radio-button");
    var _useCommonClassName = useCommonClassName(),
      STATUS = _useCommonClassName.STATUS,
      SIZE = _useCommonClassName.SIZE;
    var checkedClassName = computed(function () {
      return ".".concat(radioBtnName.value, ".").concat(STATUS.value.checked);
    });
    var barStyle = ref({
      width: "0px",
      left: "0px"
    });
    var calcDefaultBarStyle = function calcDefaultBarStyle() {
      var div = document.createElement("div");
      div.setAttribute("style", "position: absolute; visibility: hidden;");
      div.appendChild(radioGroupRef.value.cloneNode(true));
      document.body.appendChild(div);
      var defaultCheckedRadio = div.querySelector(checkedClassName.value);
      var offsetWidth = defaultCheckedRadio.offsetWidth,
        offsetLeft = defaultCheckedRadio.offsetLeft;
      barStyle.value = {
        width: "".concat(offsetWidth, "px"),
        left: "".concat(offsetLeft, "px")
      };
      document.body.removeChild(div);
    };
    var calcBarStyle = function calcBarStyle() {
      if (props2.variant === "outline") return;
      var checkedRadio = radioGroupRef.value.querySelector(checkedClassName.value);
      if (!checkedRadio) {
        barStyle.value = {
          width: "0px",
          left: "0px"
        };
        return;
      }
      var offsetWidth = checkedRadio.offsetWidth,
        offsetLeft = checkedRadio.offsetLeft;
      if (!offsetWidth) {
        calcDefaultBarStyle();
      } else {
        barStyle.value = {
          width: "".concat(offsetWidth, "px"),
          left: "".concat(offsetLeft, "px")
        };
      }
    };
    watch(innerValue, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return nextTick();
            case 2:
              calcBarStyle();
            case 3:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    })));
    onMounted(function () {
      calcBarStyle();
    });
    var _toRefs2 = toRefs(props2),
      name = _toRefs2.name,
      disabled = _toRefs2.disabled;
    provide(RadioGroupInjectionKey, reactive({
      name: name,
      disabled: disabled,
      value: innerValue,
      setValue: setInnerValue
    }));
    var radioGroupName = usePrefixClass("radio-group");
    var renderSlot = useTNodeDefault();
    var renderBlock = function renderBlock() {
      if (props2.variant.includes("filled") && !isNil(innerValue.value)) return createVNode("div", {
        "style": barStyle.value,
        "class": "".concat(radioGroupName.value, "__bg-block")
      }, null);
    };
    var renderOptions = function renderOptions() {
      var _props2$options;
      return (_props2$options = props2.options) === null || _props2$options === void 0 ? void 0 : _props2$options.map(function (option) {
        var opt = option;
        if (isNumber(option) || isString(option)) {
          opt = {
            value: option,
            label: option.toString()
          };
        }
        return createVNode(_Radio, {
          "key": "radio-group-options-".concat(opt.value, "-").concat(Math.random()),
          "name": props2.name,
          "checked": innerValue.value === opt.value,
          "disabled": "disabled" in opt ? opt.disabled : props2.disabled,
          "value": opt.value
        }, {
          "default": function _default() {
            return [typeof opt.label === "function" ? opt.label(h) : opt.label];
          }
        });
      });
    };
    var groupClass = computed(function () {
      var _ref2;
      return ["".concat(radioGroupName.value), SIZE.value[props2.size], (_ref2 = {}, _defineProperty(_ref2, "".concat(radioGroupName.value, "__outline"), props2.variant === "outline"), _defineProperty(_ref2, "".concat(radioGroupName.value, "--filled"), props2.variant.includes("filled")), _defineProperty(_ref2, "".concat(radioGroupName.value, "--primary-filled"), props2.variant === "primary-filled"), _ref2)];
    });
    return function () {
      return createVNode("div", {
        "ref": radioGroupRef,
        "class": groupClass.value
      }, [renderSlot("default") || renderOptions(), renderBlock()]);
    };
  }
});

export { _Group as default };
//# sourceMappingURL=group.js.map
