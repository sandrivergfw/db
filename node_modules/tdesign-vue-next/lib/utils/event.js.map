{"version":3,"file":"event.js","sources":["../../src/utils/event.ts"],"sourcesContent":["import { ComponentPublicInstance } from 'vue';\nimport { getPropsApiByEvent } from './helper';\n\nexport type EmitEventName = { event: string; method: string } | string;\n\n/**\n * 组件对外传递事件\n * @param vm 组件实例\n * @param eventName 事件名(注意使用中划线)\n * @param args 事件参数\n * @example emitEvent<[SearchEvent]>(this, 'search', {query: ''});\n * @example emitEvent<[TransferValue[], TargetParams]>(this, 'change', newTargetValue, params);\n * @example emitEvent<[SearchEvent[], TargetParams]>(this, { event: 'search', method: 'onChange' }, {query: ''});\n */\nexport function emitEvent<T extends any[]>(vm: ComponentPublicInstance, eventName: string, ...args: T) {\n  let emitEventMethodName: string;\n  if (typeof eventName === 'string') {\n    emitEventMethodName = getPropsApiByEvent(eventName);\n  }\n  if (typeof vm.$props[emitEventMethodName] === 'function') {\n    vm.$props[emitEventMethodName](...args);\n  } else {\n    vm.$emit(eventName, ...args);\n  }\n}\n"],"names":["emitEvent","vm","eventName","emitEventMethodName","getPropsApiByEvent","args","$props","$emit"],"mappings":";;;;;;;;;;;;AAcgB,SAAAA,SAAA,CAA2BC,EAA6B,EAAAC,SAAA,EAA+B;AACjG,EAAA,IAAAC,mBAAA,CAAA;AACA,EAAA,IAAA,OAAOD,cAAc,QAAU,EAAA;AACjCC,IAAAA,mBAAA,GAAsBC,mBAAmBF,SAAS,CAAA,CAAA;AACpD,GAAA;AAAA,EAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAJ4FG,IAAS,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;IAATA,IAAS,CAAA,IAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;AAAA,GAAA;EAKrG,IAAI,OAAOJ,EAAA,CAAGK,MAAO,CAAAH,mBAAA,CAAA,KAAyB,UAAY,EAAA;AAAA,IAAA,IAAA,UAAA,CAAA;IACrD,CAAAF,UAAAA,GAAAA,EAAA,CAAAK,MAAA,EAAOH,mBAAqB,CAAA,CAAA,KAAA,CAAA,UAAA,EAAGE,IAAI,CAAA,CAAA;AACxC,GAAO,MAAA;IACFJ,EAAA,CAAAM,KAAA,CAAAN,KAAAA,CAAAA,EAAA,GAAMC,SAAW,CAAA,CAAA,MAAA,CAAGG,IAAI,CAAA,CAAA,CAAA;AAC7B,GAAA;AACF;;;;"}