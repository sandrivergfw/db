{"version":3,"file":"tab-nav.js","sources":["../../src/tabs/tab-nav.tsx"],"sourcesContent":["import { h, defineComponent, Transition, ref, computed, watch, onMounted } from 'vue';\nimport debounce from 'lodash/debounce';\nimport {\n  ChevronLeftIcon as TdChevronLeftIcon,\n  ChevronRightIcon as TdChevronRightIcon,\n  AddIcon as TdAddIcon,\n} from 'tdesign-icons-vue-next';\nimport { TdTabsProps } from './type';\nimport tabProps from './props';\nimport tabBase from '../_common/js/tabs/base';\n\n// 子组件\nimport TTabPanel from './tab-panel';\nimport TTabNavItem from './tab-nav-item';\nimport TTabNavBar from './tab-nav-bar';\n\n// hooks\nimport { useResize } from '../hooks/useListener';\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport useDragSort from '../hooks/useDragSort';\n\nconst { calculateCanToLeft, calculateCanToRight, calcScrollLeft, scrollToLeft, scrollToRight, moveActiveTabIntoView } =\n  tabBase;\n\nexport default defineComponent({\n  name: 'TTabNav',\n  ...{ resizeObserver: null },\n  props: {\n    theme: tabProps.theme,\n    panels: {\n      type: Array as { new (): Array<InstanceType<typeof TTabPanel>> },\n      default: (): Array<InstanceType<typeof TTabPanel>> => [] as Array<InstanceType<typeof TTabPanel>>,\n    },\n    value: tabProps.value,\n    placement: tabProps.placement,\n    size: tabProps.size,\n    disabled: tabProps.disabled,\n    addable: tabProps.addable,\n    onChange: tabProps.onChange,\n    onAdd: tabProps.onAdd,\n    onRemove: tabProps.onRemove,\n    dragSort: tabProps.dragSort,\n    onDragSort: tabProps.onDragSort,\n  },\n  setup(props) {\n    const COMPONENT_NAME = usePrefixClass('tabs');\n    const { ChevronLeftIcon, ChevronRightIcon, AddIcon } = useGlobalIcon({\n      ChevronLeftIcon: TdChevronLeftIcon,\n      ChevronRightIcon: TdChevronRightIcon,\n      AddIcon: TdAddIcon,\n    });\n    const classPrefix = usePrefixClass();\n    const { SIZE } = useCommonClassName();\n\n    const scrollLeft = ref(0);\n    const canToLeft = ref(false);\n    const canToRight = ref(false);\n\n    // refs\n    // const panels = ref(props.panels);\n    const navsContainerRef = ref();\n    const navsWrapRef = ref();\n    const leftOperationsRef = ref();\n    const toLeftBtnRef = ref();\n    const rightOperationsRef = ref();\n    const toRightBtnRef = ref();\n    const activeTabRef = ref();\n    const getRefs = () => ({\n      navsContainer: navsContainerRef.value,\n      navsWrap: navsWrapRef.value,\n      leftOperations: leftOperationsRef.value,\n      toLeftBtn: toLeftBtnRef.value,\n      rightOperations: rightOperationsRef.value,\n      toRightBtn: toRightBtnRef.value,\n    });\n\n    // style\n    const wrapTransformStyle = computed(() => {\n      if (['left', 'right'].includes(props.placement.toLowerCase())) return {};\n      return {\n        transform: `translate3d(${-scrollLeft.value}px, 0, 0)`,\n      };\n    });\n    const navsContainerStyle = computed(() => {\n      return props.addable ? { 'min-height': '48px' } : null;\n    });\n\n    // class\n    const iconBaseClass = computed(() => {\n      return {\n        [`${COMPONENT_NAME.value}__btn`]: true,\n        [SIZE.value.medium]: props.size === 'medium',\n        [SIZE.value.large]: props.size === 'large',\n      };\n    });\n    const leftIconClass = computed(() => {\n      return {\n        [`${COMPONENT_NAME.value}__btn--left`]: true,\n        ...iconBaseClass.value,\n      };\n    });\n    const rightIconClass = computed(() => {\n      return {\n        [`${COMPONENT_NAME.value}__btn--right`]: true,\n        ...iconBaseClass.value,\n      };\n    });\n    const addIconClass = computed(() => {\n      return {\n        [`${COMPONENT_NAME.value}__add-btn`]: true,\n        ...iconBaseClass.value,\n      };\n    });\n    const navContainerClass = computed(() => {\n      return {\n        [`${COMPONENT_NAME.value}__nav-container`]: true,\n        [`${COMPONENT_NAME.value}__nav--card`]: props.theme === 'card',\n        [`${classPrefix.value}-is-${props.placement}`]: true,\n        [`${classPrefix.value}-is-addable`]: props.addable,\n      };\n    });\n    const navScrollContainerClass = computed(() => {\n      return {\n        [`${COMPONENT_NAME.value}__nav-scroll`]: true,\n        [`${classPrefix.value}-is-scrollable`]: canToLeft.value || canToRight.value,\n      };\n    });\n\n    const navsWrapClass = computed(() => {\n      return [\n        `${COMPONENT_NAME.value}__nav-wrap`,\n        `${classPrefix.value}-is-smooth`,\n        { [`${classPrefix.value}-is-vertical`]: props.placement === 'left' || props.placement === 'right' },\n      ];\n    });\n\n    const totalAdjust = () => {\n      adjustArrowDisplay();\n      adjustScrollLeft();\n    };\n    // watch\n    watch([scrollLeft, () => props.placement, () => props.panels], totalAdjust);\n\n    // life times\n    useResize(debounce(totalAdjust), navsContainerRef.value);\n    onMounted(totalAdjust);\n\n    // methods\n    const adjustScrollLeft = () => {\n      scrollLeft.value = calcScrollLeft(getRefs(), scrollLeft.value);\n    };\n    const adjustArrowDisplay = () => {\n      canToLeft.value = calculateCanToLeft(getRefs(), scrollLeft.value, props.placement);\n      canToRight.value = calculateCanToRight(getRefs(), scrollLeft.value, props.placement);\n    };\n    const handleScroll = (direction: 'left' | 'right') => {\n      if (direction === 'left') {\n        scrollLeft.value = scrollToLeft(getRefs(), scrollLeft.value);\n      } else {\n        scrollLeft.value = scrollToRight(getRefs(), scrollLeft.value);\n      }\n    };\n    const handleAddTab = (e: MouseEvent) => {\n      props.onAdd?.({ e });\n    };\n    const tabClick = (event: MouseEvent, nav: Partial<InstanceType<typeof TTabPanel>>) => {\n      const { value, disabled } = nav;\n      if (disabled || props.value === value) {\n        return false;\n      }\n      props.onChange(value);\n    };\n    const removeBtnClick = ({ e, value, index }: Parameters<TdTabsProps['onRemove']>[0]) => {\n      props.onRemove({ e, value, index });\n    };\n    const setActiveTab = (ref: any) => {\n      if (ref?.value === props.value && activeTabRef.value !== ref.$el) {\n        activeTabRef.value = ref.$el;\n        scrollLeft.value = moveActiveTabIntoView(\n          {\n            activeTab: activeTabRef.value,\n            ...getRefs(),\n          },\n          scrollLeft.value,\n        );\n      }\n    };\n\n    const { setNavsWrap } = useDragSort(props);\n    onMounted(() => {\n      setNavsWrap(navsWrapRef.value);\n    });\n    // renders\n    const navs = computed(() => {\n      return props.panels.map((panel, index) => {\n        let label;\n        if (panel?.children?.label) {\n          label = panel.children.label();\n        } else if (typeof panel.label === 'function') {\n          label = panel.label(h);\n        } else {\n          label = panel.label || `选项卡${index + 1}`;\n        }\n\n        return (\n          <TTabNavItem\n            ref={setActiveTab}\n            draggable={props.dragSort}\n            key={panel.value}\n            index={index}\n            theme={props.theme}\n            size={props.size}\n            placement={props.placement}\n            label={label}\n            active={panel.value === props.value}\n            disabled={props.disabled || panel.disabled}\n            removable={panel.removable}\n            value={panel.value}\n            onClick={(e: MouseEvent) => tabClick(e, panel)}\n            onRemove={removeBtnClick}\n          />\n        );\n      });\n    });\n    const renderArrows = () => {\n      return [\n        <div\n          ref={leftOperationsRef}\n          class={[`${COMPONENT_NAME.value}__operations`, `${COMPONENT_NAME.value}__operations--left`]}\n        >\n          <Transition name=\"fade\" mode=\"out-in\" appear>\n            {canToLeft.value ? (\n              <div ref={toLeftBtnRef} class={leftIconClass.value} onClick={() => handleScroll('left')}>\n                <ChevronLeftIcon />\n              </div>\n            ) : null}\n          </Transition>\n        </div>,\n        <div\n          ref={rightOperationsRef}\n          class={[`${COMPONENT_NAME.value}__operations`, `${COMPONENT_NAME.value}__operations--right`]}\n        >\n          <Transition name=\"fade\" mode=\"out-in\" appear>\n            {canToRight.value ? (\n              <div ref={toRightBtnRef} class={rightIconClass.value} onClick={() => handleScroll('right')}>\n                <ChevronRightIcon></ChevronRightIcon>\n              </div>\n            ) : null}\n          </Transition>\n          {props.addable ? (\n            <div class={addIconClass.value} onClick={handleAddTab}>\n              <AddIcon></AddIcon>\n            </div>\n          ) : null}\n        </div>,\n      ];\n    };\n    const renderNavs = () => {\n      return (\n        <div class={navContainerClass.value}>\n          <div class={navScrollContainerClass.value}>\n            <div ref={navsWrapRef} class={navsWrapClass.value} style={wrapTransformStyle.value}>\n              {props.theme !== 'card' && (\n                <TTabNavBar placement={props.placement} value={props.value} navs={navs.value} />\n              )}\n              {navs.value}\n            </div>\n          </div>\n        </div>\n      );\n    };\n\n    return () => {\n      return (\n        <div ref={navsContainerRef} class={[`${COMPONENT_NAME.value}__nav`]} style={navsContainerStyle.value}>\n          {renderArrows()}\n          {renderNavs()}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["calculateCanToLeft","tabBase","calculateCanToRight","calcScrollLeft","scrollToLeft","scrollToRight","moveActiveTabIntoView","defineComponent","name","resizeObserver","props","theme","tabProps","panels","type","Array","value","placement","size","disabled","addable","onChange","onAdd","onRemove","dragSort","onDragSort","setup","COMPONENT_NAME","usePrefixClass","useGlobalIcon","ChevronLeftIcon","TdChevronLeftIcon","ChevronRightIcon","TdChevronRightIcon","AddIcon","TdAddIcon","classPrefix","useCommonClassName","SIZE","scrollLeft","ref","canToLeft","canToRight","navsContainerRef","navsWrapRef","leftOperationsRef","toLeftBtnRef","rightOperationsRef","toRightBtnRef","activeTabRef","getRefs","navsContainer","navsWrap","leftOperations","toLeftBtn","rightOperations","toRightBtn","wrapTransformStyle","computed","includes","toLowerCase","transform","navsContainerStyle","iconBaseClass","medium","large","leftIconClass","rightIconClass","addIconClass","navContainerClass","navScrollContainerClass","navsWrapClass","totalAdjust","adjustArrowDisplay","adjustScrollLeft","watch","useResize","debounce","onMounted","handleScroll","direction","handleAddTab","e","tabClick","event","nav","removeBtnClick","index","setActiveTab","$el","activeTab","useDragSort","setNavsWrap","navs","map","panel","label","children","h","_createVNode","removable","renderArrows","renderNavs"],"mappings":"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"}