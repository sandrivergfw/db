{"version":3,"file":"hooks.js","sources":["../../src/dialog/hooks.tsx"],"sourcesContent":["import { getCurrentInstance } from 'vue';\nimport isString from 'lodash/isString';\nimport isObject from 'lodash/isObject';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport TButton, { ButtonProps } from '../button';\nimport { PopconfirmConfig, DialogConfig, DrawerConfig } from '../config-provider';\nimport { ClassName, TNode } from '../common';\n\nexport type MixinsFooterButton = string | ButtonProps | TNode;\n\nexport interface MixinsConfirmBtn {\n  theme?: MixinsThemeType;\n  className?: ClassName;\n  confirmBtn: MixinsFooterButton;\n  globalConfirm: PopconfirmConfig['confirm'] | DrawerConfig['confirm'] | DialogConfig['confirm'];\n  globalConfirmBtnTheme?: PopconfirmConfig['confirmBtnTheme'] | DialogConfig['confirmBtnTheme'];\n  size?: ButtonProps['size'];\n}\n\nexport interface MixinsCancelBtn {\n  className?: ClassName;\n  cancelBtn: MixinsFooterButton;\n  globalCancel: PopconfirmConfig['cancel'] | DrawerConfig['cancel'] | DialogConfig['cancel'];\n  size?: ButtonProps['size'];\n}\n\nexport type MixinsThemeType = keyof (PopconfirmConfig['confirmBtnTheme'] & DialogConfig['confirmBtnTheme']);\n\nexport interface BtnAction {\n  confirmBtnAction: (e: MouseEvent) => void;\n  cancelBtnAction: (e: MouseEvent) => void;\n}\n\nexport function useAction(action: BtnAction) {\n  const instance = getCurrentInstance();\n  const renderTNodeJSX = useTNodeJSX();\n  // 全局配置属性综合\n  const getDefaultConfirmBtnProps = (options: MixinsConfirmBtn): ButtonProps => {\n    const { globalConfirm, theme, globalConfirmBtnTheme } = options;\n    const defaultTheme = globalConfirmBtnTheme?.[theme] || 'primary';\n    let props: ButtonProps = {\n      theme: defaultTheme,\n      size: options.size,\n      onClick: (e) => {\n        action.confirmBtnAction(e);\n      },\n    };\n    if (isString(globalConfirm)) {\n      props.content = globalConfirm;\n    } else if (isObject(globalConfirm)) {\n      props = { ...props, ...globalConfirm };\n    }\n    return props;\n  };\n  // 全局配置属性综合\n  const getDefaultCancelBtnProps = (options: MixinsCancelBtn): ButtonProps => {\n    const { globalCancel } = options;\n    let props: ButtonProps = {\n      theme: 'default',\n      size: options.size,\n      onClick: (e) => {\n        action.cancelBtnAction(e);\n      },\n    };\n    if (isString(globalCancel)) {\n      props.content = globalCancel;\n    } else if (isObject(globalCancel)) {\n      props = { ...props, ...globalCancel };\n    }\n    return props;\n  };\n  const getButtonByProps = (button: string | ButtonProps, defaultButton: ButtonProps, className?: ClassName) => {\n    let newOptions = defaultButton;\n    if (isString(button)) {\n      newOptions.content = button;\n    } else if (isObject(button)) {\n      newOptions = { ...newOptions, ...button };\n    }\n    return <TButton class={className} {...newOptions} />;\n  };\n  const getConfirmBtn = (options: MixinsConfirmBtn) => {\n    const { confirmBtn, className } = options;\n    if (confirmBtn === null) return null;\n    if (confirmBtn && instance.slots.confirmBtn) {\n      console.warn('Both $props.confirmBtn and $scopedSlots.confirmBtn exist, $props.confirmBtn is preferred.');\n    }\n    const defaultButtonProps = getDefaultConfirmBtnProps(options);\n    // 属性和插槽都不存在，就返回全局默认配置\n    if (!confirmBtn && !instance.slots.confirmBtn) {\n      return <TButton class={className} {...defaultButtonProps} />;\n    }\n    // 如果属性存在，优先返回属性配置\n    if (confirmBtn && ['string', 'object'].includes(typeof confirmBtn)) {\n      return getButtonByProps(confirmBtn as string | ButtonProps, defaultButtonProps, className);\n    }\n    // 渲染插槽 或 function 类型的 confirmBtn，属性优先级更高\n    return renderTNodeJSX('confirmBtn');\n  };\n  const getCancelBtn = (options: MixinsCancelBtn) => {\n    const { cancelBtn, className } = options;\n    if (cancelBtn === null) return null;\n    if (cancelBtn && instance.slots.cancelBtn) {\n      console.warn('Both $props.cancelBtn and $scopedSlots.cancelBtn exist, $props.cancelBtn is preferred.');\n    }\n    const defaultButtonProps: ButtonProps = getDefaultCancelBtnProps(options);\n    // 属性和插槽都不存在，就返回全局默认配置\n    if (!cancelBtn && !instance.slots.cancelBtn) {\n      return <TButton class={className} {...defaultButtonProps} />;\n    }\n    // 如果属性存在，优先返回属性配置\n    if (cancelBtn && ['string', 'object'].includes(typeof cancelBtn)) {\n      return getButtonByProps(cancelBtn as string | ButtonProps, defaultButtonProps);\n    }\n    // 渲染插槽 或 function 类型的 confirmBtn，属性优先级更高\n    return renderTNodeJSX('cancelBtn');\n  };\n  return { getConfirmBtn, getCancelBtn };\n}\n\nexport function useSameTarget(handleClick?: (e: MouseEvent) => void) {\n  // 判断 click 事件的起点和落点所在元素是否一致\n  let MOUSEDOWN_TARGET = false;\n  let MOUSEUP_TARGET = false;\n\n  const onClick = (e: MouseEvent) => {\n    if (MOUSEDOWN_TARGET && MOUSEUP_TARGET) {\n      handleClick(e);\n    }\n    MOUSEDOWN_TARGET = false;\n    MOUSEUP_TARGET = false;\n  };\n\n  const onMousedown = (e: MouseEvent) => {\n    MOUSEDOWN_TARGET = e.target === e.currentTarget;\n  };\n  const onMouseup = (e: MouseEvent) => {\n    MOUSEUP_TARGET = e.target === e.currentTarget;\n  };\n\n  return { onClick, onMousedown, onMouseup };\n}\n"],"names":["useAction","action","instance","getCurrentInstance","renderTNodeJSX","useTNodeJSX","getDefaultConfirmBtnProps","options","globalConfirm","theme","globalConfirmBtnTheme","defaultTheme","props","size","onClick","e","confirmBtnAction","isString","content","isObject","getDefaultCancelBtnProps","globalCancel","cancelBtnAction","getButtonByProps","button","defaultButton","className","newOptions","_createVNode","TButton","_mergeProps","getConfirmBtn","confirmBtn","slots","console","warn","defaultButtonProps","includes","getCancelBtn","cancelBtn","useSameTarget","handleClick","MOUSEDOWN_TARGET","MOUSEUP_TARGET","onMousedown","target","currentTarget","onMouseup"],"mappings":"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"}