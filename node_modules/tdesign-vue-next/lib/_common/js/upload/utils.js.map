{"version":3,"file":"utils.js","sources":["../../../../src/_common/js/upload/utils.ts"],"sourcesContent":["import { SizeUnit, TdUploadFile } from './types';\nimport log from '../log/log';\n\n/**\n * 各个单位和 KB 的关系\n *\n * [*] 表示方法采用这种方式\n * [x] 表示方法不采用这种方式\n *\n * [x] bit      位              b     0 or 1\n * [*] byte     字节            B     8 bits\n * [x] kilobit  千位            kb    1000 bites\n * [*] kilobyte 千字节(二进制)   KB    1024 bytes\n * [x] kilobyte 千字节(十进制)   KB    1000 bytes\n * [x] Megabite 百万位          Mb    1000 kilobits\n * [*] Megabyte 兆字节(二进制)   KB    1024 kilobytes\n * [*] Megabyte 兆字节(十进制)   KB    1000 kilobytes\n * [x] Gigabit  万亿位          Gb    1000 Megabite\n * [*] Gigabyte 吉字节(二进制)   GB    1024 Megabytes\n * [x] Gigabyte 吉字节(十进制)   GB    1000 Megabytes\n */\nexport const SIZE_MAP = {\n  B: 1,\n  KB: 1024,\n  MB: 1048576, // 1024 * 1024\n  GB: 1073741824, // 1024 * 1024 * 1024\n};\n\nexport function returnFileSize(number: number) {\n  if (number < SIZE_MAP.KB) {\n    return `${number} Bytes`;\n  }\n  if (number >= SIZE_MAP.KB && number < SIZE_MAP.MB) {\n    return `${(number / SIZE_MAP.KB).toFixed(1)} KB`;\n  }\n  if (number >= SIZE_MAP.MB && number < SIZE_MAP.GB) {\n    return `${(number / SIZE_MAP.MB).toFixed(1)} MB`;\n  }\n\n  if (number >= SIZE_MAP.GB) {\n    return `${(number / SIZE_MAP.GB).toFixed(1)} GB`;\n  }\n  return '';\n}\n\nexport function getCurrentDate(needTime = false) {\n  const d = new Date();\n  let month: string | number = d.getMonth() + 1;\n  month = month < 10 ? `0${month}` : month;\n  const date = `${d.getFullYear()}-${month}-${d.getDate()}`;\n  const time = `${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}`;\n  if (needTime) return [date, time].join(' ');\n  return date;\n}\n\n/**\n * 缩略文件名 ABCDEFG => ABC...FG\n * @param inputName 文件名\n * @param leftCount 左边长度\n * @param rightCount 右边长度\n * @returns 缩略后的文件名\n */\nexport function abridgeName(\n  inputName: string,\n  leftCount = 5,\n  rightCount = 7\n): string {\n  const name = inputName;\n  let leftLength = 0;\n  let rightLength = 0;\n  if (!name) return '';\n  for (let i = 0; i < name.length; i++) {\n    const w = name[i];\n    const isCn = escape(w).indexOf('%u') === 0;\n    if (i < leftCount * 2 && leftLength < leftCount) {\n      // eslint-disable-next-line no-unused-expressions\n      isCn ? (leftLength += 1) : (leftLength += 2);\n    } else if (i > i - rightCount && rightLength < rightCount) {\n      // eslint-disable-next-line no-unused-expressions\n      isCn ? (rightLength += 1) : (rightLength += 2);\n    }\n  }\n  return name.replace(\n    new RegExp(`^(.{${leftLength}})(.+)(.{${rightLength}})$`),\n    '$1…$3'\n  );\n}\n\nexport function getFileSizeText(number: number) {\n  if (number < 1024) {\n    return `${number} Bytes`;\n  }\n  if (number >= 1024 && number < 1048576) {\n    return `${(number / 1024).toFixed(1)} KB`;\n  }\n  if (number >= 1048576) {\n    return `${(number / 1048576).toFixed(1)} MB`;\n  }\n  return '';\n}\n\n/**\n * 大小比较\n * @param size 文件大小，单位：B\n * @param unit 计算机计量单位\n */\nexport function isOverSizeLimit(\n  fileSize: number,\n  sizeLimit: number,\n  unit: SizeUnit\n) {\n  const units = ['B', 'KB', 'MB', 'GB'];\n  const KBIndex = 1;\n  let index = units.indexOf(unit);\n  if (index === -1) {\n    log.warn('Upload', `\\`sizeLimit.unit\\` can only be one of ${units.join()}`);\n    index = KBIndex;\n  }\n  const num = SIZE_MAP[unit];\n  return fileSize > sizeLimit * num;\n}\n\n// vue2临时使用的 sizeLimit 计算\nexport function isOverSizeLimit1(\n  fileSize: number,\n  sizeLimit: number,\n  unit: SizeUnit\n) {\n  // 以 KB 为单位进行比较\n  const units = ['B', 'KB', 'MB', 'GB'];\n  // 各个单位和 KB 的关系\n\n  const KBIndex = 1;\n  let index = units.indexOf(unit);\n  if (index === -1) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `TDesign Upload Warn: \\`sizeLimit.unit\\` can only be one of ${units.join()}`\n    );\n    index = KBIndex;\n  }\n  const num = SIZE_MAP[unit];\n  const limit = index < KBIndex ? sizeLimit / num : sizeLimit * num;\n  return fileSize <= limit;\n}\n\nexport const urlCreator = () => window.webkitURL || window.URL;\n\n/**\n *\n * @param files 待处理文件\n * @param format 格式化规则\n */\nexport function formatFiles(\n  files: File[] = [],\n  format?: (file: File) => TdUploadFile\n) {\n  return files.map((fileRaw) => {\n    const file = typeof format === 'function' ? format(fileRaw) : fileRaw;\n    const uploadFile: TdUploadFile = {\n      raw: fileRaw,\n      lastModified: fileRaw.lastModified,\n      name: fileRaw.name,\n      size: fileRaw.size,\n      type: fileRaw.type,\n      percent: 0,\n      status: 'waiting',\n      ...file,\n    };\n    uploadFile.url = urlCreator()?.createObjectURL(fileRaw);\n    return uploadFile;\n  });\n}\n\nexport function getFileUrlByFileRaw(fileRaw: File): Promise<string> {\n  return new Promise((resolve) => {\n    if (!fileRaw) {\n      resolve('');\n      return;\n    }\n    const reader = new FileReader();\n    reader.readAsDataURL(fileRaw);\n    reader.onload = (event: ProgressEvent<FileReader>) => {\n      resolve(event.target?.result as string);\n    };\n  });\n}\n"],"names":["SIZE_MAP","B","KB","MB","GB","returnFileSize","number","toFixed","getCurrentDate","needTime","d","Date","month","getMonth","date","getFullYear","getDate","time","getHours","getMinutes","getSeconds","join","abridgeName","inputName","leftCount","rightCount","name","leftLength","rightLength","i","length","w","isCn","escape","indexOf","replace","RegExp","getFileSizeText","isOverSizeLimit","fileSize","sizeLimit","unit","units","KBIndex","index","log","warn","num","isOverSizeLimit1","console","limit","urlCreator","window","webkitURL","URL","formatFiles","files","format","map","fileRaw","file","uploadFile","raw","lastModified","size","type","percent","status","url","createObjectURL","getFileUrlByFileRaw","Promise","resolve","reader","FileReader","readAsDataURL","onload","event","target","result"],"mappings":"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"}