{"version":3,"file":"helper.js","sources":["../../../../src/_common/js/utils/helper.ts"],"sourcesContent":["export function omit(obj: object, fields: string[]): object {\n  const shallowCopy = {\n    ...obj,\n  };\n  for (let i = 0; i < fields.length; i++) {\n    const key = fields[i];\n    delete shallowCopy[key];\n  }\n  return shallowCopy;\n}\n\nexport function removeEmptyAttrs<T>(obj: T): Partial<T> {\n  const newObj = {};\n\n  Object.keys(obj).forEach((key) => {\n    if (typeof obj[key] !== 'undefined' || obj[key] === null) {\n      newObj[key] = obj[key];\n    }\n  });\n\n  return newObj;\n}\n\nexport function getTabElementByValue(tabs: [] = [], value: string): object {\n  const [result] = tabs.filter((item) => {\n    const { id } = item as any;\n    return id === value;\n  });\n  return result || null;\n}\n\nexport function firstUpperCase(str: string): string {\n  return str.toLowerCase().replace(/( |^)[a-z]/g, (char: string) => char.toUpperCase());\n}\n\nexport type Gradients = { [percent: string]: string };\nexport type FromTo = { from: string; to: string };\nexport type LinearGradient = { direction?: string } & (Gradients | FromTo);\nexport function getBackgroundColor(color: string | string[] | LinearGradient): string {\n  if (typeof color === 'string') {\n    return color;\n  }\n  if (Array.isArray(color)) {\n    if (color[0] && color[0][0] === '#') {\n      color.unshift('90deg');\n    }\n    return `linear-gradient( ${color.join(',')} )`;\n  }\n  const {\n    from, to, direction = 'to right', ...rest\n  } = color;\n  let keys = Object.keys(rest);\n  if (keys.length) {\n    keys = keys.sort((a, b) => {\n      const c = parseFloat(a.substr(0, a.length - 1)) - parseFloat(b.substr(0, b.length - 1));\n      return c;\n    });\n    const tempArr = keys.map((key: any) => `${rest[key]} ${key}`);\n    return `linear-gradient(${direction}, ${tempArr.join(',')})`;\n  }\n  return `linear-gradient(${direction}, ${from}, ${to})`;\n}\n\n/**\n *\n * @returns Ëé∑Âèñ ie ÊµèËßàÂô®ÁâàÊú¨\n */\nexport function getIEVersion() {\n  const { userAgent } = navigator;\n  // Âà§Êñ≠ÊòØÂê¶IE<11ÊµèËßàÂô®\n  const isIE = userAgent.indexOf('compatible') > -1 && userAgent.indexOf('MSIE') > -1;\n  // Âà§Êñ≠ÊòØÂê¶IE11ÊµèËßàÂô®\n  const isIE11 = userAgent.indexOf('Trident') > -1 && userAgent.indexOf('rv:11.0') > -1;\n  if (isIE) {\n    const reIE = new RegExp('MSIE (\\\\d+\\\\.\\\\d+);');\n    const match = userAgent.match(reIE);\n    if (!match) return -1;\n    const fIEVersion = parseFloat(match[1]);\n    return fIEVersion < 7 ? 6 : fIEVersion;\n  }\n  if (isIE11) {\n    // IE11\n    return 11;\n  }\n  // ‰∏çÊòØieÊµèËßàÂô®\n  return Number.MAX_SAFE_INTEGER;\n}\n\n/**\n * ËÆ°ÁÆóÂ≠óÁ¨¶‰∏≤Â≠óÁ¨¶ÁöÑÈïøÂ∫¶Âπ∂ÂèØ‰ª•Êà™ÂèñÂ≠óÁ¨¶‰∏≤„ÄÇ\n * @param str ‰º†ÂÖ•Â≠óÁ¨¶‰∏≤\n * @param maxCharacter ËßÑÂÆöÊúÄÂ§ßÂ≠óÁ¨¶‰∏≤ÈïøÂ∫¶\n * @returns ÂΩìÊ≤°Êúâ‰º†ÂÖ•maxCharacterÊó∂ËøîÂõûÂ≠óÁ¨¶‰∏≤Â≠óÁ¨¶ÈïøÂ∫¶ÔºåÂΩì‰º†ÂÖ•maxCharacterÊó∂ËøîÂõûÊà™Âèñ‰πãÂêéÁöÑÂ≠óÁ¨¶‰∏≤ÂíåÈïøÂ∫¶„ÄÇ\n */\nexport function getCharacterLength(str: string, maxCharacter?: number) {\n  const hasMaxCharacter = typeof maxCharacter === 'number';\n  if (!str || str.length === 0) {\n    if (hasMaxCharacter) {\n      return {\n        length: 0,\n        characters: str,\n      };\n    }\n    return 0;\n  }\n  let len = 0;\n  for (let i = 0; i < str.length; i++) {\n    let currentStringLength = 0;\n    if (str.charCodeAt(i) > 127 || str.charCodeAt(i) === 94) {\n      currentStringLength = 2;\n    } else {\n      currentStringLength = 1;\n    }\n    if (hasMaxCharacter && len + currentStringLength > maxCharacter) {\n      return {\n        length: len,\n        characters: str.slice(0, i),\n      };\n    }\n    len += currentStringLength;\n  }\n  if (hasMaxCharacter) {\n    return {\n      length: len,\n      characters: str,\n    };\n  }\n  return len;\n}\n\n/**\n * ËøîÂõû Unicode Â≠óÁ¨¶ÈïøÂ∫¶\n * 'üë®'.length === 2\n * getUnicodeLength('üë®') === 1\n * @param str\n * @returns {number}\n */\nexport function getUnicodeLength(str?: string): number {\n  return [...(str ?? '')].length;\n}\n\n/**\n * ‰øÆÊ≠£ Unicode ÊúÄÂ§ßÂ≠óÁ¨¶ÈïøÂ∫¶\n * 'üë®üë®üë®'.slice(0, 2) === 'üë®'\n * limitUnicodeMaxLength('üë®üë®üë®', 2) === 'üë®üë®'\n * @param str\n * @param maxLength\n * @param oldStr\n * @returns {string}\n */\nexport function limitUnicodeMaxLength(\n  str?: string,\n  maxLength?: number,\n  oldStr?: string\n): string {\n  // ÊóßÂ≠óÁ¨¶Êª°Ë∂≥Â≠óÊï∞Ë¶ÅÊ±ÇÂàôËøîÂõû\n  if ([...(oldStr ?? '')].slice().length === maxLength) return oldStr || '';\n  return [...(str ?? '')].slice(0, maxLength).join('');\n}\n\n/**\n * ÂÖºÂÆπÊ†∑Âºè‰∏≠ÊîØÊåÅnumber/stringÁ±ªÂûãÁöÑ‰º†ÂÄº ÂæóÂá∫ÊúÄÂêéÁöÑÁªìÊûú„ÄÇ\n * @param param numberÊàñstringÁ±ªÂûãÁöÑÂèØÁî®‰∫éÊ†∑Âºè‰∏äÁöÑÂÄº\n * @returns ÂèØ‰ΩøÁî®ÁöÑÊ†∑ÂºèÂÄº„ÄÇ\n */\nexport function pxCompat(param: string | number) {\n  return typeof param === 'number' ? `${param}px` : param;\n}\n\n/**\n * ËÆ°ÁÆódomÂÖÉÁ¥†ÁõíÊ®°ÂûãÂ∞∫ÂØ∏\n * @param targetElement ÈúÄË¶ÅËÆ°ÁÆóÁõíÊ®°ÂûãÂ∞∫ÂØ∏ÁöÑÂÖÉÁ¥†\n * @returns ËÆ°ÁÆóÂá∫ÂêÑÁª¥Â∫¶Â∞∫ÂØ∏„ÄÇ\n */\nconst DOM_STYLE_PROPS = [\n  'padding-top',\n  'padding-bottom',\n  'padding-left',\n  'padding-right',\n  'font-family',\n  'font-weight',\n  'font-size',\n  'font-variant',\n  'text-rendering',\n  'text-transform',\n  'width',\n  'text-indent',\n  'border-width',\n  'box-sizing',\n  'line-height',\n  'letter-spacing',\n];\n\nexport function calculateNodeSize(targetElement: HTMLElement) {\n  const style = window.getComputedStyle(targetElement);\n\n  const boxSizing = style.getPropertyValue('box-sizing')\n    || style.getPropertyValue('-moz-box-sizing')\n    || style.getPropertyValue('-webkit-box-sizing');\n\n  const paddingSize = (\n    parseFloat(style.getPropertyValue('padding-bottom'))\n    + parseFloat(style.getPropertyValue('padding-top'))\n  );\n\n  const borderSize = (\n    parseFloat(style.getPropertyValue('border-bottom-width'))\n    + parseFloat(style.getPropertyValue('border-top-width'))\n  );\n\n  const sizingStyle = DOM_STYLE_PROPS\n    .map((name) => `${name}:${style.getPropertyValue(name)}`)\n    .join(';');\n\n  return {\n    paddingSize, borderSize, boxSizing, sizingStyle,\n  };\n}\n"],"names":["omit","obj","fields","shallowCopy","i","length","key","removeEmptyAttrs","newObj","Object","keys","forEach","getTabElementByValue","tabs","value","filter","item","id","result","firstUpperCase","str","toLowerCase","replace","char","toUpperCase","getBackgroundColor","color","Array","isArray","unshift","join","from","to","direction","rest","sort","a","b","c","parseFloat","substr","tempArr","map","getIEVersion","navigator","userAgent","isIE","indexOf","isIE11","reIE","RegExp","match","fIEVersion","Number","MAX_SAFE_INTEGER","getCharacterLength","maxCharacter","hasMaxCharacter","characters","len","currentStringLength","charCodeAt","slice","getUnicodeLength","limitUnicodeMaxLength","maxLength","oldStr","pxCompat","param","DOM_STYLE_PROPS","calculateNodeSize","targetElement","style","window","getComputedStyle","boxSizing","getPropertyValue","paddingSize","borderSize","sizingStyle","name"],"mappings":"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"}