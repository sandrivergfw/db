{"version":3,"file":"group.js","sources":["../../src/avatar/group.tsx"],"sourcesContent":["import { defineComponent, provide, RendererNode } from 'vue';\nimport props from './avatar-group-props';\nimport Avatar from './avatar';\nimport { useContent, useTNodeJSX } from '../hooks/tnode';\nimport { usePrefixClass } from '../hooks/useConfig';\n\nexport default defineComponent({\n  name: 'TAvatarGroup',\n  props,\n\n  setup(props) {\n    provide('avatarGroup', props);\n    const renderContent = useContent();\n    const renderTNodeJSX = useTNodeJSX();\n\n    const AVATAR_NAME = usePrefixClass('avatar');\n    const COMPONENT_NAME = usePrefixClass('avatar-group');\n\n    const isIcon = () => {\n      const content = renderTNodeJSX('collapseAvatar');\n      return content;\n    };\n\n    const renderIcon = () => {\n      return isIcon() && typeof props.collapseAvatar !== 'string' ? props.collapseAvatar : null;\n    };\n\n    const renderEllipsisAvatar = (children: Array<RendererNode>): Array<RendererNode> => {\n      if (children?.length > props.max) {\n        const content = setEllipsisContent(children);\n        const outAvatar = children.slice(0, props.max);\n        outAvatar.push(\n          <Avatar size={props.size} icon={renderIcon()}>\n            {content}\n          </Avatar>,\n        );\n        return [outAvatar];\n      }\n      return [children];\n    };\n\n    const setEllipsisContent = (children: Array<RendererNode>) => {\n      let content = '';\n      if (props.collapseAvatar) {\n        if (!isIcon()) {\n          content = renderContent('collapseAvatar', 'content');\n        } else {\n          content = isIcon();\n        }\n      } else {\n        content = `+${children.length - props.max}`;\n      }\n      return content;\n    };\n\n    return () => {\n      const children = renderTNodeJSX('default');\n      const { cascading, max } = props;\n      const groupClass = [\n        `${COMPONENT_NAME.value}`,\n        {\n          [`${AVATAR_NAME.value}--offset-right`]: cascading === 'right-up',\n          [`${AVATAR_NAME.value}--offset-left`]: cascading === 'left-up',\n        },\n      ];\n      let content = [children];\n\n      if (max && max >= 0) {\n        content = [renderEllipsisAvatar(children)];\n      }\n      return <div class={groupClass}>{content}</div>;\n    };\n  },\n});\n"],"names":["_isVNode","defineComponent","name","props","setup","provide","renderContent","useContent","renderTNodeJSX","useTNodeJSX","AVATAR_NAME","usePrefixClass","COMPONENT_NAME","isIcon","content","renderIcon","collapseAvatar","renderEllipsisAvatar","children","length","max","setEllipsisContent","outAvatar","slice","push","_createVNode","Avatar","size","cascading","groupClass","value"],"mappings":"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"}