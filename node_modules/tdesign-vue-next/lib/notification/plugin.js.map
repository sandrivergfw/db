{"version":3,"file":"plugin.js","sources":["../../src/notification/plugin.ts"],"sourcesContent":["import { App, Plugin, createApp, nextTick, ComponentPublicInstance } from 'vue';\nimport NotificationList from './notificationList';\nimport { getAttach } from '../utils/dom';\nimport {\n  NotificationOptions,\n  NotificationInstance,\n  NotificationMethod,\n  NotificationInfoMethod,\n  NotificationWarningMethod,\n  NotificationErrorMethod,\n  NotificationSuccessMethod,\n  NotificationCloseMethod,\n  NotificationCloseAllMethod,\n} from './type';\nimport { AttachNodeReturnValue } from '../common';\n\nlet seed = 0;\n// 存储不同 attach 和 不同 placement 消息列表实例\nconst instanceMap: Map<AttachNodeReturnValue, Record<string, ComponentPublicInstance>> = new Map();\n\nconst NotificationFunction = (options: NotificationOptions): Promise<NotificationInstance> => {\n  seed += 1;\n  const hackOptions = {\n    placement: 'top-right',\n    zIndex: 6000,\n    attach: 'body',\n    id: seed,\n    ...options,\n  };\n  hackOptions.content = options.content ? options.content : '';\n\n  const attachEl = getAttach(hackOptions.attach);\n\n  if (!instanceMap.get(attachEl)) {\n    instanceMap.set(attachEl, {});\n  }\n  let tmpInstance = instanceMap.get(attachEl)[hackOptions.placement];\n  if (!tmpInstance) {\n    const wrapper = document.createElement('div');\n\n    const instance = createApp(NotificationList, {\n      placement: hackOptions.placement,\n    }).mount(wrapper);\n\n    instance.add(hackOptions);\n    instanceMap.get(attachEl)[hackOptions.placement] = instance;\n    tmpInstance = instance;\n    attachEl.appendChild(instance.$el);\n  } else {\n    tmpInstance.add(hackOptions);\n  }\n\n  return new Promise((resolve) => {\n    const ins = instanceMap.get(attachEl)[hackOptions.placement];\n    nextTick(() => {\n      const { notificationList } = ins;\n      resolve(notificationList[notificationList.length - 1]);\n    });\n  });\n};\n\nconst showThemeNotification: NotificationMethod = (theme, options) => {\n  const hackOptions = { ...options, theme };\n  return NotificationFunction(hackOptions);\n};\n\ninterface ExtraApi {\n  info: NotificationInfoMethod;\n  success: NotificationSuccessMethod;\n  warning: NotificationWarningMethod;\n  error: NotificationErrorMethod;\n  close: NotificationCloseMethod;\n  closeAll: NotificationCloseAllMethod;\n}\n\nconst extraApi: ExtraApi = {\n  info: (options) => showThemeNotification('info', options),\n  success: (options) => showThemeNotification('success', options),\n  warning: (options) => showThemeNotification('warning', options),\n  error: (options) => showThemeNotification('error', options),\n  close: (promise) => {\n    promise.then((instance) => instance.close());\n  },\n  closeAll: () => {\n    instanceMap.forEach((attach) => {\n      Object.keys(attach).forEach((placement) => {\n        attach[placement].removeAll();\n      });\n    });\n  },\n};\nexport type NotificationPluginType = Plugin & ExtraApi & NotificationMethod;\n\nconst NotificationPlugin: NotificationPluginType = showThemeNotification as NotificationPluginType;\n\nNotificationPlugin.install = (app: App) => {\n  app.config.globalProperties.$notify = showThemeNotification;\n  Object.keys(extraApi).forEach((funcName) => {\n    app.config.globalProperties.$notify[funcName] = extraApi[funcName];\n  });\n};\n\nObject.keys(extraApi).forEach((funcName) => {\n  NotificationPlugin[funcName] = extraApi[funcName];\n});\n\nexport default NotificationPlugin;\n"],"names":["seed","instanceMap","Map","NotificationFunction","options","hackOptions","placement","zIndex","attach","id","content","attachEl","getAttach","get","set","tmpInstance","wrapper","document","createElement","instance","createApp","NotificationList","mount","add","appendChild","$el","Promise","resolve","ins","nextTick","notificationList","length","showThemeNotification","theme","extraApi","info","success","warning","error","close","promise","then","closeAll","forEach","Object","keys","removeAll","NotificationPlugin","install","app","config","globalProperties","$notify","funcName"],"mappings":"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"}