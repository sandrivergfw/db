/**
 * tdesign v0.24.9
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var vue = require('vue');
var omit = require('lodash/omit');
var _common_js_utils_observe = require('../_common/js/utils/observe.js');
var configProvider_useConfig = require('../config-provider/useConfig.js');
var hooks_tnode = require('../hooks/tnode.js');
var image_props = require('./props.js');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/default-config.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('lodash/isFunction');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isObject');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var omit__default = /*#__PURE__*/_interopDefaultLegacy(omit);

var _Image = vue.defineComponent({
  name: "TImage",
  props: image_props["default"],
  setup: function setup(props2) {
    var imageRef = vue.ref(null);
    var io = null;
    vue.onMounted(function () {
      if (!props2.lazy || !imageRef.value) return;
      var ioObserver = _common_js_utils_observe["default"](imageRef.value, null, handleLoadImage, 0);
      io = ioObserver;
    });
    vue.onUnmounted(function () {
      imageRef.value && io && io.unobserve(imageRef.value);
    });
    var _useConfig = configProvider_useConfig.useConfig(),
      classPrefix = _useConfig.classPrefix;
    var shouldLoad = vue.ref(!props2.lazy);
    var handleLoadImage = function handleLoadImage() {
      shouldLoad.value = true;
    };
    var isLoaded = vue.ref(false);
    var handleLoad = function handleLoad() {
      var _props2$onLoad;
      isLoaded.value = true;
      (_props2$onLoad = props2.onLoad) === null || _props2$onLoad === void 0 ? void 0 : _props2$onLoad.call(props2);
    };
    var hasError = vue.ref(false);
    var handleError = function handleError() {
      var _props2$onError;
      hasError.value = true;
      (_props2$onError = props2.onError) === null || _props2$onError === void 0 ? void 0 : _props2$onError.call(props2);
    };
    var hasMouseEvent = vue.computed(function () {
      return props2.overlayTrigger === "hover";
    });
    var shouldShowOverlay = vue.ref(!hasMouseEvent.value);
    var handleToggleOverlay = function handleToggleOverlay() {
      if (hasMouseEvent.value) {
        shouldShowOverlay.value = !shouldShowOverlay.value;
      }
    };
    var renderPlaceholder = function renderPlaceholder() {
      if (!props2.placeholder) {
        return null;
      }
      return vue.createVNode("div", {
        "class": "".concat(classPrefix.value, "-image__placeholder")
      }, [props2.placeholder]);
    };
    var renderGalleryShadow = function renderGalleryShadow() {
      if (!props2.gallery) return null;
      return vue.createVNode("div", {
        "class": "".concat(classPrefix.value, "-image__gallery-shadow")
      }, null);
    };
    var renderOverlay = function renderOverlay() {
      if (!props2.overlayContent) return null;
      return vue.createVNode("div", {
        "class": ["".concat(classPrefix.value, "-image__overlay-content"), !shouldShowOverlay.value && "".concat(classPrefix.value, "-image__overlay-content--hidden")]
      }, [props2.overlayContent]);
    };
    var renderTNodDefault = hooks_tnode.useTNodeDefault();
    return function () {
      return vue.createVNode("div", vue.mergeProps({
        "ref": imageRef,
        "class": ["".concat(classPrefix.value, "-image__wrapper"), "".concat(classPrefix.value, "-image__wrapper--shape-").concat(props2.shape), props2.gallery && "".concat(classPrefix.value, "-image__wrapper--gallery"), hasMouseEvent.value && "".concat(classPrefix.value, "-image__wrapper--need-hover")],
        "onMouseenter": handleToggleOverlay,
        "onMouseleave": handleToggleOverlay
      }, omit__default["default"](props2, ["src", "alt", "fit", "position", "shape", "placeholder", "loading", "error", "overlayTrigger", "overlayContent", "lazy", "gallery", "onLoad", "onError"])), [renderPlaceholder(), renderGalleryShadow(), (hasError.value || !shouldLoad.value) && vue.createVNode("div", {
        "class": "".concat(classPrefix.value, "-image")
      }, null), !(hasError.value || !shouldLoad.value) && vue.createVNode("img", {
        "src": props2.src,
        "onError": handleError,
        "onLoad": handleLoad,
        "class": ["".concat(classPrefix.value, "-image"), "".concat(classPrefix.value, "-image--fit-").concat(props2.fit), "".concat(classPrefix.value, "-image--position-").concat(props2.position)],
        "alt": props2.alt
      }, null), !(hasError.value || !shouldLoad.value) && !isLoaded.value && vue.createVNode("div", {
        "class": "".concat(classPrefix.value, "-image__loading")
      }, [props2.loading || vue.createVNode("div", {
        "direction": "vertical",
        "size": 8,
        "align": "center"
      }, ["\u56FE\u7247\u52A0\u8F7D\u4E2D"])]), hasError.value && vue.createVNode("div", {
        "class": "".concat(classPrefix.value, "-image__error")
      }, [renderTNodDefault("error", vue.createVNode("div", {
        "direction": "vertical",
        "size": 8,
        "align": "center"
      }, ["\u56FE\u7247\u65E0\u6CD5\u663E\u793A"]))]), renderOverlay()]);
    };
  }
});

exports["default"] = _Image;
//# sourceMappingURL=image.js.map
