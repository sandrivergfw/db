{"version":3,"file":"props.js","sources":["../../src/image/props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdImageProps } from './type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 图片描述 */\n  alt: {\n    type: String,\n    default: '',\n  },\n  /** 禁用状态，图片不响应鼠标事件 */\n  disabled: Boolean,\n  /** 自定义图片加载失败状态下的显示内容 */\n  error: {\n    type: Object as PropType<TdImageProps['error']>,\n  },\n  /** 图片填充模式 */\n  fit: {\n    type: String as PropType<TdImageProps['fit']>,\n    default: 'fill' as TdImageProps['fit'],\n    validator(val: TdImageProps['fit']): boolean {\n      if (!val) return true;\n      return ['contain', 'cover', 'fill', 'none', 'scale-down'].includes(val);\n    },\n  },\n  /** 是否展示为图集样式 */\n  gallery: Boolean,\n  /** 是否开启图片懒加载 */\n  lazy: Boolean,\n  /** 自定义加载中状态的图片内容，如：“加载中” */\n  loading: {\n    type: Object as PropType<TdImageProps['loading']>,\n  },\n  /** 图片上方的浮层内容 */\n  overlayContent: {\n    type: Object as PropType<TdImageProps['overlayContent']>,\n  },\n  /** 浮层 `overlayContent` 出现的时机 */\n  overlayTrigger: {\n    type: String as PropType<TdImageProps['overlayTrigger']>,\n    default: 'always' as TdImageProps['overlayTrigger'],\n    validator(val: TdImageProps['overlayTrigger']): boolean {\n      if (!val) return true;\n      return ['always', 'hover'].includes(val);\n    },\n  },\n  /** 占位元素，展示层级低于 `loading` `error` 和图片本身，值类型为字符串时表示占位图片地址 */\n  placeholder: {\n    type: Object as PropType<TdImageProps['placeholder']>,\n  },\n  /** 等同于原生的 object-position 属性，可选值为 top right bottom left 或 string，可以自定义任何单位，px 或者 百分比 */\n  position: {\n    type: String,\n    default: 'center',\n  },\n  /** 图片圆角类型 */\n  shape: {\n    type: String as PropType<TdImageProps['shape']>,\n    default: 'square' as TdImageProps['shape'],\n    validator(val: TdImageProps['shape']): boolean {\n      if (!val) return true;\n      return ['circle', 'round', 'square'].includes(val);\n    },\n  },\n  /** 图片链接 */\n  src: {\n    type: String,\n    default: '',\n  },\n  /** 图片加载失败时触发 */\n  onError: Function as PropType<TdImageProps['onError']>,\n  /** 图片加载完成时触发 */\n  onLoad: Function as PropType<TdImageProps['onLoad']>,\n};\n"],"names":["alt","type","String","disabled","Boolean","error","Object","fit","validator","val","includes","gallery","lazy","loading","overlayContent","overlayTrigger","placeholder","position","shape","src","onError","Function","onLoad"],"mappings":";;;;;;;;;;AASA,YAAe;AAEbA,EAAAA,GAAK,EAAA;AACHC,IAAAA,IAAM,EAAAC,MAAA;IACN,SAAS,EAAA,EAAA;GACX;AAEAC,EAAAA,QAAU,EAAAC,OAAA;AAEVC,EAAAA,KAAO,EAAA;AACLJ,IAAAA,IAAM,EAAAK,MAAAA;GACR;AAEAC,EAAAA,GAAK,EAAA;AACHN,IAAAA,IAAM,EAAAC,MAAA;AACN,IAAA,SAAA,EAAS,MAAA;IACTM,8BAAUC,GAAmC,EAAA;AAC3C,MAAA,IAAI,CAACA,GAAA,EAAY,OAAA,IAAA,CAAA;AACV,MAAA,OAAA,CAAC,WAAW,OAAS,EAAA,MAAA,EAAQ,QAAQ,YAAY,CAAA,CAAEC,SAASD,GAAG,CAAA,CAAA;AACxE,KAAA;GACF;AAEAE,EAAAA,OAAS,EAAAP,OAAA;AAETQ,EAAAA,IAAM,EAAAR,OAAA;AAENS,EAAAA,OAAS,EAAA;AACPZ,IAAAA,IAAM,EAAAK,MAAAA;GACR;AAEAQ,EAAAA,cAAgB,EAAA;AACdb,IAAAA,IAAM,EAAAK,MAAAA;GACR;AAEAS,EAAAA,cAAgB,EAAA;AACdd,IAAAA,IAAM,EAAAC,MAAA;AACN,IAAA,SAAA,EAAS,QAAA;IACTM,8BAAUC,GAA8C,EAAA;AACtD,MAAA,IAAI,CAACA,GAAA,EAAY,OAAA,IAAA,CAAA;MACjB,OAAO,CAAC,QAAA,EAAU,OAAO,CAAA,CAAEC,SAASD,GAAG,CAAA,CAAA;AACzC,KAAA;GACF;AAEAO,EAAAA,WAAa,EAAA;AACXf,IAAAA,IAAM,EAAAK,MAAAA;GACR;AAEAW,EAAAA,QAAU,EAAA;AACRhB,IAAAA,IAAM,EAAAC,MAAA;IACN,SAAS,EAAA,QAAA;GACX;AAEAgB,EAAAA,KAAO,EAAA;AACLjB,IAAAA,IAAM,EAAAC,MAAA;AACN,IAAA,SAAA,EAAS,QAAA;IACTM,8BAAUC,GAAqC,EAAA;AAC7C,MAAA,IAAI,CAACA,GAAA,EAAY,OAAA,IAAA,CAAA;MACjB,OAAO,CAAC,QAAU,EAAA,OAAA,EAAS,QAAQ,CAAA,CAAEC,SAASD,GAAG,CAAA,CAAA;AACnD,KAAA;GACF;AAEAU,EAAAA,GAAK,EAAA;AACHlB,IAAAA,IAAM,EAAAC,MAAA;IACN,SAAS,EAAA,EAAA;GACX;AAEAkB,EAAAA,OAAS,EAAAC,QAAA;AAETC,EAAAA,MAAQ,EAAAD,QAAAA;AACV,CAAA;;;;"}