{"version":3,"file":"textarea.js","sources":["../../src/textarea/textarea.tsx"],"sourcesContent":["import { defineComponent, computed, watch, ref, nextTick, onMounted, toRefs, inject, StyleValue } from 'vue';\nimport props from './props';\nimport { TextareaValue, TdTextareaProps } from './type';\nimport { getCharacterLength, omit } from '../utils/helper';\nimport calcTextareaHeight from './calcTextareaHeight';\nimport { FormItemInjectionKey } from '../form/const';\n\n// hooks\nimport useVModel from '../hooks/useVModel';\nimport { useFormDisabled } from '../form/hooks';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\n\nfunction getValidAttrs(obj: object): object {\n  const newObj = {};\n  Object.keys(obj).forEach((key) => {\n    if (typeof obj[key] !== 'undefined') {\n      newObj[key] = obj[key];\n    }\n  });\n  return newObj;\n}\n\nexport default defineComponent({\n  name: 'TTextarea',\n  inheritAttrs: false,\n  props: { ...props },\n\n  setup(props: TdTextareaProps, { attrs, expose }) {\n    const prefix = usePrefixClass();\n    const name = usePrefixClass('textarea');\n    const TEXTAREA_TIPS_CLASS = computed(() => `${name.value}__tips`);\n    const TEXTAREA_LIMIT = computed(() => `${name.value}__limit`);\n\n    const { value, modelValue } = toRefs(props);\n    const [innerValue, setInnerValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const disabled = useFormDisabled();\n    const textareaStyle = ref({});\n    const computedStyle = computed(() => {\n      const { style } = attrs as { style: StyleValue };\n      return [style, textareaStyle.value];\n    });\n\n    const refTextareaElem = ref<HTMLTextAreaElement>();\n    const focused = ref(false);\n\n    const focus = () => refTextareaElem.value?.focus();\n    const blur = () => refTextareaElem.value?.blur();\n\n    // methods\n    const adjustTextareaHeight = () => {\n      if (props.autosize === true) {\n        nextTick(() => {\n          textareaStyle.value = calcTextareaHeight(refTextareaElem.value);\n        });\n      } else if (typeof props.autosize === 'object') {\n        const { minRows, maxRows } = props.autosize;\n        textareaStyle.value = calcTextareaHeight(refTextareaElem.value, minRows, maxRows);\n      } else if (attrs.rows) {\n        textareaStyle.value = { height: 'auto', minHeight: 'auto' };\n      } else if (attrs.style && refTextareaElem.value?.style?.height) {\n        textareaStyle.value = { height: refTextareaElem.value.style.height };\n      }\n    };\n\n    const setInputValue = (v: TextareaValue = '') => {\n      const textareaElem = refTextareaElem.value;\n      const sV = String(v);\n      if (!textareaElem) {\n        return;\n      }\n      if (textareaElem.value !== sV) {\n        textareaElem.value = sV;\n        innerValue.value = sV;\n      }\n    };\n    const inputValueChangeHandle = (e: InputEvent) => {\n      const { target } = e;\n      let val = (target as HTMLInputElement).value;\n      if (props.maxcharacter && props.maxcharacter >= 0) {\n        const stringInfo = getCharacterLength(val, props.maxcharacter);\n        val = typeof stringInfo === 'object' && stringInfo.characters;\n      }\n      setInnerValue(val, { e });\n      nextTick(() => setInputValue(val));\n      adjustTextareaHeight();\n    };\n\n    const handleInput = (e: any) => {\n      if (e.isComposing || e.inputType === 'insertCompositionText') return;\n      inputValueChangeHandle(e);\n    };\n    const onCompositionend = (e: InputEvent | CompositionEvent) => {\n      inputValueChangeHandle(e as InputEvent);\n    };\n\n    const eventDeal = (name: 'keydown' | 'keyup' | 'keypress' | 'change', e: KeyboardEvent | FocusEvent) => {\n      if (disabled.value) return;\n      const _name = `on${name[0].toUpperCase()}${name.slice(1)}`;\n      props[_name]?.(innerValue.value, { e });\n    };\n\n    const emitKeyDown = (e: KeyboardEvent) => {\n      eventDeal('keydown', e);\n    };\n    const emitKeyUp = (e: KeyboardEvent) => {\n      eventDeal('keyup', e);\n    };\n    const emitKeypress = (e: KeyboardEvent) => {\n      eventDeal('keypress', e);\n    };\n\n    const emitFocus = (e: FocusEvent) => {\n      adjustTextareaHeight();\n      if (disabled.value) return;\n      focused.value = true;\n      props.onFocus?.(innerValue.value, { e });\n    };\n\n    const formItem = inject(FormItemInjectionKey, undefined);\n    const emitBlur = (e: FocusEvent) => {\n      adjustTextareaHeight();\n      focused.value = false;\n      props.onBlur?.(innerValue.value, { e });\n      formItem?.handleBlur();\n    };\n\n    // computed\n    const textareaClasses = computed(() => {\n      return [\n        name.value,\n        {\n          [`${prefix.value}-is-disabled`]: disabled.value,\n          [`${prefix.value}-is-readonly`]: props.readonly,\n        },\n      ];\n    });\n    const inputAttrs = computed<Record<string, any>>(() => {\n      return getValidAttrs({\n        autofocus: props.autofocus,\n        disabled: disabled.value,\n        readonly: props.readonly,\n        placeholder: props.placeholder,\n        maxlength: props.maxlength || undefined,\n        name: props.name || undefined,\n      });\n    });\n    const characterNumber = computed(() => {\n      const characterInfo = getCharacterLength(String(innerValue.value || ''));\n      if (typeof characterInfo === 'object') {\n        return characterInfo.length;\n      }\n      return characterInfo;\n    });\n\n    // watch\n    watch(\n      () => innerValue.value,\n      () => adjustTextareaHeight(),\n    );\n\n    watch(refTextareaElem, (el) => {\n      if (!el) return;\n      adjustTextareaHeight();\n    });\n\n    watch(\n      () => props.autofocus,\n      (val) => {\n        if (val) {\n          refTextareaElem.value.focus();\n        }\n      },\n    );\n\n    expose({\n      focus,\n      blur,\n    });\n\n    onMounted(() => {\n      adjustTextareaHeight();\n    });\n\n    const renderTNodeJSX = useTNodeJSX();\n    return () => {\n      const inputEvents = getValidAttrs({\n        onFocus: emitFocus,\n        onBlur: emitBlur,\n        onKeydown: emitKeyDown,\n        onKeyup: emitKeyUp,\n        onKeypress: emitKeypress,\n      });\n      const { STATUS } = useCommonClassName();\n      const classes = computed(() => [\n        `${name.value}__inner`,\n        {\n          [`${prefix.value}-is-${props.status}`]: props.status,\n          [STATUS.value.disabled]: disabled.value,\n          [STATUS.value.focused]: focused.value,\n          [`${prefix.value}-resize-none`]: props.maxlength,\n        },\n        'narrow-scrollbar',\n      ]);\n\n      const tips = renderTNodeJSX('tips');\n\n      return (\n        <div class={textareaClasses.value} {...omit(attrs, ['style'])}>\n          <textarea\n            onInput={handleInput}\n            onCompositionend={onCompositionend}\n            ref={refTextareaElem}\n            value={innerValue.value}\n            style={computedStyle.value}\n            class={classes.value}\n            {...inputEvents}\n            {...inputAttrs.value}\n          ></textarea>\n          {props.maxcharacter && (\n            <span class={TEXTAREA_LIMIT.value}>{`${characterNumber.value}/${props.maxcharacter}`}</span>\n          )}\n          {!props.maxcharacter && props.maxlength ? (\n            <span class={TEXTAREA_LIMIT.value}>{`${innerValue.value ? String(innerValue.value)?.length : 0}/${\n              props.maxlength\n            }`}</span>\n          ) : null}\n          {tips && (\n            <div class={`${TEXTAREA_TIPS_CLASS.value} ${name.value}__tips--${props.status || 'normal'}`}>{tips}</div>\n          )}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["getValidAttrs","obj","newObj","Object","keys","forEach","key","defineComponent","name","inheritAttrs","props","setup","attrs","expose","prefix","usePrefixClass","TEXTAREA_TIPS_CLASS","computed","value","TEXTAREA_LIMIT","toRefs","modelValue","useVModel","defaultValue","onChange","_slicedToArray","innerValue","setInnerValue","disabled","useFormDisabled","textareaStyle","ref","computedStyle","style","refTextareaElem","focused","focus","blur","adjustTextareaHeight","autosize","nextTick","calcTextareaHeight","_typeof","minRows","maxRows","rows","height","minHeight","setInputValue","v","textareaElem","sV","String","inputValueChangeHandle","e","target","val","maxcharacter","stringInfo","getCharacterLength","characters","handleInput","isComposing","inputType","onCompositionend","eventDeal","_name","toUpperCase","slice","emitKeyDown","emitKeyUp","emitKeypress","emitFocus","onFocus","formItem","inject","FormItemInjectionKey","emitBlur","onBlur","handleBlur","textareaClasses","_defineProperty","readonly","inputAttrs","autofocus","placeholder","maxlength","characterNumber","characterInfo","length","watch","el","onMounted","renderTNodeJSX","useTNodeJSX","inputEvents","onKeydown","onKeyup","onKeypress","useCommonClassName","STATUS","classes","status","tips","_createVNode","_mergeProps","omit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,SAASA,cAAcC,GAAqB,EAAA;EAC1C,IAAMC,SAAS,EAAC,CAAA;EAChBC,MAAA,CAAOC,IAAK,CAAAH,GAAG,CAAE,CAAAI,OAAA,CAAQ,UAACC,GAAQ,EAAA;AAC5B,IAAA,IAAA,OAAOL,GAAI,CAAAK,GAAA,CAAA,KAAS,WAAa,EAAA;AACnCJ,MAAAA,MAAA,CAAOI,OAAOL,GAAI,CAAAK,GAAA,CAAA,CAAA;AACpB,KAAA;AACF,GAAC,CAAA,CAAA;AACM,EAAA,OAAAJ,MAAA,CAAA;AACT,CAAA;AAEA,gBAAeK,mBAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,WAAA;AACNC,EAAAA,YAAc,EAAA,KAAA;EACdC,KAAA,EAAA,aAAA,CAAA,EAAA,EAAYA,yBAAM,CAAA;EAElBC,KAAMD,EAAAA,SAAAA,KAAAA,CAAAA,MAAAA,EAA2C,IAAA,EAAA;IAAA,IAAjBE,KAAA,QAAAA,KAAA;AAAOC,MAAAA,cAAAA;IACrC,IAAMC,SAASC,8BAAe,EAAA,CAAA;AACxB,IAAA,IAAAP,IAAA,GAAOO,+BAAe,UAAU,CAAA,CAAA;IACtC,IAAMC,mBAAsB,GAAAC,YAAA,CAAS,YAAA;MAAA,OAAST,EAAAA,CAAAA,MAAAA,CAAAA,KAAKU,KAAa,EAAA,QAAA,CAAA,CAAA;AAAA,KAAA,CAAA,CAAA;IAChE,IAAMC,cAAiB,GAAAF,YAAA,CAAS,YAAA;MAAA,OAAST,EAAAA,CAAAA,MAAAA,CAAAA,KAAKU,KAAc,EAAA,SAAA,CAAA,CAAA;AAAA,KAAA,CAAA,CAAA;IAE5D,IAA8BE,OAAAA,GAAAA,WAAOV,MAAK,CAAA;AAAlCQ,MAAAA,KAAA,WAAAA,KAAA;AAAOG,MAAAA,UAAW,WAAXA,UAAW,CAAA;AACpB,IAAA,IAAA,UAAA,GAA8BC,0BAAA,CAAUJ,OAAOG,UAAYX,EAAAA,MAAAA,CAAMa,YAAcb,EAAAA,MAAAA,CAAMc,QAAQ,CAAA;AAAA,MAAA,WAAA,GAAAC,kCAAA,CAAA,UAAA,EAAA,CAAA,CAAA;MAA5FC,UAAY,GAAA,WAAA,CAAA,CAAA,CAAA;MAAAC,aAAa,GAAA,WAAA,CAAA,CAAA,CAAA,CAAA;IAChC,IAAMC,WAAWC,0BAAgB,EAAA,CAAA;AAC3B,IAAA,IAAAC,aAAA,GAAgBC,OAAI,CAAA,EAAE,CAAA,CAAA;AACtB,IAAA,IAAAC,aAAA,GAAgBf,aAAS,YAAM;AAC7B,MAAA,IAAEgB,QAAUrB,KAAA,CAAVqB;AACD,MAAA,OAAA,CAACA,KAAO,EAAAH,aAAA,CAAcZ,KAAK,CAAA,CAAA;AACpC,KAAC,CAAA,CAAA;IAED,IAAMgB,kBAAkBH,OAAyB,EAAA,CAAA;AAC3C,IAAA,IAAAI,OAAA,GAAUJ,QAAI,KAAK,CAAA,CAAA;IAEzB,IAAMK,KAAQ,GAAA,SAARA,KAAQ,GAAA;AAAA,MAAA,IAAA,qBAAA,CAAA;AAAA,MAAA,OAAA,CAAA,qBAAA,GAAMF,eAAgB,CAAAhB,KAAA,MAAhB,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAuBkB,KAAM,EAAA,CAAA;AAAA,KAAA,CAAA;IACjD,IAAMC,IAAO,GAAA,SAAPA,IAAO,GAAA;AAAA,MAAA,IAAA,sBAAA,CAAA;AAAA,MAAA,OAAA,CAAA,sBAAA,GAAMH,eAAgB,CAAAhB,KAAA,MAAhB,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAAuBmB,IAAK,EAAA,CAAA;AAAA,KAAA,CAAA;AAG/C,IAAA,IAAMC,uBAAuB,SAAvBA,uBAA6B;AAAA,MAAA,IAAA,sBAAA,EAAA,sBAAA,CAAA;AAC7B5B,MAAAA,IAAAA,MAAAA,CAAM6B,aAAa,IAAM,EAAA;AAC3BC,QAAAA,YAAA,CAAS,YAAM;UACCV,aAAA,CAAAZ,KAAA,GAAQuB,sCAAmB,CAAAP,eAAA,CAAgBhB,KAAK,CAAA,CAAA;AAChE,SAAC,CAAA,CAAA;OACQ,MAAA,IAAAwB,2BAAOhC,CAAAA,MAAM,CAAA6B,QAAA,CAAA,KAAa,QAAU,EAAA;QAC7C,IAA6B7B,gBAAAA,GAAAA,MAAM,CAAA6B,QAAA;AAA3BI,UAAAA,OAAA,oBAAAA,OAAA;AAASC,UAAAA,OAAQ,oBAARA,OAAQ,CAAA;AACzBd,QAAAA,aAAA,CAAcZ,KAAQ,GAAAuB,sCAAA,CAAmBP,eAAgB,CAAAhB,KAAA,EAAOyB,SAASC,OAAO,CAAA,CAAA;AAClF,OAAA,MAAA,IAAWhC,MAAMiC,IAAM,EAAA;QACrBf,aAAA,CAAcZ,KAAQ,GAAA;AAAE4B,UAAAA,MAAQ,EAAA,MAAA;AAAQC,UAAAA,WAAW,MAAA;SAAO,CAAA;AAC5D,iBAAWnC,KAAM,CAAAqB,KAAA,IAASC,CAAAA,sBAAAA,GAAAA,eAAgB,CAAAhB,KAAA,6EAAhB,sBAAuBe,CAAAA,WAAvB,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,IAAA,sBAAA,CAA8Ba,MAAQ,EAAA;QAC9DhB,aAAA,CAAcZ,QAAQ;AAAE4B,UAAAA,MAAA,EAAQZ,eAAgB,CAAAhB,KAAA,CAAMe,MAAMa,MAAAA;SAAO,CAAA;AACrE,OAAA;KACF,CAAA;AAEM,IAAA,IAAAE,aAAA,GAAgB,SAAhBA,aAAA,GAA2C;MAAA,IAA1BC,CAAA,uEAAmB,EAAO,CAAA;AAC/C,MAAA,IAAMC,eAAehB,eAAgB,CAAAhB,KAAA,CAAA;AAC/B,MAAA,IAAAiC,EAAA,GAAKC,OAAOH,CAAC,CAAA,CAAA;MACnB,IAAI,CAACC,YAAc,EAAA;AACjB,QAAA,OAAA;AACF,OAAA;AACI,MAAA,IAAAA,YAAA,CAAahC,UAAUiC,EAAI,EAAA;QAC7BD,YAAA,CAAahC,KAAQ,GAAAiC,EAAA,CAAA;QACrBzB,UAAA,CAAWR,KAAQ,GAAAiC,EAAA,CAAA;AACrB,OAAA;KACF,CAAA;AACM,IAAA,IAAAE,sBAAA,GAAyB,SAAzBA,sBAAA,CAA0BC,CAAkB,EAAA;AAC1C,MAAA,IAAEC,SAAWD,CAAA,CAAXC;AACR,MAAA,IAAIC,MAAOD,MAA4B,CAAArC,KAAA,CAAA;MACvC,IAAIR,MAAM,CAAA+C,YAAA,IAAgB/C,MAAM,CAAA+C,YAAA,IAAgB,CAAG,EAAA;QACjD,IAAMC,UAAa,GAAAC,+BAAA,CAAmBH,GAAK9C,EAAAA,MAAAA,CAAM+C,YAAY,CAAA,CAAA;QACvDD,GAAA,GAAAd,4BAAOgB,UAAe,CAAA,KAAA,QAAA,IAAYA,UAAW,CAAAE,UAAA,CAAA;AACrD,OAAA;MACcjC,aAAA,CAAA6B,GAAA,EAAK;AAAEF,QAAAA,CAAA,EAAAA,CAAAA;AAAE,OAAC,CAAA,CAAA;AACfd,MAAAA,YAAA,CAAA,YAAA;QAAA,OAAMQ,aAAc,CAAAQ,GAAG,CAAC,CAAA;OAAA,CAAA,CAAA;AACZlB,MAAAA,oBAAA,EAAA,CAAA;KACvB,CAAA;AAEM,IAAA,IAAAuB,WAAA,GAAc,SAAdA,WAAA,CAAeP,CAAW,EAAA;MAC1B,IAAAA,CAAA,CAAEQ,WAAe,IAAAR,CAAA,CAAES,SAAc,KAAA,uBAAA,EAAyB,OAAA;MAC9DV,sBAAA,CAAuBC,CAAC,CAAA,CAAA;KAC1B,CAAA;AACM,IAAA,IAAAU,gBAAA,GAAmB,SAAnBA,gBAAA,CAAoBV,CAAqC,EAAA;MAC7DD,sBAAA,CAAuBC,CAAe,CAAA,CAAA;KACxC,CAAA;IAEM,IAAAW,SAAA,GAAY,SAAZA,SAAA,CAAazD,KAAAA,EAAmD8C,CAAkC,EAAA;AAAA,MAAA,IAAA,aAAA,CAAA;MACtG,IAAI1B,QAAS,CAAAV,KAAA,EAAO,OAAA;AACd,MAAA,IAAAgD,KAAA,GAAa1D,IAAAA,CAAAA,MAAAA,CAAAA,KAAK,CAAA,CAAA,CAAA,CAAG2D,aAAgB3D,CAAAA,CAAAA,MAAAA,CAAAA,KAAAA,CAAK4D,MAAM,CAAC,CAAA,CAAA,CAAA;MACvD1D,CAAAA,aAAAA,GAAAA,OAAMwD,KAAS,CAAA,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAfxD,aAAAA,CAAAA,IAAAA,CAAAA,QAAegB,UAAA,CAAWR,KAAO,EAAA;AAAEoC,QAAAA,GAAAA,CAAAA;AAAE,OAAC,CAAA,CAAA;KACxC,CAAA;AAEM,IAAA,IAAAe,WAAA,GAAc,SAAdA,WAAA,CAAef,CAAqB,EAAA;AACxCW,MAAAA,SAAA,CAAU,WAAWX,CAAC,CAAA,CAAA;KACxB,CAAA;AACM,IAAA,IAAAgB,SAAA,GAAY,SAAZA,SAAA,CAAahB,CAAqB,EAAA;AACtCW,MAAAA,SAAA,CAAU,SAASX,CAAC,CAAA,CAAA;KACtB,CAAA;AACM,IAAA,IAAAiB,YAAA,GAAe,SAAfA,YAAA,CAAgBjB,CAAqB,EAAA;AACzCW,MAAAA,SAAA,CAAU,YAAYX,CAAC,CAAA,CAAA;KACzB,CAAA;AAEM,IAAA,IAAAkB,SAAA,GAAY,SAAZA,SAAA,CAAalB,CAAkB,EAAA;AAAA,MAAA,IAAA,eAAA,CAAA;AACdhB,MAAAA,oBAAA,EAAA,CAAA;MACrB,IAAIV,QAAS,CAAAV,KAAA,EAAO,OAAA;MACpBiB,OAAA,CAAQjB,KAAQ,GAAA,IAAA,CAAA;MAChBR,CAAAA,eAAAA,GAAAA,OAAM+D,OAAU,MAAhB/D,IAAAA,IAAAA,eAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,eAAAA,CAAAA,IAAAA,CAAAA,QAAgBgB,UAAA,CAAWR,KAAO,EAAA;AAAEoC,QAAAA,GAAAA,CAAAA;AAAE,OAAC,CAAA,CAAA;KACzC,CAAA;IAEM,IAAAoB,QAAA,GAAWC,UAAO,CAAAC,+BAAA,EAAsB,KAAS,CAAA,CAAA,CAAA;AACjD,IAAA,IAAAC,QAAA,GAAW,SAAXA,QAAA,CAAYvB,CAAkB,EAAA;AAAA,MAAA,IAAA,cAAA,CAAA;AACbhB,MAAAA,oBAAA,EAAA,CAAA;MACrBH,OAAA,CAAQjB,KAAQ,GAAA,KAAA,CAAA;MAChBR,CAAAA,cAAAA,GAAAA,OAAMoE,MAAS,MAAfpE,IAAAA,IAAAA,cAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,cAAAA,CAAAA,IAAAA,CAAAA,QAAegB,UAAA,CAAWR,KAAO,EAAA;AAAEoC,QAAAA,GAAAA,CAAAA;AAAE,OAAC,CAAA,CAAA;AACtCoB,MAAAA,QAAA,aAAAA,QAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,QAAA,CAAUK,UAAW,EAAA,CAAA;KACvB,CAAA;AAGM,IAAA,IAAAC,eAAA,GAAkB/D,aAAS,YAAM;AAAA,MAAA,IAAA,KAAA,CAAA;MAC9B,OAAA,CACLT,IAAK,CAAAU,KAAA,oEAECJ,MAAO,CAAAI,KAAA,EAAsBU,cAAAA,CAAAA,EAAAA,QAAS,CAAAV,KAAA,CAAA,EAAA+D,mCAAA,CAAA,KAAA,EAAA,EAAA,CAAA,MAAA,CACtCnE,MAAO,CAAAI,KAAA,mBAAsBR,MAAM,CAAAwE,QAAA,CAE3C,EAAA,KAAA,EAAA,CAAA;AACF,KAAC,CAAA,CAAA;AACK,IAAA,IAAAC,UAAA,GAAalE,aAA8B,YAAM;AACrD,MAAA,OAAOjB,aAAc,CAAA;QACnBoF,WAAW1E,MAAM,CAAA0E,SAAA;QACjBxD,UAAUA,QAAS,CAAAV,KAAA;QACnBgE,UAAUxE,MAAM,CAAAwE,QAAA;QAChBG,aAAa3E,MAAM,CAAA2E,WAAA;AACnBC,QAAAA,SAAA,EAAW5E,OAAM4E,SAAa,IAAA,KAAA,CAAA;AAC9B9E,QAAAA,IAAA,EAAME,OAAMF,IAAQ,IAAA,KAAA,CAAA;AACtB,OAAC,CAAA,CAAA;AACH,KAAC,CAAA,CAAA;AACK,IAAA,IAAA+E,eAAA,GAAkBtE,aAAS,YAAM;AACrC,MAAA,IAAMuE,gBAAgB7B,+BAAmB,CAAAP,MAAA,CAAO1B,UAAW,CAAAR,KAAA,IAAS,EAAE,CAAC,CAAA,CAAA;AACnE,MAAA,IAAAwB,2BAAO8C,CAAAA,cAAkB,KAAA,QAAU,EAAA;QACrC,OAAOA,aAAc,CAAAC,MAAA,CAAA;AACvB,OAAA;AACO,MAAA,OAAAD,aAAA,CAAA;AACT,KAAC,CAAA,CAAA;AAGDE,IAAAA,SAAA,CACE,YAAA;MAAA,OAAMhE,UAAW,CAAAR,KAAA,CAAA;KACjB,EAAA,YAAA;AAAA,MAAA,OAAMoB,oBAAqB,EAAA,CAAA;KAC7B,CAAA,CAAA;AAEMoD,IAAAA,SAAA,CAAAxD,eAAA,EAAiB,UAACyD,EAAO,EAAA;MAC7B,IAAI,CAACA,EAAA,EAAI,OAAA;AACYrD,MAAAA,oBAAA,EAAA,CAAA;AACvB,KAAC,CAAA,CAAA;AAEDoD,IAAAA,SAAA,CACE,YAAA;MAAA,OAAMhF,MAAM,CAAA0E,SAAA,CAAA;KACZ,EAAA,UAAC5B,GAAQ,EAAA;AACP,MAAA,IAAIA,GAAK,EAAA;AACPtB,QAAAA,eAAA,CAAgBhB,MAAMkB,KAAM,EAAA,CAAA;AAC9B,OAAA;AACF,KAAA,CACF,CAAA;AAEOvB,IAAAA,MAAA,CAAA;AACLuB,MAAAA,KAAA,EAAAA,KAAA;AACAC,MAAAA,IAAA,EAAAA,IAAAA;AACF,KAAC,CAAA,CAAA;AAEDuD,IAAAA,aAAA,CAAU,YAAM;AACOtD,MAAAA,oBAAA,EAAA,CAAA;AACvB,KAAC,CAAA,CAAA;IAED,IAAMuD,iBAAiBC,uBAAY,EAAA,CAAA;AACnC,IAAA,OAAO,YAAM;AAAA,MAAA,IAAA,OAAA,CAAA;MACX,IAAMC,cAAc/F,aAAc,CAAA;AAChCyE,QAAAA,OAAS,EAAAD,SAAA;AACTM,QAAAA,MAAQ,EAAAD,QAAA;AACRmB,QAAAA,SAAW,EAAA3B,WAAA;AACX4B,QAAAA,OAAS,EAAA3B,SAAA;AACT4B,QAAAA,UAAY,EAAA3B,YAAAA;AACd,OAAC,CAAA,CAAA;AACK,MAAA,IAAA,mBAAA,GAAa4B,kCAAmB,EAAA;AAA9BC,QAAAA,MAAO,uBAAPA,MAAO,CAAA;MACT,IAAAC,OAAA,GAAUpF,aAAS,YAAA;AAAA,QAAA,IAAA,KAAA,CAAA;QAAA,OAAM,CAAA,EAAA,CAAA,MAAA,CAC1BT,IAAK,CAAAU,KAAA,gFAEFJ,MAAA,CAAOI,KAAYR,EAAAA,MAAAA,CAAAA,CAAAA,MAAAA,CAAAA,MAAAA,CAAM4F,SAAW5F,MAAM,CAAA4F,MAAA,8CAC7CF,MAAA,CAAOlF,KAAM,CAAAU,QAAA,EAAWA,QAAS,CAAAV,KAAA,8CACjCkF,MAAA,CAAOlF,KAAM,CAAAiB,OAAA,EAAUA,OAAQ,CAAAjB,KAAA,CAC5BJ,EAAAA,mCAAAA,CAAAA,KAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,MAAO,CAAAI,KAAA,EAAA,cAAA,CAAA,EAAsBR,MAAM,CAAA4E,SAAA,CAEzC,EAAA,KAAA,GAAA,kBAAA,CACD,CAAA;OAAA,CAAA,CAAA;AAEK,MAAA,IAAAiB,IAAA,GAAOV,eAAe,MAAM,CAAA,CAAA;AAGhC,MAAA,OAAAW,eAAA,CAAA,KAAA,EAAAC,cAAA,CAAA;AAAA,QAAA,OAAA,EAAYzB,eAAA,CAAgB9D,KAAAA;SAAWwF,iBAAK,CAAA9F,KAAA,EAAO,CAAC,OAAO,CAAC,CAAA,CAAA,EAAA,CAAA4F,eAAA,CAAA,UAAA,EAAAC,cAAA,CAAA;AAAA,QAAA,SAAA,EAE/C5C;4BACSG,gBAAA;AAAA,QAAA,KAAA,EACb9B,eACL;QAAA,OAAOR,EAAAA,WAAWR,KAClB;QAAA,OAAOc,EAAAA,cAAcd,KACrB;AAAA,QAAA,OAAA,EAAOmF,QAAQnF,KAAAA;OACX6E,EAAAA,WAAA,EACAZ,WAAWjE,KAChB,CACAR,EAAAA,IAAAA,CAAAA,EAAAA,MAAM,CAAA+C,YAAA,IAAA+C,eAAA,CAAA,MAAA,EAAA;AAAA,QAAA,OAAA,EACQrF,cAAA,CAAeD,KAAAA;AAAQ,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAGqE,eAAgB,CAAArE,KAAA,EAASR,GAAAA,CAAAA,CAAAA,MAAAA,CAAAA,MAAM,CAAA+C,YAAA,CAAA,CAAA,CAArE,EAEF,CAAC/C,OAAM+C,YAAgB/C,IAAAA,MAAAA,CAAM4E;iBACfnE,cAAA,CAAeD,KAAAA;OAAWQ,EAAAA,CAAAA,EAAAA,CAAAA,MAAAA,CAAAA,WAAWR,KAAQ,GAAA,CAAA,OAAA,GAAAkC,MAAA,CAAO1B,WAAWR,KAAK,CAAA,MAAA,IAAA,IAAA,OAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAvB,QAA0BuE,SAAS,CAC3F/E,EAAAA,GAAAA,CAAAA,CAAAA,MAAAA,CAAAA,MAAAA,CAAM4E,SACL,CAAA,CAAA,CAAA,GACD,IAAA,EACHiB,IACC,IAAAC,eAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAA,MAAA,CAAexF,mBAAA,CAAoBE,KAAS,EAAA,GAAA,CAAA,CAAA,MAAA,CAAAV,IAAA,CAAKU,KAAgBR,EAAAA,UAAAA,CAAAA,CAAAA,MAAAA,CAAAA,MAAAA,CAAM4F,MAAU,IAAA,QAAA,CAAA;AAAA,OAAA,EAAA,CAAaC,KAA7F,CAAA,CAAA,CAAA,CAAA;KAIT,CAAA;AACF,GAAA;AACF,CAAC,CAAA;;;;"}