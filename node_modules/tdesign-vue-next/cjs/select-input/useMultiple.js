/**
 * tdesign v0.24.9
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var vue = require('vue');
var isObject = require('lodash/isObject');
var tagInput_index = require('../tag-input/index.js');
var loading_index = require('../loading/index.js');
var hooks_useDefaultValue = require('../hooks/useDefaultValue.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var form_hooks = require('../form/hooks.js');
require('../tag-input/tag-input.js');
require('tdesign-icons-vue-next');
require('../input/index.js');
require('../input/input.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../input/props.js');
require('../hooks/useGlobalIcon.js');
require('../config-provider/useConfig.js');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/default-config.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('../hooks/tnode.js');
require('lodash/isFunction');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isString');
require('../input/useInput.js');
require('../form/const.js');
require('../hooks/useVModel.js');
require('../input/useLengthLimit.js');
require('@babel/runtime/helpers/typeof');
require('../_common/js/log/log.js');
require('../_common/js/utils/helper.js');
require('@babel/runtime/helpers/toConsumableArray');
require('../input/useInputEventHandler.js');
require('../input/useInputWidth.js');
require('../input/input-group.js');
require('../utils/withInstall.js');
require('../tag-input/props.js');
require('../tag-input/hooks/useTagScroll.js');
require('../tag-input/useTagList.js');
require('../tag/index.js');
require('../tag/tag.js');
require('../tag/props.js');
require('../tag/check-tag.js');
require('../tag/check-tag-props.js');
require('../tag-input/hooks/useHover.js');
require('../tag-input/hooks/useDragSorter.js');
require('../loading/directive.js');
require('../loading/plugin.js');
require('../loading/loading.js');
require('../loading/icon/gradient.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../utils/dom.js');
require('../_chunks/dep-6d934009.js');
require('../utils/easing.js');
require('../utils/transfer-dom.js');
require('../loading/props.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);
var isObject__default = /*#__PURE__*/_interopDefaultLegacy(isObject);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var DEFAULT_KEYS = {
  label: "label",
  key: "key",
  children: "children"
};
function useMultiple(props, context) {
  var _toRefs = vue.toRefs(props),
    inputValue = _toRefs.inputValue;
  var classPrefix = hooks_useConfig.usePrefixClass();
  var tagInputRef = vue.ref();
  var _useDefault = hooks_useDefaultValue["default"](inputValue, props.defaultInputValue, props.onInputChange, "inputValue"),
    _useDefault2 = _slicedToArray__default["default"](_useDefault, 2),
    tInputValue = _useDefault2[0],
    setTInputValue = _useDefault2[1];
  var disable = form_hooks.useFormDisabled();
  var iKeys = vue.computed(function () {
    return _objectSpread(_objectSpread({}, DEFAULT_KEYS), props.keys);
  });
  var tags = vue.computed(function () {
    if (!(props.value instanceof Array)) {
      return isObject__default["default"](props.value) ? [props.value[iKeys.value.label]] : [props.value];
    }
    return props.value.map(function (item) {
      return isObject__default["default"](item) ? item[iKeys.value.label] : item;
    });
  });
  var tPlaceholder = vue.computed(function () {
    return !tags.value || !tags.value.length ? props.placeholder : "";
  });
  var onTagInputChange = function onTagInputChange(val, context2) {
    var _props$onTagChange;
    if (context2.trigger === "tag-remove") {
      var _context2$e;
      (_context2$e = context2.e) === null || _context2$e === void 0 ? void 0 : _context2$e.stopPropagation();
    }
    (_props$onTagChange = props.onTagChange) === null || _props$onTagChange === void 0 ? void 0 : _props$onTagChange.call(props, val, context2);
  };
  var renderSelectMultiple = function renderSelectMultiple(p) {
    var tagInputProps = _objectSpread(_objectSpread({}, p.commonInputProps), {}, {
      tagProps: props.tagProps,
      label: props.label,
      autoWidth: props.autoWidth,
      readonly: props.readonly,
      placeholder: tPlaceholder.value,
      minCollapsedNum: props.minCollapsedNum,
      collapsedItems: props.collapsedItems,
      tag: props.tag,
      value: tags.value,
      valueDisplay: props.valueDisplay,
      inputValue: tInputValue.value || "",
      inputProps: _objectSpread({
        readonly: !props.allowInput || props.readonly,
        inputClass: _defineProperty__default["default"]({}, "".concat(classPrefix.value, "-input--focused"), p.popupVisible)
      }, props.inputProps),
      suffixIcon: !disable.value && props.loading ? function () {
        return vue.createVNode(loading_index.Loading, {
          "loading": true,
          "size": "small"
        }, null);
      } : props.suffixIcon
    }, props.tagInputProps);
    return vue.createVNode(tagInput_index.TagInput, vue.mergeProps({
      "ref": "tagInputRef"
    }, tagInputProps, {
      "onInputChange": function onInputChange(val, context2) {
        if ((context2 === null || context2 === void 0 ? void 0 : context2.trigger) === "enter") return;
        setTInputValue(val, {
          trigger: context2.trigger,
          e: context2.e
        });
      },
      "onChange": onTagInputChange,
      "onClear": p.onInnerClear,
      "onBlur": function onBlur(val, context2) {
        var _props$onBlur;
        (_props$onBlur = props.onBlur) === null || _props$onBlur === void 0 ? void 0 : _props$onBlur.call(props, props.value, _objectSpread(_objectSpread({}, context2), {}, {
          tagInputValue: val
        }));
      },
      "onEnter": function onEnter(val, context2) {
        var _props$onEnter;
        (_props$onEnter = props.onEnter) === null || _props$onEnter === void 0 ? void 0 : _props$onEnter.call(props, props.value, _objectSpread(_objectSpread({}, context2), {}, {
          inputValue: tInputValue.value
        }));
      },
      "onFocus": function onFocus(val, context2) {
        var _props$onFocus;
        (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 ? void 0 : _props$onFocus.call(props, props.value, _objectSpread(_objectSpread({}, context2), {}, {
          tagInputValue: val
        }));
      }
    }), context.slots);
  };
  return {
    tags: tags,
    tPlaceholder: tPlaceholder,
    tagInputRef: tagInputRef,
    renderSelectMultiple: renderSelectMultiple
  };
}

exports["default"] = useMultiple;
//# sourceMappingURL=useMultiple.js.map
