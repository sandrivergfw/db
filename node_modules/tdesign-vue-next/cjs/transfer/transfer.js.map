{"version":3,"file":"transfer.js","sources":["../../src/transfer/transfer.tsx"],"sourcesContent":["import { defineComponent, computed, toRefs } from 'vue';\nimport pick from 'lodash/pick';\nimport TransferList from './components/transfer-list';\nimport TransferOperations from './components/transfer-operations';\nimport { TransferListType, CheckedOptions, TransferValue, EmptyType, TargetParams, SearchEvent } from './interface';\n\nimport { getTransferListOption, getDataValues, getTransferData, filterTransferData, TRANSFER_NAME } from './utils';\nimport { PageInfo, TdPaginationProps } from '../pagination/type';\nimport props from './props';\nimport { TNode } from '../common';\nimport useVModel from '../hooks/useVModel';\nimport useDefaultValue from '../hooks/useDefaultValue';\n\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport { usePrefixClass } from '../hooks/useConfig';\n\nconst SOURCE = 'source';\nconst TARGET = 'target';\n\nexport default defineComponent({\n  name: TRANSFER_NAME,\n  props: { ...props },\n\n  setup(props, { slots }) {\n    const disabled = useFormDisabled();\n    const classPrefix = usePrefixClass();\n    const { value, modelValue, checked } = toRefs(props);\n    const [innerValue, setInnerValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const [innerChecked] = useDefaultValue(checked, props.defaultChecked, props.onCheckedChange, 'checked');\n    const valueList = computed(() => innerValue.value);\n\n    const isTreeMode = computed(() => {\n      const treeSlot = slots.tree;\n      return typeof treeSlot === 'function';\n    });\n\n    const leftButtonDisabled = computed(() => props.direction === 'right');\n    const rightButtonDisabled = computed(() => props.direction === 'left');\n    // props 传入的 data 格式化后的数据\n    const transferData = computed(() => {\n      return getTransferData(props.data, props.keys, isTreeMode.value);\n    });\n    const sourceList = computed(() => {\n      return filterTransferData(transferData.value, valueList.value as TransferValue[], false, isTreeMode.value);\n    });\n    const targetList = computed(() => {\n      return filterTransferData(transferData.value, valueList.value as TransferValue[], true, isTreeMode.value);\n    });\n    // 被选中的value\n    const checkedValue = computed(() => {\n      return {\n        [SOURCE]: getDataValues(sourceList.value, innerChecked.value, { isTreeMode: isTreeMode.value }),\n        [TARGET]: getDataValues(targetList.value, innerChecked.value, { isTreeMode: isTreeMode.value }),\n      };\n    });\n    const hasFooter = computed(() => {\n      return !!slots.footer || !!props.footer;\n    });\n    const showPagination = computed(() => {\n      // 翻页在自定义列表无效\n      return !!props.pagination && !slots.content;\n    });\n    const showSearch = computed(() => {\n      // 翻页在自定义列表无效\n      return !!props.search;\n    });\n    const footerOption = computed(() => {\n      const footer = props.footer || '';\n      return getTransferListOption<string | Function>(footer);\n    });\n    const emptyOption = computed(() => {\n      return getTransferListOption<EmptyType>(props.empty);\n    });\n    const searchOption = computed(() => {\n      return getTransferListOption<boolean>(props.search);\n    });\n    const checkAllOption = computed(() => {\n      return getTransferListOption<boolean>(props.showCheckAll);\n    });\n    const disabledOption = computed(() => {\n      return getTransferListOption<boolean>(disabled.value);\n    });\n    const titleOption = computed(() => {\n      return getTransferListOption<string | TNode<{ type: TransferListType }>>(props.title);\n    });\n    const paginationOption = computed(() => {\n      return getTransferListOption<TdPaginationProps>(props.pagination);\n    });\n\n    const handleCheckedChange = (val: Array<TransferValue>, listType: TransferListType) => {\n      const sourceChecked = listType === SOURCE ? val : checkedValue.value[SOURCE];\n      const targetChecked = listType === TARGET ? val : checkedValue.value[TARGET];\n      const checked = [...sourceChecked, ...targetChecked];\n      const event: CheckedOptions = {\n        checked,\n        sourceChecked,\n        targetChecked,\n        type: listType,\n      };\n      // TODO onCheckedChange 参数有点不合理\n      innerChecked.value = checked;\n      props.onCheckedChange?.(event);\n    };\n\n    const transferTo = (toDirection: TransferListType) => {\n      const oldTargetValue: Array<TransferValue> = JSON.parse(JSON.stringify(valueList.value));\n      let newTargetValue: Array<TransferValue>;\n      const selfCheckedValue = toDirection === TARGET ? checkedValue.value[SOURCE] : checkedValue.value[TARGET];\n      // target->source\n      if (toDirection === SOURCE) {\n        newTargetValue = oldTargetValue.filter((v) => !selfCheckedValue.includes(v));\n      } else if (props.targetSort === 'original') {\n        // 按照原始顺序\n        newTargetValue = getDataValues(transferData.value, oldTargetValue.concat(selfCheckedValue), {\n          isTreeMode: isTreeMode.value,\n        });\n      } else if (props.targetSort === 'unshift') {\n        newTargetValue = selfCheckedValue.concat(oldTargetValue);\n      } else {\n        newTargetValue = oldTargetValue.concat(selfCheckedValue);\n      }\n\n      // 清空checked。与toDirection相反\n      handleCheckedChange([], toDirection === SOURCE ? TARGET : SOURCE);\n\n      const params: TargetParams = {\n        type: toDirection,\n        movedValue: selfCheckedValue,\n      };\n      setInnerValue(newTargetValue, params);\n    };\n\n    // 点击移到右边按钮触发的函数\n    const transferToRight = () => {\n      transferTo(TARGET);\n    };\n    // 点击移到左边按钮触发的函数\n    const transferToLeft = () => {\n      transferTo(SOURCE);\n    };\n\n    const handleScroll = (e: Event, listType: TransferListType) => {\n      const target = e.target as HTMLElement;\n      const bottomDistance = target.scrollHeight - target.scrollTop - target.clientHeight;\n      const event: { e: Event; bottomDistance: number; type: TransferListType } = {\n        e,\n        bottomDistance,\n        type: listType,\n      };\n      props.onScroll?.(event);\n    };\n    const handleSearch = (e: SearchEvent) => {\n      props.onSearch?.(e);\n    };\n    const handlePageChange = (pageInfo: PageInfo, listType: TransferListType) => {\n      props.onPageChange?.(pageInfo, { type: listType });\n    };\n    const renderTransferList = (listType: TransferListType) => {\n      const scopedSlots = pick(slots, ['title', 'empty', 'footer', 'operation', 'transferItem', 'default', 'tree']);\n      return (\n        <TransferList\n          checkboxProps={props.checkboxProps}\n          transferItem={props.transferItem}\n          list-type={listType}\n          title={titleOption.value[listType]}\n          data-source={listType === SOURCE ? sourceList.value : targetList.value}\n          checked-value={checkedValue.value[listType]}\n          disabled={disabledOption.value[listType]}\n          search={searchOption.value[listType]}\n          pagination={paginationOption.value[listType]}\n          check-all={checkAllOption.value[listType]}\n          footer={footerOption.value[listType]}\n          empty={emptyOption.value[listType]}\n          onCheckedChange={($event: any) => handleCheckedChange($event, listType)}\n          onScroll={($event: any) => handleScroll($event, listType)}\n          onSearch={handleSearch}\n          onPageChange={($event: any) => handlePageChange($event, listType)}\n          isTreeMode={isTreeMode.value}\n        >\n          {scopedSlots}\n        </TransferList>\n      );\n    };\n\n    return () => (\n      <div\n        class={[\n          `${classPrefix.value}-transfer`,\n          showSearch.value ? `${classPrefix.value}-transfer__search` : '',\n          hasFooter.value ? `${classPrefix.value}-transfer__footer` : '',\n          showPagination.value ? `${classPrefix.value}-transfer__pagination` : '',\n          isTreeMode.value ? `${classPrefix.value}-transfer--with-tree` : '',\n        ]}\n      >\n        {renderTransferList(SOURCE)}\n        <TransferOperations\n          leftDisabled={\n            disabledOption.value[TARGET] || leftButtonDisabled.value || checkedValue.value[TARGET].length === 0\n          }\n          rightDisabled={\n            disabledOption.value[SOURCE] || rightButtonDisabled.value || checkedValue.value[SOURCE].length === 0\n          }\n          operation={props.operation}\n          onMoveToRight={transferToRight}\n          onMoveToLeft={transferToLeft}\n          v-slots={{ operation: slots.operation }}\n        />\n        {renderTransferList(TARGET)}\n      </div>\n    );\n  },\n});\n"],"names":["_isVNode","SOURCE","TARGET","defineComponent","name","TRANSFER_NAME","props","setup","slots","disabled","useFormDisabled","classPrefix","usePrefixClass","toRefs","value","modelValue","checked","useVModel","defaultValue","onChange","_slicedToArray","innerValue","setInnerValue","useDefaultValue","defaultChecked","onCheckedChange","innerChecked","valueList","computed","isTreeMode","treeSlot","tree","leftButtonDisabled","direction","rightButtonDisabled","transferData","getTransferData","data","keys","sourceList","filterTransferData","targetList","checkedValue","getDataValues","_defineProperty","hasFooter","footer","showPagination","pagination","content","showSearch","search","footerOption","getTransferListOption","emptyOption","empty","searchOption","checkAllOption","showCheckAll","disabledOption","titleOption","title","paginationOption","handleCheckedChange","val","listType","sourceChecked","targetChecked","_toConsumableArray","event","type","transferTo","toDirection","oldTargetValue","JSON","parse","stringify","newTargetValue","selfCheckedValue","filter","v","includes","targetSort","concat","params","movedValue","transferToRight","transferToLeft","handleScroll","e","target","bottomDistance","scrollHeight","scrollTop","clientHeight","onScroll","handleSearch","onSearch","handlePageChange","pageInfo","onPageChange","renderTransferList","scopedSlots","pick","_createVNode","TransferList","checkboxProps","transferItem","$event","TransferOperations","length","operation"],"mappings":"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"}