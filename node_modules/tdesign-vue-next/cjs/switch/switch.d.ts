import { h } from 'vue';
declare const _default: import("vue").DefineComponent<{
    customValue: {
        type: import("vue").PropType<import("./type").SwitchValue[]>;
    };
    disabled: BooleanConstructor;
    label: {
        type: import("vue").PropType<(string | ((h: typeof h) => import("../common").SlotReturnValue))[] | ((h: typeof h, props: {
            value: import("./type").SwitchValue;
        }) => import("../common").SlotReturnValue)>;
        default: () => (string | ((h: typeof h) => import("../common").SlotReturnValue))[] | ((h: typeof h, props: {
            value: import("./type").SwitchValue;
        }) => import("../common").SlotReturnValue);
    };
    loading: BooleanConstructor;
    size: {
        type: import("vue").PropType<"small" | "medium" | "large">;
        default: "small" | "medium" | "large";
        validator(val: "small" | "medium" | "large"): boolean;
    };
    modelValue: {
        type: import("vue").PropType<import("./type").SwitchValue>;
        default: any;
    };
    value: {
        type: import("vue").PropType<import("./type").SwitchValue>;
        default: any;
    };
    defaultValue: {
        type: import("vue").PropType<import("./type").SwitchValue>;
        default: boolean;
    };
    onChange: import("vue").PropType<(value: import("./type").SwitchValue) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    customValue: {
        type: import("vue").PropType<import("./type").SwitchValue[]>;
    };
    disabled: BooleanConstructor;
    label: {
        type: import("vue").PropType<(string | ((h: typeof h) => import("../common").SlotReturnValue))[] | ((h: typeof h, props: {
            value: import("./type").SwitchValue;
        }) => import("../common").SlotReturnValue)>;
        default: () => (string | ((h: typeof h) => import("../common").SlotReturnValue))[] | ((h: typeof h, props: {
            value: import("./type").SwitchValue;
        }) => import("../common").SlotReturnValue);
    };
    loading: BooleanConstructor;
    size: {
        type: import("vue").PropType<"small" | "medium" | "large">;
        default: "small" | "medium" | "large";
        validator(val: "small" | "medium" | "large"): boolean;
    };
    modelValue: {
        type: import("vue").PropType<import("./type").SwitchValue>;
        default: any;
    };
    value: {
        type: import("vue").PropType<import("./type").SwitchValue>;
        default: any;
    };
    defaultValue: {
        type: import("vue").PropType<import("./type").SwitchValue>;
        default: boolean;
    };
    onChange: import("vue").PropType<(value: import("./type").SwitchValue) => void>;
}>>, {
    value: import("./type").SwitchValue;
    loading: boolean;
    label: (string | ((h: typeof h) => import("../common").SlotReturnValue))[] | ((h: typeof h, props: {
        value: import("./type").SwitchValue;
    }) => import("../common").SlotReturnValue);
    disabled: boolean;
    size: "small" | "medium" | "large";
    modelValue: import("./type").SwitchValue;
    defaultValue: import("./type").SwitchValue;
}>;
export default _default;
