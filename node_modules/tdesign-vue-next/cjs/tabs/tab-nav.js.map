{"version":3,"file":"tab-nav.js","sources":["../../src/tabs/tab-nav.tsx"],"sourcesContent":["import { h, defineComponent, Transition, ref, computed, watch, onMounted } from 'vue';\nimport debounce from 'lodash/debounce';\nimport {\n  ChevronLeftIcon as TdChevronLeftIcon,\n  ChevronRightIcon as TdChevronRightIcon,\n  AddIcon as TdAddIcon,\n} from 'tdesign-icons-vue-next';\nimport { TdTabsProps } from './type';\nimport tabProps from './props';\nimport tabBase from '../_common/js/tabs/base';\n\n// 子组件\nimport TTabPanel from './tab-panel';\nimport TTabNavItem from './tab-nav-item';\nimport TTabNavBar from './tab-nav-bar';\n\n// hooks\nimport { useResize } from '../hooks/useListener';\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport useDragSort from '../hooks/useDragSort';\n\nconst { calculateCanToLeft, calculateCanToRight, calcScrollLeft, scrollToLeft, scrollToRight, moveActiveTabIntoView } =\n  tabBase;\n\nexport default defineComponent({\n  name: 'TTabNav',\n  ...{ resizeObserver: null },\n  props: {\n    theme: tabProps.theme,\n    panels: {\n      type: Array as { new (): Array<InstanceType<typeof TTabPanel>> },\n      default: (): Array<InstanceType<typeof TTabPanel>> => [] as Array<InstanceType<typeof TTabPanel>>,\n    },\n    value: tabProps.value,\n    placement: tabProps.placement,\n    size: tabProps.size,\n    disabled: tabProps.disabled,\n    addable: tabProps.addable,\n    onChange: tabProps.onChange,\n    onAdd: tabProps.onAdd,\n    onRemove: tabProps.onRemove,\n    dragSort: tabProps.dragSort,\n    onDragSort: tabProps.onDragSort,\n  },\n  setup(props) {\n    const COMPONENT_NAME = usePrefixClass('tabs');\n    const { ChevronLeftIcon, ChevronRightIcon, AddIcon } = useGlobalIcon({\n      ChevronLeftIcon: TdChevronLeftIcon,\n      ChevronRightIcon: TdChevronRightIcon,\n      AddIcon: TdAddIcon,\n    });\n    const classPrefix = usePrefixClass();\n    const { SIZE } = useCommonClassName();\n\n    const scrollLeft = ref(0);\n    const canToLeft = ref(false);\n    const canToRight = ref(false);\n\n    // refs\n    // const panels = ref(props.panels);\n    const navsContainerRef = ref();\n    const navsWrapRef = ref();\n    const leftOperationsRef = ref();\n    const toLeftBtnRef = ref();\n    const rightOperationsRef = ref();\n    const toRightBtnRef = ref();\n    const activeTabRef = ref();\n    const getRefs = () => ({\n      navsContainer: navsContainerRef.value,\n      navsWrap: navsWrapRef.value,\n      leftOperations: leftOperationsRef.value,\n      toLeftBtn: toLeftBtnRef.value,\n      rightOperations: rightOperationsRef.value,\n      toRightBtn: toRightBtnRef.value,\n    });\n\n    // style\n    const wrapTransformStyle = computed(() => {\n      if (['left', 'right'].includes(props.placement.toLowerCase())) return {};\n      return {\n        transform: `translate3d(${-scrollLeft.value}px, 0, 0)`,\n      };\n    });\n    const navsContainerStyle = computed(() => {\n      return props.addable ? { 'min-height': '48px' } : null;\n    });\n\n    // class\n    const iconBaseClass = computed(() => {\n      return {\n        [`${COMPONENT_NAME.value}__btn`]: true,\n        [SIZE.value.medium]: props.size === 'medium',\n        [SIZE.value.large]: props.size === 'large',\n      };\n    });\n    const leftIconClass = computed(() => {\n      return {\n        [`${COMPONENT_NAME.value}__btn--left`]: true,\n        ...iconBaseClass.value,\n      };\n    });\n    const rightIconClass = computed(() => {\n      return {\n        [`${COMPONENT_NAME.value}__btn--right`]: true,\n        ...iconBaseClass.value,\n      };\n    });\n    const addIconClass = computed(() => {\n      return {\n        [`${COMPONENT_NAME.value}__add-btn`]: true,\n        ...iconBaseClass.value,\n      };\n    });\n    const navContainerClass = computed(() => {\n      return {\n        [`${COMPONENT_NAME.value}__nav-container`]: true,\n        [`${COMPONENT_NAME.value}__nav--card`]: props.theme === 'card',\n        [`${classPrefix.value}-is-${props.placement}`]: true,\n        [`${classPrefix.value}-is-addable`]: props.addable,\n      };\n    });\n    const navScrollContainerClass = computed(() => {\n      return {\n        [`${COMPONENT_NAME.value}__nav-scroll`]: true,\n        [`${classPrefix.value}-is-scrollable`]: canToLeft.value || canToRight.value,\n      };\n    });\n\n    const navsWrapClass = computed(() => {\n      return [\n        `${COMPONENT_NAME.value}__nav-wrap`,\n        `${classPrefix.value}-is-smooth`,\n        { [`${classPrefix.value}-is-vertical`]: props.placement === 'left' || props.placement === 'right' },\n      ];\n    });\n\n    const totalAdjust = () => {\n      adjustArrowDisplay();\n      adjustScrollLeft();\n    };\n    // watch\n    watch([scrollLeft, () => props.placement, () => props.panels], totalAdjust);\n\n    // life times\n    useResize(debounce(totalAdjust), navsContainerRef.value);\n    onMounted(totalAdjust);\n\n    // methods\n    const adjustScrollLeft = () => {\n      scrollLeft.value = calcScrollLeft(getRefs(), scrollLeft.value);\n    };\n    const adjustArrowDisplay = () => {\n      canToLeft.value = calculateCanToLeft(getRefs(), scrollLeft.value, props.placement);\n      canToRight.value = calculateCanToRight(getRefs(), scrollLeft.value, props.placement);\n    };\n    const handleScroll = (direction: 'left' | 'right') => {\n      if (direction === 'left') {\n        scrollLeft.value = scrollToLeft(getRefs(), scrollLeft.value);\n      } else {\n        scrollLeft.value = scrollToRight(getRefs(), scrollLeft.value);\n      }\n    };\n    const handleAddTab = (e: MouseEvent) => {\n      props.onAdd?.({ e });\n    };\n    const tabClick = (event: MouseEvent, nav: Partial<InstanceType<typeof TTabPanel>>) => {\n      const { value, disabled } = nav;\n      if (disabled || props.value === value) {\n        return false;\n      }\n      props.onChange(value);\n    };\n    const removeBtnClick = ({ e, value, index }: Parameters<TdTabsProps['onRemove']>[0]) => {\n      props.onRemove({ e, value, index });\n    };\n    const setActiveTab = (ref: any) => {\n      if (ref?.value === props.value && activeTabRef.value !== ref.$el) {\n        activeTabRef.value = ref.$el;\n        scrollLeft.value = moveActiveTabIntoView(\n          {\n            activeTab: activeTabRef.value,\n            ...getRefs(),\n          },\n          scrollLeft.value,\n        );\n      }\n    };\n\n    const { setNavsWrap } = useDragSort(props);\n    onMounted(() => {\n      setNavsWrap(navsWrapRef.value);\n    });\n    // renders\n    const navs = computed(() => {\n      return props.panels.map((panel, index) => {\n        let label;\n        if (panel?.children?.label) {\n          label = panel.children.label();\n        } else if (typeof panel.label === 'function') {\n          label = panel.label(h);\n        } else {\n          label = panel.label || `选项卡${index + 1}`;\n        }\n\n        return (\n          <TTabNavItem\n            ref={setActiveTab}\n            draggable={props.dragSort}\n            key={panel.value}\n            index={index}\n            theme={props.theme}\n            size={props.size}\n            placement={props.placement}\n            label={label}\n            active={panel.value === props.value}\n            disabled={props.disabled || panel.disabled}\n            removable={panel.removable}\n            value={panel.value}\n            onClick={(e: MouseEvent) => tabClick(e, panel)}\n            onRemove={removeBtnClick}\n          />\n        );\n      });\n    });\n    const renderArrows = () => {\n      return [\n        <div\n          ref={leftOperationsRef}\n          class={[`${COMPONENT_NAME.value}__operations`, `${COMPONENT_NAME.value}__operations--left`]}\n        >\n          <Transition name=\"fade\" mode=\"out-in\" appear>\n            {canToLeft.value ? (\n              <div ref={toLeftBtnRef} class={leftIconClass.value} onClick={() => handleScroll('left')}>\n                <ChevronLeftIcon />\n              </div>\n            ) : null}\n          </Transition>\n        </div>,\n        <div\n          ref={rightOperationsRef}\n          class={[`${COMPONENT_NAME.value}__operations`, `${COMPONENT_NAME.value}__operations--right`]}\n        >\n          <Transition name=\"fade\" mode=\"out-in\" appear>\n            {canToRight.value ? (\n              <div ref={toRightBtnRef} class={rightIconClass.value} onClick={() => handleScroll('right')}>\n                <ChevronRightIcon></ChevronRightIcon>\n              </div>\n            ) : null}\n          </Transition>\n          {props.addable ? (\n            <div class={addIconClass.value} onClick={handleAddTab}>\n              <AddIcon></AddIcon>\n            </div>\n          ) : null}\n        </div>,\n      ];\n    };\n    const renderNavs = () => {\n      return (\n        <div class={navContainerClass.value}>\n          <div class={navScrollContainerClass.value}>\n            <div ref={navsWrapRef} class={navsWrapClass.value} style={wrapTransformStyle.value}>\n              {props.theme !== 'card' && (\n                <TTabNavBar placement={props.placement} value={props.value} navs={navs.value} />\n              )}\n              {navs.value}\n            </div>\n          </div>\n        </div>\n      );\n    };\n\n    return () => {\n      return (\n        <div ref={navsContainerRef} class={[`${COMPONENT_NAME.value}__nav`]} style={navsContainerStyle.value}>\n          {renderArrows()}\n          {renderNavs()}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["calculateCanToLeft","tabBase","calculateCanToRight","calcScrollLeft","scrollToLeft","scrollToRight","moveActiveTabIntoView","defineComponent","name","resizeObserver","props","theme","tabProps","panels","type","Array","value","placement","size","disabled","addable","onChange","onAdd","onRemove","dragSort","onDragSort","setup","COMPONENT_NAME","usePrefixClass","useGlobalIcon","ChevronLeftIcon","TdChevronLeftIcon","ChevronRightIcon","TdChevronRightIcon","AddIcon","TdAddIcon","classPrefix","useCommonClassName","SIZE","scrollLeft","ref","canToLeft","canToRight","navsContainerRef","navsWrapRef","leftOperationsRef","toLeftBtnRef","rightOperationsRef","toRightBtnRef","activeTabRef","getRefs","navsContainer","navsWrap","leftOperations","toLeftBtn","rightOperations","toRightBtn","wrapTransformStyle","computed","includes","toLowerCase","transform","navsContainerStyle","iconBaseClass","_defineProperty","medium","large","leftIconClass","rightIconClass","addIconClass","navContainerClass","navScrollContainerClass","navsWrapClass","totalAdjust","adjustArrowDisplay","adjustScrollLeft","watch","useResize","debounce","onMounted","handleScroll","direction","handleAddTab","e","tabClick","event","nav","removeBtnClick","index","setActiveTab","$el","activeTab","useDragSort","setNavsWrap","navs","map","panel","label","children","h","_createVNode","TTabNavItem","removable","renderArrows","Transition","renderNavs","TTabNavBar"],"mappings":"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"}