/**
 * tdesign v0.24.9
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var colorPicker_panel_slider = require('./slider.js');
var colorPicker_hooks = require('../hooks.js');
var colorPicker_panel_baseProps = require('./base-props.js');
require('../../_common/js/color-picker/constants.js');
require('../../_common/js/color-picker/draggable.js');
require('@babel/runtime/helpers/classCallCheck');
require('@babel/runtime/helpers/createClass');
require('../../hooks/useConfig.js');
require('../../config-provider/useConfig.js');
require('../../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../../_common/js/global-config/default-config.js');
require('../../_common/js/global-config/locale/zh_CN.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var HueSlider = vue.defineComponent({
  name: "HueSlider",
  inheritAttrs: false,
  props: _objectSpread({}, colorPicker_panel_baseProps["default"]),
  setup: function setup() {
    var baseClassName = colorPicker_hooks.useBaseClassName();
    return {
      baseClassName: baseClassName
    };
  },
  render: function render() {
    return vue.createVNode(colorPicker_panel_slider["default"], {
      "class": "".concat(this.baseClassName, "__hue"),
      "color": this.color,
      "value": this.color.hue,
      "onChange": this.onChange,
      "disabled": this.disabled,
      "type": "hue"
    }, null);
  }
});

exports["default"] = HueSlider;
//# sourceMappingURL=hue.js.map
