{"version":3,"file":"saturation.js","sources":["../../../src/color-picker/panel/saturation.tsx"],"sourcesContent":["import { computed, defineComponent, nextTick, onBeforeUnmount, onMounted, reactive, ref } from 'vue';\nimport { SATURATION_PANEL_DEFAULT_HEIGHT, SATURATION_PANEL_DEFAULT_WIDTH } from '../const';\nimport { Draggable, Coordinate } from '../utils';\nimport { useBaseClassName } from '../hooks';\nimport baseProps from './base-props';\n\nexport default defineComponent({\n  name: 'SaturationPanel',\n\n  props: {\n    ...baseProps,\n  },\n  setup(props) {\n    const baseClassName = useBaseClassName();\n    const refPanel = ref<HTMLElement>(null);\n    const refThumb = ref<HTMLElement>(null);\n    const dragInstance = ref<Draggable>(null);\n    const panelRect = reactive({\n      width: SATURATION_PANEL_DEFAULT_WIDTH,\n      height: SATURATION_PANEL_DEFAULT_HEIGHT,\n    });\n\n    const styles = computed(() => {\n      const { saturation, value } = props.color;\n      const { width, height } = panelRect;\n      const top = Math.round((1 - value) * height);\n      const left = Math.round(saturation * width);\n      return {\n        color: props.color.rgb,\n        left: `${left}px`,\n        top: `${top}px`,\n      };\n    });\n\n    const getSaturationAndValueByCoordinate = (coordinate: Coordinate) => {\n      const { width, height } = panelRect;\n      const { x, y } = coordinate;\n      const saturation = Math.round((x / width) * 100);\n      const value = Math.round((1 - y / height) * 100);\n      return {\n        saturation,\n        value,\n      };\n    };\n\n    const handleDrag = (coordinate: Coordinate, isEnded?: boolean) => {\n      if (props.disabled) {\n        return;\n      }\n      const { saturation, value } = getSaturationAndValueByCoordinate(coordinate);\n      props.onChange({\n        saturation: saturation / 100,\n        value: value / 100,\n        addUsedColor: isEnded,\n      });\n    };\n\n    const handleDragEnd = (coordinate: Coordinate) => {\n      if (props.disabled) {\n        return;\n      }\n      nextTick(() => {\n        handleDrag(coordinate, true);\n      });\n    };\n\n    const panelBackground = computed(() => {\n      return `hsl(${props.color.hue}, 100%, 50%)`;\n    });\n\n    onMounted(() => {\n      panelRect.width = refPanel.value.offsetWidth || SATURATION_PANEL_DEFAULT_WIDTH;\n      panelRect.height = refPanel.value.offsetHeight || SATURATION_PANEL_DEFAULT_HEIGHT;\n      dragInstance.value = new Draggable(refPanel.value, {\n        start() {\n          panelRect.width = refPanel.value.offsetWidth;\n          panelRect.height = refPanel.value.offsetHeight;\n        },\n        drag: (coordinate: Coordinate) => {\n          handleDrag(coordinate);\n        },\n        end: handleDragEnd,\n      });\n    });\n\n    onBeforeUnmount(() => {\n      dragInstance.value.destroy();\n    });\n\n    return {\n      baseClassName,\n      refThumb,\n      refPanel,\n      styles,\n      panelBackground,\n    };\n  },\n  render() {\n    const { baseClassName, styles, panelBackground } = this;\n    return (\n      <div\n        class={[`${baseClassName}__saturation`]}\n        ref=\"refPanel\"\n        style={{\n          background: panelBackground,\n        }}\n      >\n        <span class={[`${baseClassName}__thumb`]} role=\"slider\" tabindex={0} ref=\"refThumb\" style={styles}></span>\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","baseProps","setup","baseClassName","useBaseClassName","refPanel","ref","refThumb","dragInstance","panelRect","reactive","width","SATURATION_PANEL_DEFAULT_WIDTH","height","SATURATION_PANEL_DEFAULT_HEIGHT","styles","computed","color","saturation","value","top","Math","round","left","rgb","getSaturationAndValueByCoordinate","coordinate","x","y","handleDrag","isEnded","disabled","onChange","addUsedColor","handleDragEnd","nextTick","panelBackground","hue","onMounted","offsetWidth","offsetHeight","Draggable","start","drag","end","onBeforeUnmount","destroy","render","_createVNode","background"],"mappings":"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"}