{"version":3,"file":"header.js","sources":["../../../src/color-picker/panel/header.tsx"],"sourcesContent":["import { defineComponent, PropType, ref, watch } from 'vue';\nimport { CloseIcon as TdCloseIcon } from 'tdesign-icons-vue-next';\n\nimport props from '../props';\nimport { COLOR_MODES } from '../const';\nimport { RadioGroup as TRadioGroup, RadioButton as TRadioButton } from '../../radio';\nimport { TdColorModes } from '../interfaces';\nimport { useBaseClassName } from '../hooks';\nimport { useGlobalIcon } from '../../hooks/useGlobalIcon';\n\nexport default defineComponent({\n  name: 'PanelHeader',\n  props: {\n    ...props,\n    mode: {\n      type: String as PropType<TdColorModes>,\n      default: 'color',\n    },\n    togglePopup: {\n      type: Function,\n    },\n    onModeChange: {\n      type: Function,\n      default: () => {\n        return () => {};\n      },\n    },\n  },\n  setup(props) {\n    const baseClassName = useBaseClassName();\n    const { CloseIcon } = useGlobalIcon({ CloseIcon: TdCloseIcon });\n    const modeValue = ref(props.mode);\n    const handleModeChange = (v: string) => props.onModeChange(v);\n    watch(\n      () => props.mode,\n      (v) => (modeValue.value = v),\n    );\n    return {\n      baseClassName,\n      CloseIcon,\n      modeValue,\n      handleModeChange,\n    };\n  },\n  render() {\n    if (this.colorModes?.length === 1) {\n      return null;\n    }\n    const { baseClassName, CloseIcon } = this;\n    return (\n      <div class={`${baseClassName}__head`}>\n        <div class={`${baseClassName}__mode`}>\n          {this.colorModes?.length === 1 ? (\n            COLOR_MODES[this.colorModes[0]]\n          ) : (\n            <TRadioGroup\n              variant=\"default-filled\"\n              size=\"small\"\n              v-model={this.modeValue}\n              onChange={this.handleModeChange}\n            >\n              {Object.keys(COLOR_MODES).map((key) => (\n                <TRadioButton key={key} value={key}>\n                  {COLOR_MODES[key]}\n                </TRadioButton>\n              ))}\n            </TRadioGroup>\n          )}\n        </div>\n      </div>\n    );\n  },\n});\n"],"names":["_isVNode","defineComponent","name","props","mode","type","String","togglePopup","Function","onModeChange","setup","baseClassName","useBaseClassName","useGlobalIcon","CloseIcon","TdCloseIcon","modeValue","ref","handleModeChange","v","watch","value","render","colorModes","length","_createVNode","COLOR_MODES","TRadioGroup","Object","keys","map","key","TRadioButton"],"mappings":"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"}