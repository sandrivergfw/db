{"version":3,"file":"inputs.js","sources":["../../../../src/color-picker/panel/format/inputs.tsx"],"sourcesContent":["import { computed, defineComponent, PropType, reactive, watch } from 'vue';\nimport throttle from 'lodash/throttle';\nimport props from '../../props';\nimport { Color } from '../../utils';\nimport TInput from '../../../input';\nimport TInputNumber from '../../../input-number';\nimport { FORMAT_INPUT_CONFIG } from './config';\n\nexport default defineComponent({\n  name: 'FormatInputs',\n  inheritAttrs: false,\n  props: {\n    ...props,\n    color: {\n      type: Object as PropType<Color>,\n    },\n    onInputChange: {\n      type: Function,\n      default: () => {\n        return () => {};\n      },\n    },\n  },\n  setup(props) {\n    const inputConfigs = computed(() => {\n      const configs = [...FORMAT_INPUT_CONFIG[props.format]];\n      if (props.enableAlpha) {\n        configs.push({\n          type: 'inputNumber',\n          key: 'a',\n          min: 0,\n          max: 100,\n          format: (value: number) => `${value}%`,\n          flex: 1.15,\n        });\n      }\n      return configs;\n    });\n\n    const modelValue = reactive<any>({});\n    const lastModelValue = reactive<any>({});\n\n    /**\n     * 获取不同格式的输入输出值\n     * @param type 'encode' | 'decode'\n     * @returns\n     */\n    const getFormatColorMap = (type: 'encode' | 'decode') => {\n      const { color } = props;\n      if (type === 'encode') {\n        return {\n          HSV: color.getHsva(),\n          HSL: color.getHsla(),\n          RGB: color.getRgba(),\n          CMYK: color.getCmyk(),\n          CSS: {\n            css: color.css,\n          },\n          HEX: {\n            hex: color.hex,\n          },\n        };\n      }\n      // decode\n      return {\n        HSV: Color.object2color(modelValue, 'HSV'),\n        HSL: Color.object2color(modelValue, 'HSL'),\n        RGB: Color.object2color(modelValue, 'RGB'),\n        CMYK: Color.object2color(modelValue, 'CMYK'),\n        CSS: modelValue.css,\n        HEX: modelValue.hex,\n      };\n    };\n\n    // 更新modelValue\n    const updateModelValue = () => {\n      const { format, color } = props;\n      const values: any = getFormatColorMap('encode')[format];\n      values.a = Math.round(color.alpha * 100);\n      Object.keys(values).forEach((key) => {\n        modelValue[key] = values[key];\n        lastModelValue[key] = values[key];\n      });\n    };\n\n    updateModelValue();\n\n    const throttleUpdate = throttle(updateModelValue, 100);\n\n    watch(() => {\n      const { saturation, hue, value, alpha } = props.color;\n      return [saturation, hue, value, alpha, props.format];\n    }, throttleUpdate);\n\n    const handleChange = (key: string, v: number | string) => {\n      if (v === lastModelValue[key]) {\n        return;\n      }\n      const value = getFormatColorMap('decode')[props.format];\n      props.onInputChange(value, modelValue.a / 100, key, v);\n    };\n\n    return {\n      modelValue,\n      inputConfigs,\n      handleChange,\n    };\n  },\n  render() {\n    const inputProps = {\n      ...((this.inputProps as any) || {}),\n    };\n    return (\n      <div class=\"input-group\">\n        {this.inputConfigs.map((config) => {\n          return (\n            <div\n              class=\"input-group__item\"\n              key={config.key}\n              style={{\n                flex: config.flex || 1,\n              }}\n            >\n              {config.type === 'input' ? (\n                <TInput\n                  {...inputProps}\n                  align=\"center\"\n                  size=\"small\"\n                  disabled={this.disabled}\n                  v-model={this.modelValue[config.key]}\n                  maxlength={this.format === 'HEX' ? 9 : undefined}\n                  title={this.modelValue[config.key]}\n                  onBlur={(v: string) => this.handleChange(config.key, v)}\n                  onEnter={(v: string) => this.handleChange(config.key, v)}\n                />\n              ) : (\n                <TInputNumber\n                  {...inputProps}\n                  align=\"center\"\n                  size=\"small\"\n                  disabled={this.disabled}\n                  v-model={this.modelValue[config.key]}\n                  title={this.modelValue[config.key]}\n                  min={config.min}\n                  max={config.max}\n                  step={1}\n                  format={config.format}\n                  theme=\"normal\"\n                  onBlur={(v: number) => this.handleChange(config.key, v)}\n                  onEnter={(v: number) => this.handleChange(config.key, v)}\n                />\n              )}\n            </div>\n          );\n        })}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","inheritAttrs","props","color","type","Object","onInputChange","Function","setup","inputConfigs","computed","configs","FORMAT_INPUT_CONFIG","format","enableAlpha","push","key","min","max","value","flex","modelValue","reactive","lastModelValue","getFormatColorMap","HSV","getHsva","HSL","getHsla","RGB","getRgba","CMYK","getCmyk","CSS","css","HEX","hex","Color","object2color","updateModelValue","values","a","Math","round","alpha","keys","forEach","throttleUpdate","throttle","watch","saturation","hue","handleChange","v","render","inputProps","_createVNode","map","config","disabled","TInputNumber","_mergeProps"],"mappings":"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"}