import { PropType } from 'vue';
import { SelectOption } from './type';
declare const _default: import("vue").DefineComponent<{
    inputValue: {
        type: PropType<string>;
        default: any;
    };
    panelTopContent: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    panelBottomContent: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    empty: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    creatable: BooleanConstructor;
    loading: BooleanConstructor;
    loadingText: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    multiple: BooleanConstructor;
    filterable: BooleanConstructor;
    filter: {
        type: PropType<(filterWords: string, option: SelectOption) => boolean | Promise<boolean>>;
    };
    options: {
        type: PropType<SelectOption[]>;
        default: () => SelectOption[];
    };
    scroll: {
        type: PropType<import("../common").TScroll>;
    };
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    inputValue: {
        type: PropType<string>;
        default: any;
    };
    panelTopContent: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    panelBottomContent: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    empty: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    creatable: BooleanConstructor;
    loading: BooleanConstructor;
    loadingText: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    multiple: BooleanConstructor;
    filterable: BooleanConstructor;
    filter: {
        type: PropType<(filterWords: string, option: SelectOption) => boolean | Promise<boolean>>;
    };
    options: {
        type: PropType<SelectOption[]>;
        default: () => SelectOption[];
    };
    scroll: {
        type: PropType<import("../common").TScroll>;
    };
}>>, {
    loading: boolean;
    multiple: boolean;
    options: SelectOption[];
    inputValue: string;
    creatable: boolean;
    filterable: boolean;
}>;
export default _default;
