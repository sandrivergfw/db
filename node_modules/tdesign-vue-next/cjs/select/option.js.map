{"version":3,"file":"option.js","sources":["../../src/select/option.tsx"],"sourcesContent":["import { defineComponent, ref, computed, inject, onMounted, onBeforeUnmount } from 'vue';\n\nimport props from './option-props';\nimport Checkbox from '../checkbox/index';\n\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport useRipple from '../hooks/useRipple';\nimport { useContent } from '../hooks/tnode';\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { selectInjectKey, getNewMultipleValue } from './helper';\nimport { SelectValue } from './type';\n\nexport default defineComponent({\n  name: 'TOption',\n\n  props: {\n    ...props,\n    createAble: Boolean,\n    multiple: Boolean,\n    index: Number,\n    rowIndex: Number,\n    trs: Map,\n    scrollType: String,\n    isVirtual: Boolean,\n    bufferSize: Number,\n    checkAll: Boolean,\n  },\n  emits: ['row-mounted'],\n\n  setup(props, context) {\n    const selectProvider = inject(selectInjectKey);\n    const formDisabled = useFormDisabled();\n\n    const optionNode = ref(null);\n\n    const disabled = computed(\n      () =>\n        formDisabled.value ||\n        (props.multiple &&\n          selectProvider.value.max <= (selectProvider.value.selectValue as SelectValue[]).length &&\n          selectProvider.value.max !== 0),\n    );\n\n    const renderContent = useContent();\n\n    const selectName = usePrefixClass('select');\n    const { STATUS, SIZE } = useCommonClassName();\n    const liRef = ref<HTMLElement>();\n\n    const isHover = ref(false);\n\n    const isSelected = computed(() => {\n      if (selectProvider.value.isCheckAll && !props.disabled) return true;\n      return !props.multiple\n        ? selectProvider.value.selectValue === props.value\n        : (selectProvider.value.selectValue as SelectValue[]).includes(props.value);\n    });\n\n    const isIndeterminate = computed(() => {\n      if (!props.checkAll) return false;\n      return selectProvider.value.indeterminate;\n    });\n\n    const classes = computed(() => [\n      `${selectName.value}-option`,\n      [SIZE.value[selectProvider.value.size]],\n      {\n        [STATUS.value.disabled]: disabled.value,\n        [STATUS.value.selected]: isSelected.value,\n        [`${selectName.value}-option__hover`]:\n          (isHover.value || selectProvider.value.hoverIndex === props.index) && !disabled.value && !isSelected.value,\n      },\n    ]);\n\n    const labelText = computed(() => props.label || props.value);\n\n    const handleClick = (e: MouseEvent | KeyboardEvent) => {\n      if (props.multiple || props.disabled) return;\n      e.stopPropagation();\n\n      if (props.createAble) {\n        selectProvider.value.handleCreate?.(props.value);\n        if (selectProvider.value.multiple) {\n          (selectProvider.value.selectValue as SelectValue[]).push(props.value);\n          selectProvider.value.handleValueChange(selectProvider.value.selectValue, {\n            selectedOptions: selectProvider.value.getSelectedOptions(),\n            trigger: 'check',\n            e,\n          });\n          return;\n        }\n      }\n\n      selectProvider.value.handleValueChange(props.value, {\n        selectedOptions: selectProvider.value.getSelectedOptions(props.value),\n        trigger: 'check',\n        e,\n      });\n      selectProvider.value.handlePopupVisibleChange(false, { e });\n    };\n\n    const handleCheckboxClick = (val: boolean, context: { e: MouseEvent | KeyboardEvent }) => {\n      if (props.checkAll) {\n        selectProvider.value.onCheckAllChange(val);\n        return;\n      }\n      const newValue = getNewMultipleValue(selectProvider.value.selectValue as SelectValue[], props.value);\n      selectProvider.value.handleValueChange(newValue.value, {\n        selectedOptions: selectProvider.value.getSelectedOptions(newValue.value),\n        trigger: val ? 'check' : 'uncheck',\n        e: context.e,\n      });\n      if (!selectProvider.value.reserveKeyword) {\n        selectProvider.value.handlerInputChange('');\n      }\n    };\n\n    // 处理虚拟滚动节点挂载\n    onMounted(() => {\n      const { trs, rowIndex, isVirtual } = props;\n      if (isVirtual) {\n        trs.set(rowIndex, liRef.value);\n        context.emit('row-mounted');\n      }\n    });\n\n    // 处理虚拟滚动节点移除\n    onBeforeUnmount(() => {\n      if (props.isVirtual) {\n        const { trs, rowIndex } = props;\n        trs.delete(rowIndex);\n      }\n    });\n\n    useRipple(liRef);\n\n    return () => {\n      const optionChild = renderContent('default', 'content') || labelText.value;\n\n      return (\n        <li\n          ref={liRef}\n          class={classes.value}\n          title={`${labelText.value}`}\n          onMouseenter={() => (isHover.value = true)}\n          onMouseleave={() => (isHover.value = false)}\n          onClick={handleClick}\n        >\n          {selectProvider && props.multiple ? (\n            <Checkbox\n              checked={isSelected.value}\n              disabled={disabled.value && !isSelected.value}\n              onChange={handleCheckboxClick}\n              indeterminate={isIndeterminate.value}\n            >\n              {optionChild}\n            </Checkbox>\n          ) : (\n            <span>{optionChild}</span>\n          )}\n        </li>\n      );\n    };\n  },\n});\n"],"names":["_isVNode","defineComponent","name","props","createAble","Boolean","multiple","index","Number","rowIndex","trs","Map","scrollType","String","isVirtual","bufferSize","checkAll","emits","setup","context","selectProvider","inject","selectInjectKey","formDisabled","useFormDisabled","ref","disabled","computed","value","max","selectValue","length","renderContent","useContent","selectName","usePrefixClass","useCommonClassName","STATUS","SIZE","liRef","isHover","isSelected","isCheckAll","includes","isIndeterminate","indeterminate","classes","size","_defineProperty","selected","hoverIndex","labelText","label","handleClick","e","stopPropagation","handleCreate","push","handleValueChange","selectedOptions","getSelectedOptions","trigger","handlePopupVisibleChange","handleCheckboxClick","val","onCheckAllChange","newValue","getNewMultipleValue","reserveKeyword","handlerInputChange","onMounted","set","emit","onBeforeUnmount","useRipple","optionChild","_createVNode"],"mappings":"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"}