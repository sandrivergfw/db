{"version":3,"file":"useSelectOptions.js","sources":["../../../src/select/hooks/useSelectOptions.ts"],"sourcesContent":["import { computed, Slots, VNode, Ref, ref } from 'vue';\nimport isArray from 'lodash/isArray';\nimport get from 'lodash/get';\n\nimport { useChildComponentSlots } from '../../hooks/slot';\nimport { TdSelectProps, TdOptionProps, SelectOptionGroup, SelectKeysType, SelectValue, SelectOption } from '../type';\n\ntype UniOption = (TdOptionProps | SelectOptionGroup) & {\n  index?: number;\n  slots?: Slots;\n};\n\nexport const useSelectOptions = (props: TdSelectProps, keys: Ref<SelectKeysType>) => {\n  const getChildComponentSlots = useChildComponentSlots();\n  const optionsCache = ref<SelectOption[]>([]);\n\n  const options = computed(() => {\n    let dynamicIndex = 0;\n\n    // 统一处理 keys,处理通用数据\n    const innerOptions: UniOption[] = props.options.map((option) => {\n      const getFormatOption = (option: TdOptionProps) => {\n        const { value, label } = keys.value;\n        const res = {\n          ...option,\n          index: dynamicIndex,\n          label: get(option, label),\n          value: get(option, value),\n        };\n        dynamicIndex++;\n        return res;\n      };\n      if ((option as SelectOptionGroup).group && (option as SelectOptionGroup).children) {\n        return {\n          ...option,\n          children: (option as SelectOptionGroup).children.map((child) => getFormatOption(child)),\n        };\n      }\n      return getFormatOption(option);\n    });\n\n    // 处理 slots\n    const optionsSlots = getChildComponentSlots('Option');\n    const groupSlots = getChildComponentSlots('OptionGroup');\n\n    if (isArray(groupSlots)) {\n      for (const group of groupSlots) {\n        const groupOption = {\n          group: group.props?.label,\n          ...group.props,\n          children: [] as TdOptionProps[],\n        };\n        const res = (group.children as Slots).default();\n        if (!(isArray(res) && !!res[0]?.children)) continue;\n        for (const child of res?.[0]?.children as VNode[]) {\n          groupOption.children.push({\n            ...child.props,\n            slots: child.children,\n            index: dynamicIndex,\n          } as TdOptionProps);\n          dynamicIndex++;\n        }\n\n        innerOptions.push(groupOption);\n      }\n    }\n    if (isArray(optionsSlots)) {\n      for (const child of optionsSlots) {\n        innerOptions.push({\n          ...child.props,\n          slots: child.children,\n          index: dynamicIndex,\n        } as TdOptionProps);\n        dynamicIndex++;\n      }\n    }\n\n    return innerOptions;\n  });\n\n  const optionsList = computed(() => {\n    const res: TdOptionProps[] = [];\n    const getOptionsList = (options: TdOptionProps[]) => {\n      for (const option of options) {\n        if ((option as SelectOptionGroup).group) {\n          getOptionsList((option as SelectOptionGroup).children);\n        } else {\n          res.push(option);\n        }\n      }\n    };\n    getOptionsList(options.value);\n    return res;\n  });\n\n  const optionsMap = computed(() => {\n    const res = new Map<SelectValue, TdOptionProps>();\n    optionsList.value.concat(optionsCache.value).forEach((option: TdOptionProps) => {\n      res.set(option.value, option);\n    });\n    return res;\n  });\n\n  return {\n    options,\n    optionsMap,\n    optionsList,\n    optionsCache,\n  };\n};\n"],"names":["useSelectOptions","props","keys","getChildComponentSlots","useChildComponentSlots","optionsCache","ref","options","computed","dynamicIndex","innerOptions","map","option","getFormatOption","value","label","res","index","get","group","children","child","optionsSlots","groupSlots","isArray","groupOption","push","slots","optionsList","getOptionsList","optionsMap","Map","concat","forEach","set"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAYa,IAAAA,gBAAA,GAAmB,SAAnBA,gBAAA,CAAoBC,KAAA,EAAsBC,IAA8B,EAAA;EACnF,IAAMC,yBAAyBC,iCAAuB,EAAA,CAAA;AAChD,EAAA,IAAAC,YAAA,GAAeC,OAAoB,CAAA,EAAE,CAAA,CAAA;AAErC,EAAA,IAAAC,OAAA,GAAUC,aAAS,YAAM;IAC7B,IAAIC,YAAe,GAAA,CAAA,CAAA;IAGnB,IAAMC,YAA4B,GAAAT,KAAA,CAAMM,OAAQ,CAAAI,GAAA,CAAI,UAACC,MAAW,EAAA;AACxD,MAAA,IAAAC,eAAA,GAAkB,SAAlBA,eAAA,CAAmBD,OAA0B,EAAA;QACjD,IAAyBV,WAAAA,GAAAA,IAAK,CAAAY,KAAA;AAAtBA,UAAAA,KAAA,eAAAA,KAAA;AAAOC,UAAAA,KAAM,eAANA,KAAM,CAAA;QACrB,IAAMC,GAAM,mCACPJ,OAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AACHK,UAAAA,KAAO,EAAAR,YAAA;AACPM,UAAAA,KAAA,EAAOG,uBAAIN,CAAAA,OAAAA,EAAQG,KAAK,CAAA;AACxBD,UAAAA,KAAA,EAAOI,uBAAIN,CAAAA,OAAAA,EAAQE,KAAK,CAAA;SAC1B,CAAA,CAAA;AACAL,QAAAA,YAAA,EAAA,CAAA;AACO,QAAA,OAAAO,GAAA,CAAA;OACT,CAAA;AACK,MAAA,IAAAJ,MAAA,CAA6BO,KAAU,IAAAP,MAAA,CAA6BQ,QAAU,EAAA;AAC1E,QAAA,OAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EACFR,MAAA,CAAA,EAAA,EAAA,EAAA;UACHQ,QAAA,EAAWR,OAA6BQ,QAAS,CAAAT,GAAA,CAAI,UAACU,KAAU,EAAA;YAAA,OAAAR,eAAA,CAAgBQ,KAAK,CAAC,CAAA;AAAA,WAAA,CAAA;AAAA,SAAA,CAAA,CAAA;AAE1F,OAAA;MACA,OAAOR,gBAAgBD,MAAM,CAAA,CAAA;AAC/B,KAAC,CAAA,CAAA;AAGK,IAAA,IAAAU,YAAA,GAAenB,uBAAuB,QAAQ,CAAA,CAAA;AAC9C,IAAA,IAAAoB,UAAA,GAAapB,uBAAuB,aAAa,CAAA,CAAA;AAEnD,IAAA,IAAAqB,2BAAA,CAAQD,UAAU,CAAG,EAAA;AAAA,MAAA,IAAA,SAAA,GAAA,0BAAA,CACHA,UAAY,CAAA;AAAA,QAAA,KAAA,CAAA;AAAA,MAAA,IAAA;QAAhC,KAAgC,SAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,KAAA,GAAA,SAAA,CAAA,CAAA,EAAA,EAAA,IAAA,GAAA;AAAA,UAAA,IAAA,YAAA,EAAA,KAAA,EAAA,MAAA,CAAA;AAAA,UAAA,IAArBJ;AACT,UAAA,IAAMM,WAAc,GAAA,aAAA,CAAA,aAAA,CAAA;AAClBN,YAAAA,KAAA,EAAOA,CAAAA,YAAAA,GAAAA,MAAMlB,KAAO,iDAAb,YAAac,CAAAA,KAAAA;WACjBI,EAAAA,KAAM,CAAAlB,KAAA,CAAA,EAAA,EAAA,EAAA;AACTmB,YAAAA,UAAU,EAAA;WACZ,CAAA,CAAA;AACM,UAAA,IAAAJ,GAAA,GAAOG,KAAM,CAAAC,QAAA,WAA2B,EAAA,CAAA;AAC9C,UAAA,IAAI,EAAEI,2BAAQ,CAAAR,GAAG,KAAK,CAAC,EAAA,CAAA,KAAA,GAACA,IAAI,CAAI,CAAA,MAAA,IAAA,IAAA,KAAA,KAAA,KAAA,CAAA,IAAR,KAAQI,CAAAA,QAAA,EAAA,EAAW,SAAA;UAAA,IACvBJ,UAAAA,GAAAA,0BAAAA,CAAAA,GAAM,KAANA,IAAAA,IAAAA,GAAM,KAANA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAAA,MAAAA,GAAAA,GAAM,CAAA,CAAA,CAAA,MAAN,IAAA,IAAA,MAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,MAAA,CAAUI,QAAqB,CAAA;AAAA,YAAA,MAAA,CAAA;AAAA,UAAA,IAAA;YAAxC,KAAwC,UAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,MAAA,GAAA,UAAA,CAAA,CAAA,EAAA,EAAA,IAAA,GAAA;AAAA,cAAA,IAAxCC,KAAA,GAAA,MAAA,CAAA,KAAA,CAAA;AACTI,cAAAA,WAAA,CAAYL,SAASM,IAAK,CACrBL,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EAAAA,KAAM,CAAApB,KAAA,CAAA,EAAA,EAAA,EAAA;gBACT0B,OAAON,KAAM,CAAAD,QAAA;AACbH,gBAAAA,KAAO,EAAAR,YAAAA;eACS,CAAA,CAAA,CAAA;AAClBA,cAAAA,YAAA,EAAA,CAAA;AACF,aAAA;AAAA,WAAA,CAAA,OAAA,GAAA,EAAA;AAAA,YAAA,UAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA;AAAA,WAAA,SAAA;AAAA,YAAA,UAAA,CAAA,CAAA,EAAA,CAAA;AAAA,WAAA;AAEAC,UAAAA,YAAA,CAAagB,KAAKD,WAAW,CAAA,CAAA;AAC/B,SAAA;AAAA,OAAA,CAAA,OAAA,GAAA,EAAA;AAAA,QAAA,SAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA;AAAA,OAAA,SAAA;AAAA,QAAA,SAAA,CAAA,CAAA,EAAA,CAAA;AAAA,OAAA;AACF,KAAA;AACI,IAAA,IAAAD,2BAAA,CAAQF,YAAY,CAAG,EAAA;AAAA,MAAA,IAAA,UAAA,GAAA,0BAAA,CACLA,YAAc,CAAA;AAAA,QAAA,MAAA,CAAA;AAAA,MAAA,IAAA;QAAlC,KAAkC,UAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,MAAA,GAAA,UAAA,CAAA,CAAA,EAAA,EAAA,IAAA,GAAA;AAAA,UAAA,IAAvBD;AACTX,UAAAA,YAAA,CAAagB,IAAK,CACbL,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EAAAA,MAAM,CAAApB,KAAA,CAAA,EAAA,EAAA,EAAA;YACT0B,OAAON,MAAM,CAAAD,QAAA;AACbH,YAAAA,KAAO,EAAAR,YAAAA;WACS,CAAA,CAAA,CAAA;AAClBA,UAAAA,YAAA,EAAA,CAAA;AACF,SAAA;AAAA,OAAA,CAAA,OAAA,GAAA,EAAA;AAAA,QAAA,UAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA;AAAA,OAAA,SAAA;AAAA,QAAA,UAAA,CAAA,CAAA,EAAA,CAAA;AAAA,OAAA;AACF,KAAA;AAEO,IAAA,OAAAC,YAAA,CAAA;AACT,GAAC,CAAA,CAAA;AAEK,EAAA,IAAAkB,WAAA,GAAcpB,aAAS,YAAM;IACjC,IAAMQ,MAAuB,EAAC,CAAA;AACxB,IAAA,IAAAa,cAAA,GAAiB,SAAjBA,cAAA,CAAkBtB,QAA6B,EAAA;AAAA,MAAA,IAAA,UAAA,GAAA,0BAAA,CAC9BA,QAAS,CAAA;AAAA,QAAA,MAAA,CAAA;AAAA,MAAA,IAAA;QAA9B,KAA8B,UAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,MAAA,GAAA,UAAA,CAAA,CAAA,EAAA,EAAA,IAAA,GAAA;AAAA,UAAA,IAAnBK;UACT,IAAKA,OAA6BO,KAAO,EAAA;AACvCU,YAAAA,cAAA,CAAgBjB,OAA6BQ,QAAQ,CAAA,CAAA;AACvD,WAAO,MAAA;AACLJ,YAAAA,GAAA,CAAIU,KAAKd,MAAM,CAAA,CAAA;AACjB,WAAA;AACF,SAAA;AAAA,OAAA,CAAA,OAAA,GAAA,EAAA;AAAA,QAAA,UAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA;AAAA,OAAA,SAAA;AAAA,QAAA,UAAA,CAAA,CAAA,EAAA,CAAA;AAAA,OAAA;KACF,CAAA;AACAiB,IAAAA,cAAA,CAAetB,QAAQO,KAAK,CAAA,CAAA;AACrB,IAAA,OAAAE,GAAA,CAAA;AACT,GAAC,CAAA,CAAA;AAEK,EAAA,IAAAc,UAAA,GAAatB,aAAS,YAAM;AAC1B,IAAA,IAAAQ,GAAA,sBAAUe,GAAgC,EAAA,CAAA;AAChDH,IAAAA,WAAA,CAAYd,MAAMkB,MAAO,CAAA3B,YAAA,CAAaS,KAAK,CAAE,CAAAmB,OAAA,CAAQ,UAACrB,MAA0B,EAAA;MAC1EI,GAAA,CAAAkB,GAAA,CAAItB,MAAO,CAAAE,KAAA,EAAOF,MAAM,CAAA,CAAA;AAC9B,KAAC,CAAA,CAAA;AACM,IAAA,OAAAI,GAAA,CAAA;AACT,GAAC,CAAA,CAAA;EAEM,OAAA;AACLT,IAAAA,OAAA,EAAAA,OAAA;AACAuB,IAAAA,UAAA,EAAAA,UAAA;AACAF,IAAAA,WAAA,EAAAA,WAAA;AACAvB,IAAAA,YAAA,EAAAA,YAAAA;GACF,CAAA;AACF;;;;"}