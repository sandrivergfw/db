{"version":3,"file":"avatar.js","sources":["../../src/avatar/avatar.tsx"],"sourcesContent":["import { computed, defineComponent, inject, nextTick, onMounted, onUpdated, ref } from 'vue';\nimport props from './props';\nimport { TdAvatarProps } from './type';\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { useContent, useTNodeJSX } from '../hooks/tnode';\n\nexport default defineComponent({\n  name: 'TAvatar',\n  props,\n  setup(props: TdAvatarProps) {\n    const COMPONENT_NAME = usePrefixClass('avatar');\n    const renderContent = useContent();\n    const renderTNodeJSX = useTNodeJSX();\n    const { SIZE } = useCommonClassName();\n    const avatarGroup = inject('avatarGroup', undefined);\n    const avatar = ref<HTMLElement | null>(null);\n    const avatarChild = ref<HTMLElement | null>(null);\n    const isImgExist = ref(true);\n    // 内容区在左右两边的间距保持为4\n    const gap = ref(4);\n    const sizeValue = ref('');\n    const scale = ref('');\n\n    const isCustomSize = computed(() => sizeValue.value && !SIZE.value[sizeValue.value]);\n\n    const customAvatarSize = computed(() => {\n      return isCustomSize.value\n        ? {\n            width: sizeValue.value,\n            height: sizeValue.value,\n            'font-size': `${Number.parseInt(sizeValue.value, 10) / 2}px`,\n          }\n        : {};\n    });\n    const customImageSize = computed(() => {\n      return isCustomSize.value\n        ? {\n            height: sizeValue.value,\n            width: sizeValue.value,\n          }\n        : {};\n    });\n    const customCharacterSize = computed(() => {\n      return {\n        transform: scale.value,\n      };\n    });\n\n    const handleImgLoadError = () => {\n      const { hideOnLoadFailed } = props;\n      isImgExist.value = !hideOnLoadFailed;\n      props.onError?.();\n    };\n    // 设置字符头像大小自适应\n    const setScaleParams = () => {\n      const $avatar = avatar.value as HTMLElement;\n      const $avatarChild = avatarChild.value as HTMLElement;\n      const avatarWidth = $avatar?.offsetWidth;\n      const avatarChildWidth = $avatarChild?.offsetWidth;\n      if (gap.value * 2 < avatarWidth) {\n        scale.value =\n          avatarChildWidth > avatarWidth - gap.value * 2\n            ? `scale(${(avatarWidth - gap.value * 2) / avatarChildWidth})`\n            : 'scale(1)';\n      }\n    };\n\n    onMounted(() => {\n      sizeValue.value = props.size || avatarGroup?.size;\n      nextTick(() => {\n        setScaleParams();\n      });\n    });\n\n    onUpdated(() => {\n      nextTick(() => {\n        setScaleParams();\n      });\n    });\n\n    return () => {\n      let content = renderContent('default', 'content');\n      const icon = renderTNodeJSX('icon');\n      const isIconOnly = icon && !content;\n      const { shape, image, alt } = props;\n      const avatarClass = [\n        `${COMPONENT_NAME.value}`,\n        SIZE.value[sizeValue.value],\n        {\n          [`${COMPONENT_NAME.value}--circle`]: shape === 'circle',\n          [`${COMPONENT_NAME.value}--round`]: shape === 'round',\n          [`${COMPONENT_NAME.value}__icon`]: !!isIconOnly,\n        },\n      ];\n      content = (\n        <span ref={avatarChild} style={{ ...customCharacterSize.value }}>\n          {content}\n        </span>\n      );\n      if (icon) {\n        content = [icon, !isIconOnly ? content : ''];\n      }\n\n      if (image && isImgExist.value) {\n        content = <img style={{ ...customImageSize.value }} src={image} alt={alt} onError={handleImgLoadError}></img>;\n      }\n      return (\n        <div ref={avatar} class={avatarClass} style={{ ...customAvatarSize.value }}>\n          {content}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","setup","COMPONENT_NAME","usePrefixClass","renderContent","useContent","renderTNodeJSX","useTNodeJSX","useCommonClassName","SIZE","avatarGroup","inject","avatar","ref","avatarChild","isImgExist","gap","sizeValue","scale","isCustomSize","computed","value","customAvatarSize","width","height","Number","parseInt","customImageSize","customCharacterSize","transform","handleImgLoadError","hideOnLoadFailed","onError","setScaleParams","$avatar","$avatarChild","avatarWidth","offsetWidth","avatarChildWidth","onMounted","size","nextTick","onUpdated","content","icon","isIconOnly","shape","image","alt","avatarClass","_defineProperty","_createVNode"],"mappings":"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"}