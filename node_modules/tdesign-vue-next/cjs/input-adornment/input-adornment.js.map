{"version":3,"file":"input-adornment.js","sources":["../../src/input-adornment/input-adornment.tsx"],"sourcesContent":["import { defineComponent, h, VNodeChild } from 'vue';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport props from './props';\n\nexport default defineComponent({\n  name: 'TInputAdornment',\n  inheritAttrs: false,\n  props,\n  setup(props, { slots }) {\n    const COMPONENT_NAME = usePrefixClass('input-adornment');\n    const renderTNodeJSX = useTNodeJSX();\n\n    const renderAddon = (h: any, type: string, addon: string | Function | undefined): VNodeChild => {\n      let addonNode: VNodeChild;\n      if (slots[type]) {\n        addonNode = slots[type](null);\n      } else if (typeof addon === 'string') {\n        addonNode = addon;\n      } else if (typeof addon === 'function') {\n        addonNode = addon(h);\n      } else {\n        addonNode = null;\n      }\n      return addonNode ? <span class={`${COMPONENT_NAME.value}__${type}`}>{addonNode}</span> : addonNode;\n    };\n    return () => {\n      const prepend = renderAddon(h, 'prepend', props.prepend);\n      const append = renderAddon(h, 'append', props.append);\n      const defaultSlot: VNodeChild[] = renderTNodeJSX('default') || [null];\n      const className = [\n        COMPONENT_NAME.value,\n        {\n          [`${COMPONENT_NAME.value}--prepend`]: prepend,\n          [`${COMPONENT_NAME.value}--append`]: append,\n        },\n      ];\n\n      if (!prepend && !append) {\n        return defaultSlot[0];\n      }\n\n      return (\n        <div class={className}>\n          {prepend}\n          {defaultSlot[0]}\n          {append}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","inheritAttrs","props","setup","slots","COMPONENT_NAME","usePrefixClass","renderTNodeJSX","useTNodeJSX","renderAddon","h","type","addon","addonNode","_createVNode","value","prepend","append","defaultSlot","className"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,sBAAeA,mBAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,iBAAA;AACNC,EAAAA,YAAc,EAAA,KAAA;AACdC,EAAAA,KAAA,EAAAA,+BAAA;EACAC,KAAMD,EAAAA,SAAAA,KAAAA,CAAAA,MAAAA,EAAkB,IAAA,EAAA;IAAA,IAATE,KAAA,QAAAA,KAAA,CAAA;AACP,IAAA,IAAAC,cAAA,GAAiBC,+BAAe,iBAAiB,CAAA,CAAA;IACvD,IAAMC,iBAAiBC,uBAAY,EAAA,CAAA;IAEnC,IAAMC,WAAc,GAAA,SAAdA,WAAc,CAACC,EAAQ,EAAAC,IAAA,EAAcC,KAAqD,EAAA;AAC1F,MAAA,IAAAC,SAAA,CAAA;AACJ,MAAA,IAAIT,MAAMO,IAAO,CAAA,EAAA;AACHE,QAAAA,SAAA,GAAAT,KAAA,CAAMO,MAAM,IAAI,CAAA,CAAA;AAC9B,OAAA,MAAA,IAAW,OAAOC,KAAA,KAAU,QAAU,EAAA;AACxBC,QAAAA,SAAA,GAAAD,KAAA,CAAA;AACd,OAAA,MAAA,IAAW,OAAOA,KAAA,KAAU,UAAY,EAAA;AACtCC,QAAAA,SAAA,GAAYD,MAAMF,EAAC,CAAA,CAAA;AACrB,OAAO,MAAA;AACOG,QAAAA,SAAA,GAAA,IAAA,CAAA;AACd,OAAA;AACO,MAAA,OAAAA,SAAA,GAAAC,eAAA,CAAA,MAAA,EAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAA,MAAA,CAA4BT,eAAeU,KAAU,EAAA,IAAA,CAAA,CAAA,MAAA,CAAAJ,IAAA,CAAA;OAASE,EAAAA,CAAAA,SAAU,KAAUA,SAAA,CAAA;KAC3F,CAAA;AACA,IAAA,OAAO,YAAM;AAAA,MAAA,IAAA,KAAA,CAAA;MACX,IAAMG,OAAU,GAAAP,WAAA,CAAYC,KAAG,EAAA,SAAA,EAAWR,OAAMc,OAAO,CAAA,CAAA;MACvD,IAAMC,MAAS,GAAAR,WAAA,CAAYC,KAAG,EAAA,QAAA,EAAUR,OAAMe,MAAM,CAAA,CAAA;MACpD,IAAMC,WAA4B,GAAAX,cAAA,CAAe,SAAS,CAAA,IAAK,CAAC,IAAI,CAAA,CAAA;AACpE,MAAA,IAAMY,SAAY,GAAA,CAChBd,cAAe,CAAAU,KAAA,oEAETV,cAAA,CAAeU,KAAmB,EAAA,WAAA,CAAA,EAAAC,OAAA,CAClCX,EAAAA,mCAAAA,CAAAA,KAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,cAAA,CAAeU,KAAkB,EAAA,UAAA,CAAA,EAAAE,MAAA,CAEzC,EAAA,KAAA,EAAA,CAAA;AAEI,MAAA,IAAA,CAACD,OAAW,IAAA,CAACC,MAAQ,EAAA;QACvB,OAAOC,WAAY,CAAA,CAAA,CAAA,CAAA;AACrB,OAAA;AAGE,MAAA,OAAAJ,eAAA,CAAA,KAAA,EAAA;QAAA,OAAYK,EAAAA,SAAAA;AAAA,OAAA,EAAA,CACTH,OAAA,EACAE,WAAY,CAAA,CAAA,CAAA,EACZD,MAAA,CAAA,CAAA,CAAA;KAGP,CAAA;AACF,GAAA;AACF,CAAC,CAAA;;;;"}