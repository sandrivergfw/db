{"version":3,"file":"config-provider.js","sources":["../../src/config-provider/config-provider.tsx"],"sourcesContent":["import { defineComponent, PropType, provide, computed } from 'vue';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { GlobalConfigProvider } from './type';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { configProviderInjectKey, defaultGlobalConfig, mergeWith } from './context';\n\nexport default defineComponent({\n  name: 'TConfigProvider',\n\n  props: {\n    globalConfig: Object as PropType<GlobalConfigProvider>,\n  },\n\n  setup(props) {\n    const defaultData = cloneDeep(defaultGlobalConfig);\n    provide(\n      configProviderInjectKey,\n      computed(() => mergeWith(defaultData, props.globalConfig)),\n    );\n\n    const renderTNodeJSX = useTNodeJSX();\n\n    return () => <div>{renderTNodeJSX('default')}</div>;\n  },\n});\n"],"names":["defineComponent","name","props","globalConfig","Object","setup","defaultData","cloneDeep","defaultGlobalConfig","provide","configProviderInjectKey","computed","mergeWith","renderTNodeJSX","useTNodeJSX"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,sBAAeA,mBAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,iBAAA;AAENC,EAAAA,KAAO,EAAA;AACLC,IAAAA,YAAc,EAAAC,MAAAA;GAChB;EAEAC,sBAAMH,KAAO,EAAA;AACL,IAAA,IAAAI,WAAA,GAAcC,8BAAUC,0CAAmB,CAAA,CAAA;AACjDC,IAAAA,WAAA,CACEC,8CAAA,EACAC,aAAS,YAAA;AAAA,MAAA,OAAMC,gCAAA,CAAUN,WAAa,EAAAJ,KAAA,CAAMC,YAAY,CAAC,CAAA;AAAA,KAAA,CAAA,CAC3D,CAAA;IAEA,IAAMU,iBAAiBC,uBAAY,EAAA,CAAA;IAEnC,OAAO,YAAA;MAAA,OAAYD,eAAAA,CAAAA,KAAAA,EAAAA,IAAAA,EAAAA,CAAAA,cAAe,CAAA,SAAS;KAA7B,CAAA;AAChB,GAAA;AACF,CAAC,CAAA;;;;"}