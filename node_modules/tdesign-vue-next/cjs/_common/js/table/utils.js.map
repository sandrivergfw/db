{"version":3,"file":"utils.js","sources":["../../../../src/_common/js/table/utils.ts"],"sourcesContent":["import isFunction from 'lodash/isFunction';\nimport isNumber from 'lodash/isNumber';\nimport { BaseTableCol } from './types';\n\nexport function isRowSelectedDisabled(\n  selectColumn: { [key: string]: any },\n  row: Record<string, any>,\n  rowIndex: number,\n): boolean {\n  let disabled = isFunction(selectColumn.disabled) ? selectColumn.disabled({ row, rowIndex }) : selectColumn.disabled;\n  if (selectColumn.checkProps) {\n    if (isFunction(selectColumn.checkProps)) {\n      disabled = disabled || selectColumn.checkProps({ row, rowIndex }).disabled;\n    } else if (selectColumn.checkProps === 'object') {\n      disabled = disabled || selectColumn.checkProps.disabled;\n    }\n  }\n  return !!disabled;\n}\n\n// 获取列属性\nexport function getColWidthAttr<T extends BaseTableCol<T>>(col: T, attrKey: 'width' | 'minWidth') {\n  const attr = col[attrKey];\n  return isNumber(attr) ? attr : parseFloat(attr);\n}\n"],"names":["isRowSelectedDisabled","selectColumn","row","rowIndex","disabled","isFunction","checkProps","getColWidthAttr","col","attrKey","attr","isNumber","parseFloat"],"mappings":";;;;;;;;;;;;;;;;;;AAIgB,SAAAA,qBAAA,CACdC,YACA,EAAAC,GAAA,EACAC,QACS,EAAA;AACT,EAAA,IAAIC,QAAW,GAAAC,8BAAA,CAAWJ,YAAa,CAAAG,QAAQ,CAAI,GAAAH,YAAA,CAAaG,QAAS,CAAA;AAAEF,IAAAA,GAAK,EAALA,GAAK;AAAAC,IAAAA,QAAA,EAAAA,QAAAA;AAAS,GAAC,CAAA,GAAIF,YAAa,CAAAG,QAAA,CAAA;EAC3G,IAAIH,aAAaK,UAAY,EAAA;AACvB,IAAA,IAAAD,8BAAA,CAAWJ,YAAa,CAAAK,UAAU,CAAG,EAAA;AACvCF,MAAAA,QAAA,GAAWA,YAAYH,YAAa,CAAAK,UAAA,CAAW;AAAEJ,QAAAA,GAAK,EAALA,GAAK;AAAAC,QAAAA,QAAA,EAAAA,QAAAA;OAAU,CAAE,CAAAC,QAAA,CAAA;AACpE,KAAA,MAAA,IAAWH,YAAa,CAAAK,UAAA,KAAe,QAAU,EAAA;AACpCF,MAAAA,QAAA,GAAAA,QAAA,IAAYH,aAAaK,UAAW,CAAAF,QAAA,CAAA;AACjD,KAAA;AACF,GAAA;EACA,OAAO,CAAC,CAACA,QAAA,CAAA;AACX,CAAA;AAGgB,SAAAG,eAAA,CAA2CC,KAAQC,OAA+B,EAAA;AAChG,EAAA,IAAMC,OAAOF,GAAI,CAAAC,OAAA,CAAA,CAAA;EACjB,OAAOE,4BAAS,CAAAD,IAAI,CAAI,GAAAA,IAAA,GAAOE,WAAWF,IAAI,CAAA,CAAA;AAChD;;;;;"}