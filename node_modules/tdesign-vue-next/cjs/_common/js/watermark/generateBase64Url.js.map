{"version":3,"file":"generateBase64Url.js","sources":["../../../../src/_common/js/watermark/generateBase64Url.ts"],"sourcesContent":["import { WatermarkText, WatermarkImage } from './type';\n\nexport default function generateBase64Url({\n  width,\n  height,\n  gapX,\n  gapY,\n  offsetLeft,\n  offsetTop,\n  rotate,\n  alpha,\n  watermarkContent,\n  lineSpace\n}: {\n  width: number,\n  height: number,\n  gapX:number,\n  gapY: number,\n  offsetLeft:number,\n  offsetTop:number,\n  rotate:number,\n  alpha:number,\n  watermarkContent: WatermarkText | WatermarkImage | Array<WatermarkText | WatermarkImage>,\n  lineSpace:number\n}, onFinish: (url: string) => void): string {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  if (!ctx) {\n    // eslint-disable-next-line no-console\n    console.warn('当前环境不支持Canvas, 无法绘制水印');\n    onFinish('');\n    return;\n  }\n  const ratio = window.devicePixelRatio || 1;\n  const canvasWidth = (gapX + width) * ratio;\n  const canvasHeight = (gapY + height) * ratio;\n\n  canvas.width = canvasWidth;\n  canvas.height = canvasHeight;\n  canvas.style.width = `${gapX + width}px`;\n  canvas.style.height = `${gapY + height}px`;\n\n  ctx.translate(offsetLeft * ratio, offsetTop * ratio);\n  ctx.rotate((Math.PI / 180) * Number(rotate));\n  ctx.globalAlpha = alpha;\n\n  const markWidth = width * ratio;\n  const markHeight = height * ratio;\n\n  ctx.fillStyle = 'transparent';\n  ctx.fillRect(0, 0, markWidth, markHeight);\n\n  const contents = Array.isArray(watermarkContent) ? watermarkContent : [{ ...watermarkContent }];\n  let top = 0;\n  contents.forEach((item: WatermarkText & WatermarkImage & { top: number }) => {\n    if (item.url) {\n      const { url, isGrayscale = false } = item;\n      // eslint-disable-next-line no-param-reassign\n      item.top = top;\n      top += height;\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.referrerPolicy = 'no-referrer';\n      img.src = url;\n      img.onload = () => {\n        // ctx.filter = 'grayscale(1)';\n        ctx.drawImage(img, 0, item.top * ratio, width * ratio, height * ratio);\n        if (isGrayscale) {\n          const imgData = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\n          const pixels = imgData.data;\n          for (let i = 0; i < pixels.length; i += 4) {\n            const lightness = (pixels[i] + pixels[i + 1] + pixels[i + 2]) / 3;\n            pixels[i] = lightness;\n            pixels[i + 1] = lightness;\n            pixels[i + 2] = lightness;\n          }\n          ctx.putImageData(imgData, 0, 0);\n        }\n        onFinish(canvas.toDataURL());\n      };\n    } else if (item.text) {\n      const {\n        text,\n        fontColor = 'rgba(0, 0, 0, 0.1)',\n        fontSize = 16,\n        fontWeight = 'normal',\n      } = item;\n      // eslint-disable-next-line no-param-reassign\n      item.top = top;\n      top += lineSpace;\n      const markSize = Number(fontSize) * ratio;\n      // TODO 后续完善font 渲染控制 目前font-family 暂时为 undefiend\n      ctx.font = `normal normal ${fontWeight} ${markSize}px/${markHeight}px undefined`;\n      ctx.textAlign = 'start';\n      ctx.textBaseline = 'top';\n      ctx.fillStyle = fontColor;\n      ctx.fillText(text, 0, item.top * ratio);\n    }\n  });\n  onFinish(canvas.toDataURL());\n}\n"],"names":["generateBase64Url","onFinish","width","height","gapX","gapY","offsetLeft","offsetTop","rotate","alpha","watermarkContent","lineSpace","canvas","document","createElement","ctx","getContext","console","warn","ratio","window","devicePixelRatio","canvasWidth","canvasHeight","style","translate","Math","PI","Number","globalAlpha","markWidth","markHeight","fillStyle","fillRect","contents","Array","isArray","top","forEach","item","url","isGrayscale","img","Image","crossOrigin","referrerPolicy","src","onload","drawImage","imgData","getImageData","pixels","data","i","length","lightness","putImageData","toDataURL","text","fontColor","fontSize","fontWeight","markSize","font","textAlign","textBaseline","fillText"],"mappings":"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"}