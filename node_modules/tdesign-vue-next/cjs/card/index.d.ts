import { TdCardProps } from './type';
import './style';
export * from './type';
export declare type CardProps = TdCardProps;
export declare const Card: {
    new (...args: any[]): {
        $: import("vue").ComponentInternalInstance;
        $data: {};
        $props: Partial<{
            loading: boolean | ((h: typeof import("vue").h) => import("../common").SlotReturnValue);
            size: "small" | "medium";
            status: string;
            theme: "normal" | "poster1" | "poster2";
            bordered: boolean;
            headerBordered: boolean;
            hoverShadow: boolean;
            shadow: boolean;
        }> & Omit<Readonly<import("vue").ExtractPropTypes<{
            actions: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
            avatar: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
            bordered: {
                type: BooleanConstructor;
                default: boolean;
            };
            content: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
            cover: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
            default: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
            description: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
            footer: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
            header: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
            headerBordered: BooleanConstructor;
            hoverShadow: BooleanConstructor;
            loading: {
                type: import("vue").PropType<boolean | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
                default: boolean;
            };
            shadow: BooleanConstructor;
            size: {
                type: import("vue").PropType<"small" | "medium">;
                default: "small" | "medium";
                validator(val: "small" | "medium"): boolean;
            };
            status: {
                type: StringConstructor;
                default: string;
            };
            subtitle: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
            theme: {
                type: import("vue").PropType<"normal" | "poster1" | "poster2">;
                default: "normal" | "poster1" | "poster2";
                validator(val: "normal" | "poster1" | "poster2"): boolean;
            };
            title: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
        }>> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, "loading" | "size" | "status" | "theme" | "bordered" | "headerBordered" | "hoverShadow" | "shadow">;
        $attrs: {
            [x: string]: unknown;
        };
        $refs: {
            [x: string]: unknown;
        };
        $slots: Readonly<{
            [name: string]: import("vue").Slot;
        }>;
        $root: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string>, {}>;
        $parent: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string>, {}>;
        $emit: (event: string, ...args: any[]) => void;
        $el: any;
        $options: import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
            actions: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
            avatar: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
            bordered: {
                type: BooleanConstructor;
                default: boolean;
            };
            content: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
            cover: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
            default: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
            description: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
            footer: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
            header: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
            headerBordered: BooleanConstructor;
            hoverShadow: BooleanConstructor;
            loading: {
                type: import("vue").PropType<boolean | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
                default: boolean;
            };
            shadow: BooleanConstructor;
            size: {
                type: import("vue").PropType<"small" | "medium">;
                default: "small" | "medium";
                validator(val: "small" | "medium"): boolean;
            };
            status: {
                type: StringConstructor;
                default: string;
            };
            subtitle: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
            theme: {
                type: import("vue").PropType<"normal" | "poster1" | "poster2">;
                default: "normal" | "poster1" | "poster2";
                validator(val: "normal" | "poster1" | "poster2"): boolean;
            };
            title: {
                type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            };
        }>>, () => any, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, {
            loading: boolean | ((h: typeof import("vue").h) => import("../common").SlotReturnValue);
            size: "small" | "medium";
            status: string;
            theme: "normal" | "poster1" | "poster2";
            bordered: boolean;
            headerBordered: boolean;
            hoverShadow: boolean;
            shadow: boolean;
        }, {}, string> & {
            beforeCreate?: (() => void) | (() => void)[];
            created?: (() => void) | (() => void)[];
            beforeMount?: (() => void) | (() => void)[];
            mounted?: (() => void) | (() => void)[];
            beforeUpdate?: (() => void) | (() => void)[];
            updated?: (() => void) | (() => void)[];
            activated?: (() => void) | (() => void)[];
            deactivated?: (() => void) | (() => void)[];
            beforeDestroy?: (() => void) | (() => void)[];
            beforeUnmount?: (() => void) | (() => void)[];
            destroyed?: (() => void) | (() => void)[];
            unmounted?: (() => void) | (() => void)[];
            renderTracked?: ((e: import("vue").DebuggerEvent) => void) | ((e: import("vue").DebuggerEvent) => void)[];
            renderTriggered?: ((e: import("vue").DebuggerEvent) => void) | ((e: import("vue").DebuggerEvent) => void)[];
            errorCaptured?: ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string>, {}>, info: string) => boolean | void) | ((err: unknown, instance: import("vue").ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, import("vue").ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string>, {}>, info: string) => boolean | void)[];
        };
        $forceUpdate: () => void;
        $nextTick: typeof import("vue").nextTick;
        $watch<T extends string | ((...args: any) => any)>(source: T, cb: T extends (...args: any) => infer R ? (args_0: R, args_1: R) => any : (...args: any) => any, options?: import("vue").WatchOptions<boolean>): import("vue").WatchStopHandle;
    } & Readonly<import("vue").ExtractPropTypes<{
        actions: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
        };
        avatar: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
        };
        bordered: {
            type: BooleanConstructor;
            default: boolean;
        };
        content: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
        };
        cover: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
        };
        default: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
        };
        description: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
        };
        footer: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
        };
        header: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
        };
        headerBordered: BooleanConstructor;
        hoverShadow: BooleanConstructor;
        loading: {
            type: import("vue").PropType<boolean | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
            default: boolean;
        };
        shadow: BooleanConstructor;
        size: {
            type: import("vue").PropType<"small" | "medium">;
            default: "small" | "medium";
            validator(val: "small" | "medium"): boolean;
        };
        status: {
            type: StringConstructor;
            default: string;
        };
        subtitle: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
        };
        theme: {
            type: import("vue").PropType<"normal" | "poster1" | "poster2">;
            default: "normal" | "poster1" | "poster2";
            validator(val: "normal" | "poster1" | "poster2"): boolean;
        };
        title: {
            type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
        };
    }>> & import("vue").ShallowUnwrapRef<() => any> & {} & import("vue").ComponentCustomProperties & {};
    __isFragment?: never;
    __isTeleport?: never;
    __isSuspense?: never;
} & import("vue").ComponentOptionsBase<Readonly<import("vue").ExtractPropTypes<{
    actions: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    avatar: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    bordered: {
        type: BooleanConstructor;
        default: boolean;
    };
    content: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    cover: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    description: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    footer: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    header: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    headerBordered: BooleanConstructor;
    hoverShadow: BooleanConstructor;
    loading: {
        type: import("vue").PropType<boolean | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
        default: boolean;
    };
    shadow: BooleanConstructor;
    size: {
        type: import("vue").PropType<"small" | "medium">;
        default: "small" | "medium";
        validator(val: "small" | "medium"): boolean;
    };
    status: {
        type: StringConstructor;
        default: string;
    };
    subtitle: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    theme: {
        type: import("vue").PropType<"normal" | "poster1" | "poster2">;
        default: "normal" | "poster1" | "poster2";
        validator(val: "normal" | "poster1" | "poster2"): boolean;
    };
    title: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
}>>, () => any, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, {
    loading: boolean | ((h: typeof import("vue").h) => import("../common").SlotReturnValue);
    size: "small" | "medium";
    status: string;
    theme: "normal" | "poster1" | "poster2";
    bordered: boolean;
    headerBordered: boolean;
    hoverShadow: boolean;
    shadow: boolean;
}, {}, string> & import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps & import("@vue/runtime-core").Plugin;
export default Card;
