{"version":3,"file":"useDragSorter.js","sources":["../../../src/tag-input/hooks/useDragSorter.ts"],"sourcesContent":["import { ref, reactive } from 'vue';\nimport { DragSortProps, DragSortInnerProps } from '../interface';\n\nexport default function useDragSorter<T>(props: DragSortProps<T>): DragSortInnerProps {\n  const { sortOnDraggable, onDragSort, onDragOverCheck } = props;\n  const draggingIndex = ref(-1);\n  const dragStartData = ref(null);\n  const isDropped = ref(null);\n  const startInfo = reactive({ nodeX: 0, nodeWidth: 0, mouseX: 0 });\n\n  const onDragOver = (e: DragEvent, index: number, record: T) => {\n    e.preventDefault();\n    if (draggingIndex.value === index || draggingIndex.value === -1) return;\n    const target = e.target as HTMLElement;\n    if (onDragOverCheck?.targetClassNameRegExp && !onDragOverCheck?.targetClassNameRegExp.test(target.className)) {\n      return;\n    }\n\n    if (onDragOverCheck?.x && target) {\n      if (!startInfo.nodeWidth) return;\n\n      const { x, width } = target.getBoundingClientRect();\n      const targetNodeMiddleX = x + width / 2;\n      const draggingNodeLeft = e.clientX - (startInfo.mouseX - startInfo.nodeX);\n      const draggingNodeRight = draggingNodeLeft + startInfo.nodeWidth;\n\n      let overlap = false;\n      if (draggingNodeLeft > x && draggingNodeLeft < x + width) {\n        overlap = draggingNodeLeft < targetNodeMiddleX;\n      } else {\n        overlap = draggingNodeRight > targetNodeMiddleX;\n      }\n\n      if (!overlap) return;\n    }\n\n    onDragSort?.({\n      currentIndex: draggingIndex.value,\n      current: dragStartData,\n      target: record,\n      targetIndex: index,\n    });\n\n    draggingIndex.value = index;\n  };\n\n  if (!sortOnDraggable) {\n    return {};\n  }\n\n  function onDragStart(e: DragEvent, index: number, record: T) {\n    draggingIndex.value = index;\n    dragStartData.value = record;\n    const target = e.target as HTMLElement;\n    if (onDragOverCheck && target) {\n      const { x, width } = target.getBoundingClientRect();\n      startInfo.nodeX = x;\n      startInfo.nodeWidth = width;\n      startInfo.mouseX = e.clientX;\n    }\n  }\n\n  function onDrop() {\n    isDropped.value = true;\n  }\n\n  function onDragEnd() {\n    if (!isDropped.value) {\n      // 取消排序，待扩展 api，输出 dragStartData\n    }\n    isDropped.value = false;\n    draggingIndex.value = -1;\n    dragStartData.value = null;\n  }\n\n  function getDragProps(index: number, record: T) {\n    if (sortOnDraggable) {\n      return {\n        draggable: true,\n        onDragstart: (e: DragEvent) => {\n          onDragStart(e, index, record);\n        },\n        onDragover: (e: DragEvent) => {\n          onDragOver(e, index, record);\n        },\n        onDrop: () => {\n          onDrop();\n        },\n        onDragend: () => {\n          onDragEnd();\n        },\n      };\n    }\n    return {};\n  }\n\n  return { onDragStart, onDragOver, onDrop, onDragEnd, getDragProps, dragging: draggingIndex.value !== -1 };\n}\n"],"names":["useDragSorter","props","sortOnDraggable","onDragSort","onDragOverCheck","draggingIndex","ref","dragStartData","isDropped","startInfo","reactive","nodeX","nodeWidth","mouseX","onDragOver","e","index","record","preventDefault","value","target","targetClassNameRegExp","test","className","x","getBoundingClientRect","width","targetNodeMiddleX","draggingNodeLeft","clientX","draggingNodeRight","overlap","currentIndex","current","targetIndex","onDragStart","onDrop","onDragEnd","getDragProps","draggable","onDragstart","onDragover","onDragend","dragging"],"mappings":"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"}