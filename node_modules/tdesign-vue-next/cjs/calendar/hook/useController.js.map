{"version":3,"file":"useController.js","sources":["../../../src/calendar/hook/useController.ts"],"sourcesContent":["import { computed, nextTick } from 'vue';\nimport dayjs from 'dayjs';\nimport { COMPONENT_NAME } from '../const';\nimport { CalendarState } from '../interface';\nimport { TdCalendarProps, ControllerOptions } from '../type';\nimport { useConfig } from '../../hooks/useConfig';\n\nconst getDefaultControllerConfigData = (visible = true): Record<string, any> => ({\n  visible, // 是否显示（全部控件）\n  disabled: false, // 是否禁用（全部控件）\n  // 模式切换单选组件设置\n  mode: {\n    visible: true, // 是否显示\n    radioGroupProps: {}, // 用于透传props给该radioGroup组件\n  },\n  // 年份选择框组件相关设置\n  year: {\n    visible: true, // 是否显示\n    selectProps: {}, // 用于透传props给该select组件\n  },\n  // 年份选择框组件相关设置\n  month: {\n    visible: true, // 是否显示（“year”模式下本身是不显示该组件的）\n    selectProps: {}, // 用于透传props给该select组件\n  },\n  // 隐藏\\显示周末按钮组件相关设置\n  weekend: {\n    visible: true, // 是否显示\n    showWeekendButtonProps: {}, // 用于透传props给显示周末按钮组件\n    hideWeekendButtonProps: {}, // 用于透传props给隐藏周末按钮组件\n  },\n  // “今天\\本月”按钮组件相关设置\n  current: {\n    visible: true, // 是否显示\n    currentDayButtonProps: {}, // 用于透传props给“今天”钮组件（“month”模式下有效）\n    currentMonthButtonProps: {}, // 用于透传props给“本月”按钮组件（“year”模式下有效）\n  },\n});\n\nexport function userController(props: TdCalendarProps, state: CalendarState) {\n  const { globalConfig } = useConfig(COMPONENT_NAME);\n\n  const options = computed<ControllerOptions>(() => {\n    const dayJsFilterDate = dayjs(`${state.curSelectedYear}-${state.curSelectedMonth}`);\n    const re = {\n      isShowWeekend: state.isShowWeekend,\n      filterDate: dayJsFilterDate.toDate(),\n      formattedFilterDate: dayJsFilterDate.format(props.format),\n      mode: state.curSelectedMode,\n    };\n    return re;\n  });\n  const configData = computed<Record<string, any>>(() => {\n    const controllerConfig = props.controllerConfig ?? globalConfig.value.controllerConfig ?? true;\n    if (typeof controllerConfig === 'boolean') {\n      return getDefaultControllerConfigData(controllerConfig);\n    }\n    return {\n      ...getDefaultControllerConfigData(),\n      ...controllerConfig,\n    };\n  });\n  const visible = computed<boolean>(() => {\n    return !!configData.value && configData.value.visible;\n  });\n  /**\n   * 判断某个控件是否显示\n   * @param name 控件对应的配置节点名（对应controllerConfigData）\n   * @returns true表示显示\n   */\n  function checkControllerVisible(name: string): boolean {\n    let re = true;\n    const conf = configData.value;\n    if (!conf || !conf.visible || conf[name] === false || (conf[name] && !conf[name].visible)) {\n      re = false;\n    }\n    return re;\n  }\n  /**\n   * 判断某个控件是否禁用\n   * @param name 控件对应的配置节点名（对应controllerConfigData）\n   * @param propsName 表示禁用的控件属性（对应controllerConfigData）\n   * @returns true表示禁用\n   */\n  function checkControllerDisabled(name: string, propsName: string): boolean {\n    let re = false;\n    const conf = configData.value;\n    if (conf && (conf.disabled || (conf[name] && conf[name][propsName] && conf[name][propsName].disabled))) {\n      re = true;\n    }\n    return re;\n  }\n  function emitControllerChange() {\n    nextTick(() => {\n      typeof props.onControllerChange === 'function' && props.onControllerChange({ ...options.value });\n    });\n  }\n\n  return {\n    options,\n    configData,\n    visible,\n    checkControllerVisible,\n    checkControllerDisabled,\n    emitControllerChange,\n  };\n}\n"],"names":["getDefaultControllerConfigData","visible","disabled","mode","radioGroupProps","year","selectProps","month","weekend","showWeekendButtonProps","hideWeekendButtonProps","current","currentDayButtonProps","currentMonthButtonProps","userController","props","state","useConfig","COMPONENT_NAME","globalConfig","options","computed","dayJsFilterDate","dayjs","curSelectedYear","curSelectedMonth","re","isShowWeekend","filterDate","toDate","formattedFilterDate","format","curSelectedMode","configData","controllerConfig","value","checkControllerVisible","name","conf","checkControllerDisabled","propsName","emitControllerChange","nextTick","onControllerChange"],"mappings":"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"}