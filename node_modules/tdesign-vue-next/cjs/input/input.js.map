{"version":3,"file":"input.js","sources":["../../src/input/input.tsx"],"sourcesContent":["import { defineComponent, computed } from 'vue';\nimport {\n  BrowseIcon as TdBrowseIcon,\n  BrowseOffIcon as TdBrowseOffIcon,\n  CloseCircleFilledIcon as TdCloseCircleFilledIcon,\n} from 'tdesign-icons-vue-next';\nimport props from './props';\nimport { useFormDisabled } from '../form/hooks';\nimport { useConfig, usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport useInput from './useInput';\nimport useInputEventHandler from './useInputEventHandler';\nimport useInputWidth from './useInputWidth';\n\nfunction getValidAttrs(obj: Record<string, unknown>): Record<string, unknown> {\n  const newObj = {};\n  Object.keys(obj).forEach((key) => {\n    if (typeof obj[key] !== 'undefined') {\n      newObj[key] = obj[key];\n    }\n  });\n  return newObj;\n}\n\nexport default defineComponent({\n  name: 'TInput',\n  props: {\n    ...props,\n    showInput: {\n      // 没有这个 API，请勿使用，即将删除。控制透传readonly同时是否展示input 默认保留 因为正常Input需要撑开宽度\n      type: Boolean,\n      default: true,\n    },\n    keepWrapperWidth: {\n      // 没有这个 API，请勿使用，即将删除。控制透传autoWidth之后是否容器宽度也自适应 多选等组件需要用到自适应但也需要保留宽度\n      type: Boolean,\n      default: false,\n    },\n    allowTriggerBlur: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  setup(props, { expose }) {\n    const { globalConfig } = useConfig('input');\n    const { BrowseIcon, BrowseOffIcon, CloseCircleFilledIcon } = useGlobalIcon({\n      BrowseIcon: TdBrowseIcon,\n      BrowseOffIcon: TdBrowseOffIcon,\n      CloseCircleFilledIcon: TdCloseCircleFilledIcon,\n    });\n    const disabled = useFormDisabled();\n    const COMPONENT_NAME = usePrefixClass('input');\n    const INPUT_WRAP_CLASS = usePrefixClass('input__wrap');\n    const INPUT_TIPS_CLASS = usePrefixClass('input__tips');\n    const { STATUS, SIZE } = useCommonClassName();\n    const classPrefix = usePrefixClass();\n    const renderTNodeJSX = useTNodeJSX();\n    const {\n      isHover,\n      tStatus,\n      inputRef,\n      renderType,\n      showClear,\n      focused,\n      inputValue,\n      innerValue,\n      limitNumber,\n      ...inputHandle\n    } = useInput(props, expose);\n\n    const { inputPreRef } = useInputWidth(props, inputRef, innerValue);\n\n    const inputEventHandler = useInputEventHandler(props, isHover, innerValue);\n\n    const tPlaceholder = computed(() => props.placeholder ?? globalConfig.value.placeholder);\n    const inputAttrs = computed(() =>\n      getValidAttrs({\n        autofocus: props.autofocus,\n        disabled: disabled.value,\n        readonly: props.readonly,\n        placeholder: tPlaceholder.value,\n        maxlength: (!props.allowInputOverMax && props.maxlength) || undefined,\n        name: props.name || undefined,\n        type: renderType.value,\n        autocomplete: props.autocomplete ?? (globalConfig.value.autocomplete || undefined),\n        unselectable: props.readonly ? 'on' : undefined,\n      }),\n    );\n\n    return () => {\n      const prefixIcon = renderTNodeJSX('prefixIcon');\n      let suffixIcon = renderTNodeJSX('suffixIcon');\n      let passwordIcon = renderTNodeJSX('passwordIcon');\n      const label = renderTNodeJSX('label', { silent: true });\n      const suffix = renderTNodeJSX('suffix');\n      const limitNode =\n        limitNumber.value && props.showLimitNumber ? (\n          <div class={`${classPrefix.value}-input__limit-number`}>{limitNumber.value}</div>\n        ) : null;\n\n      const labelContent = label ? <div class={`${COMPONENT_NAME.value}__prefix`}>{label}</div> : null;\n      const suffixContent =\n        suffix || limitNode ? (\n          <div class={`${COMPONENT_NAME.value}__suffix`}>\n            {suffix}\n            {limitNode}\n          </div>\n        ) : null;\n\n      if (props.type === 'password') {\n        if (renderType.value === 'password') {\n          suffixIcon = (\n            <BrowseOffIcon class={`${COMPONENT_NAME.value}__suffix-clear`} onClick={inputHandle.emitPassword} />\n          );\n        } else if (renderType.value === 'text') {\n          suffixIcon = (\n            <BrowseIcon class={`${COMPONENT_NAME.value}__suffix-clear`} onClick={inputHandle.emitPassword} />\n          );\n        }\n      }\n\n      if (showClear.value) {\n        // 如果类型为 password 则使用 passwordIcon 显示 clear\n        if (props.type === 'password') {\n          passwordIcon = (\n            <CloseCircleFilledIcon\n              ref={inputHandle.clearIconRef}\n              class={`${COMPONENT_NAME.value}__suffix-clear`}\n              onClick={inputHandle.emitClear}\n              onMousedown={inputHandle.onClearIconMousedown}\n            />\n          );\n        } else {\n          suffixIcon = (\n            <CloseCircleFilledIcon\n              ref={inputHandle.clearIconRef}\n              class={`${COMPONENT_NAME.value}__suffix-clear`}\n              onClick={inputHandle.emitClear}\n              onMousedown={inputHandle.onClearIconMousedown}\n            />\n          );\n        }\n      }\n\n      const classes = [\n        COMPONENT_NAME.value,\n        props.inputClass,\n        {\n          [SIZE.value[props.size]]: props.size !== 'medium',\n          [STATUS.value.disabled]: disabled.value,\n          [STATUS.value.focused]: focused.value,\n          [`${classPrefix.value}-is-${tStatus.value}`]: tStatus.value,\n          [`${classPrefix.value}-align-${props.align}`]: props.align !== 'left',\n          [`${classPrefix.value}-is-readonly`]: props.readonly,\n          [`${COMPONENT_NAME.value}--prefix`]: prefixIcon || labelContent,\n          [`${COMPONENT_NAME.value}--suffix`]: suffixIcon || suffixContent,\n          [`${COMPONENT_NAME.value}--focused`]: focused.value,\n          [`${COMPONENT_NAME.value}--auto-width`]: props.autoWidth && !props.keepWrapperWidth,\n        },\n      ];\n\n      const inputEvents = getValidAttrs({\n        onFocus: (e: FocusEvent) => inputHandle.emitFocus(e),\n        onBlur: inputHandle.formatAndEmitBlur,\n        onKeydown: inputEventHandler.handleKeydown,\n        onKeyup: inputEventHandler.handleKeyUp,\n        onKeypress: inputEventHandler.handleKeypress,\n        onPaste: inputEventHandler.onHandlePaste,\n        onCompositionend: inputHandle.onHandleCompositionend,\n        onCompositionstart: inputHandle.onHandleCompositionstart,\n      });\n\n      const tips = renderTNodeJSX('tips');\n\n      return (\n        <div class={INPUT_WRAP_CLASS.value}>\n          <div\n            class={classes}\n            onClick={inputHandle.onRootClick}\n            onMouseenter={inputEventHandler.onInputMouseenter}\n            onMouseleave={inputEventHandler.onInputMouseleave}\n            onWheel={inputEventHandler.onHandleMousewheel}\n          >\n            {prefixIcon ? (\n              <span class={[`${COMPONENT_NAME.value}__prefix`, `${COMPONENT_NAME.value}__prefix-icon`]}>\n                {prefixIcon}\n              </span>\n            ) : null}\n            {labelContent}\n            {props.showInput && (\n              <input\n                class={`${COMPONENT_NAME.value}__inner`}\n                {...inputAttrs.value}\n                {...inputEvents}\n                ref={inputRef}\n                value={inputValue.value ?? ''}\n                onInput={(e: Event) => inputHandle.handleInput(e as InputEvent)}\n              />\n            )}\n            {props.autoWidth && (\n              <span ref={inputPreRef} class={`${classPrefix.value}-input__input-pre`}>\n                {innerValue.value || tPlaceholder.value}\n              </span>\n            )}\n            {suffixContent}\n            {passwordIcon ? (\n              <span\n                class={[\n                  `${COMPONENT_NAME.value}__suffix`,\n                  `${COMPONENT_NAME.value}__suffix-icon`,\n                  `${COMPONENT_NAME.value}__clear`,\n                ]}\n              >\n                {passwordIcon}\n              </span>\n            ) : null}\n            {suffixIcon ? (\n              <span\n                class={[\n                  `${COMPONENT_NAME.value}__suffix`,\n                  `${COMPONENT_NAME.value}__suffix-icon`,\n                  { [`${COMPONENT_NAME.value}__clear`]: showClear.value },\n                ]}\n              >\n                {suffixIcon}\n              </span>\n            ) : null}\n          </div>\n          {tips && (\n            <div class={`${INPUT_TIPS_CLASS.value} ${classPrefix.value}-input__tips--${tStatus.value || 'default'}`}>\n              {tips}\n            </div>\n          )}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["getValidAttrs","obj","newObj","Object","keys","forEach","key","defineComponent","name","props","showInput","type","Boolean","keepWrapperWidth","allowTriggerBlur","setup","expose","useConfig","globalConfig","useGlobalIcon","BrowseIcon","TdBrowseIcon","BrowseOffIcon","TdBrowseOffIcon","CloseCircleFilledIcon","TdCloseCircleFilledIcon","disabled","useFormDisabled","COMPONENT_NAME","usePrefixClass","INPUT_WRAP_CLASS","INPUT_TIPS_CLASS","useCommonClassName","STATUS","SIZE","classPrefix","renderTNodeJSX","useTNodeJSX","useInput","isHover","tStatus","inputRef","renderType","showClear","focused","inputValue","innerValue","limitNumber","inputHandle","_objectWithoutProperties","useInputWidth","inputPreRef","inputEventHandler","useInputEventHandler","tPlaceholder","computed","placeholder","value","inputAttrs","autofocus","readonly","maxlength","allowInputOverMax","autocomplete","unselectable","prefixIcon","suffixIcon","passwordIcon","label","silent","suffix","limitNode","showLimitNumber","labelContent","_createVNode","suffixContent","emitPassword","clearIconRef","emitClear","onClearIconMousedown","classes","inputClass","_defineProperty","size","align","autoWidth","inputEvents","onFocus","e","emitFocus","onBlur","formatAndEmitBlur","onKeydown","handleKeydown","onKeyup","handleKeyUp","onKeypress","handleKeypress","onPaste","onHandlePaste","onCompositionend","onHandleCompositionend","onCompositionstart","onHandleCompositionstart","tips","onRootClick","onInputMouseenter","onInputMouseleave","onHandleMousewheel","handleInput"],"mappings":"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"}