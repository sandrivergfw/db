{"version":3,"file":"useInputWidth.js","sources":["../../src/input/useInputWidth.ts"],"sourcesContent":["import { onMounted, Ref, ref, watch, nextTick, onBeforeUnmount } from 'vue';\nimport { InputValue, TdInputProps } from './type';\n\nexport default function useInputWidth(\n  props: TdInputProps,\n  inputRef: Ref<HTMLInputElement>,\n  innerValue: Ref<InputValue>,\n) {\n  const inputPreRef = ref<HTMLSpanElement>(null);\n\n  const composing = ref(false);\n  const updateInputWidth = () => {\n    if (!inputPreRef.value) return;\n    const width = inputPreRef.value.offsetWidth;\n    if (width === 0) return;\n    inputRef.value.style.width = `${width}px`;\n  };\n\n  const addListeners = () => {\n    watch(\n      () => innerValue.value + props.placeholder,\n      () => {\n        if (!props.autoWidth) return;\n        nextTick(() => {\n          updateInputWidth();\n        });\n      },\n      { immediate: true },\n    );\n  };\n\n  onMounted(() => {\n    composing.value = false;\n    if (props.autoWidth) {\n      addListeners();\n    }\n  });\n\n  const resizeObserver = ref<ResizeObserver>(null);\n  // 当元素默认为 display: none 状态，无法提前准确计算宽度，因此需要监听元素宽度变化。比如：Tabs 场景切换。\n  const addTableResizeObserver = (element: Element) => {\n    // IE 11 以下使用设置 minWidth 兼容；IE 11 以上使用 ResizeObserver\n    if (typeof window.ResizeObserver === 'undefined' || !element) return;\n    resizeObserver.value = new window.ResizeObserver(() => {\n      updateInputWidth();\n    });\n    resizeObserver.value.observe(element);\n  };\n\n  onMounted(() => {\n    addTableResizeObserver(inputPreRef.value);\n  });\n\n  onBeforeUnmount(() => {\n    resizeObserver.value?.unobserve(inputPreRef.value);\n    resizeObserver.value?.disconnect();\n  });\n\n  return {\n    inputPreRef,\n  };\n}\n"],"names":["useInputWidth","props","inputRef","innerValue","inputPreRef","ref","composing","updateInputWidth","value","width","offsetWidth","style","addListeners","watch","placeholder","autoWidth","nextTick","immediate","onMounted","resizeObserver","addTableResizeObserver","element","window","ResizeObserver","observe","onBeforeUnmount","unobserve","disconnect"],"mappings":";;;;;;;;;;;;AAGwB,SAAAA,aAAA,CACtBC,KACA,EAAAC,QAAA,EACAC,UACA,EAAA;AACM,EAAA,IAAAC,WAAA,GAAcC,QAAqB,IAAI,CAAA,CAAA;AAEvC,EAAA,IAAAC,SAAA,GAAYD,QAAI,KAAK,CAAA,CAAA;AAC3B,EAAA,IAAME,mBAAmB,SAAnBA,mBAAyB;AAC7B,IAAA,IAAI,CAACH,WAAY,CAAAI,KAAA,EAAO,OAAA;AAClB,IAAA,IAAAC,KAAA,GAAQL,YAAYI,KAAM,CAAAE,WAAA,CAAA;IAChC,IAAID,KAAU,KAAA,CAAA,EAAG,OAAA;IACRP,QAAA,CAAAM,KAAA,CAAMG,KAAM,CAAAF,KAAA,GAAA,EAAA,CAAA,MAAA,CAAWA,KAAA,EAAA,IAAA,CAAA,CAAA;GAClC,CAAA;AAEA,EAAA,IAAMG,eAAe,SAAfA,eAAqB;AACzBC,IAAAA,SAAA,CACE,YAAA;AAAA,MAAA,OAAMV,UAAW,CAAAK,KAAA,GAAQP,KAAM,CAAAa,WAAA,CAAA;AAAA,KAAA,EAC/B,YAAM;AACJ,MAAA,IAAI,CAACb,KAAM,CAAAc,SAAA,EAAW,OAAA;AACtBC,MAAAA,YAAA,CAAS,YAAM;AACIT,QAAAA,gBAAA,EAAA,CAAA;AACnB,OAAC,CAAA,CAAA;AACH,KAAA,EACA;AAAEU,MAAAA,WAAW,IAAA;AAAK,KAAA,CACpB,CAAA;GACF,CAAA;AAEAC,EAAAA,aAAA,CAAU,YAAM;IACdZ,SAAA,CAAUE,KAAQ,GAAA,KAAA,CAAA;IAClB,IAAIP,MAAMc,SAAW,EAAA;AACNH,MAAAA,YAAA,EAAA,CAAA;AACf,KAAA;AACF,GAAC,CAAA,CAAA;AAEK,EAAA,IAAAO,cAAA,GAAiBd,QAAoB,IAAI,CAAA,CAAA;AAEzC,EAAA,IAAAe,sBAAA,GAAyB,SAAzBA,sBAAA,CAA0BC,OAAqB,EAAA;IAEnD,IAAI,OAAOC,MAAA,CAAOC,cAAmB,KAAA,WAAA,IAAe,CAACF,OAAA,EAAS,OAAA;IAC9DF,cAAA,CAAeX,KAAQ,GAAA,IAAIc,MAAO,CAAAC,cAAA,CAAe,YAAM;AACpChB,MAAAA,gBAAA,EAAA,CAAA;AACnB,KAAC,CAAA,CAAA;AACcY,IAAAA,cAAA,CAAAX,KAAA,CAAMgB,QAAQH,OAAO,CAAA,CAAA;GACtC,CAAA;AAEAH,EAAAA,aAAA,CAAU,YAAM;AACdE,IAAAA,sBAAA,CAAuBhB,YAAYI,KAAK,CAAA,CAAA;AAC1C,GAAC,CAAA,CAAA;AAEDiB,EAAAA,mBAAA,CAAgB,YAAM;AAAA,IAAA,IAAA,qBAAA,EAAA,sBAAA,CAAA;IACL,CAAAN,qBAAAA,GAAAA,cAAA,CAAAX,KAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAOkB,SAAU,CAAAtB,WAAA,CAAYI,KAAK,CAAA,CAAA;AACjD,IAAA,CAAA,sBAAA,GAAAW,cAAA,CAAeX,WAAf,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAAsBmB,UAAW,EAAA,CAAA;AACnC,GAAC,CAAA,CAAA;EAEM,OAAA;AACLvB,IAAAA,WAAA,EAAAA,WAAAA;GACF,CAAA;AACF;;;;"}