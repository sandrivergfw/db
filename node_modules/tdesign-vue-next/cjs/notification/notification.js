/**
 * tdesign v0.24.9
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var isFunction = require('lodash/isFunction');
var hooks_tnode = require('../hooks/tnode.js');
var notification_props = require('./props.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_useGlobalIcon = require('../hooks/useGlobalIcon.js');
var notification_animate = require('./animate.js');
var configProvider_useConfig = require('../config-provider/useConfig.js');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isObject');
require('./const.js');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/default-config.js');
require('../_common/js/global-config/locale/zh_CN.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var isFunction__default = /*#__PURE__*/_interopDefaultLegacy(isFunction);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _Notification = vue.defineComponent({
  name: "TNotification",
  props: _objectSpread(_objectSpread({}, notification_props["default"]), {}, {
    placement: String
  }),
  setup: function setup(props2, _ref) {
    var slots = _ref.slots,
      expose = _ref.expose;
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("notification");
    var _useConfig = configProvider_useConfig.useConfig("classPrefix"),
      classPrefix = _useConfig.classPrefix;
    var _useGlobalIcon = hooks_useGlobalIcon.useGlobalIcon({
        InfoCircleFilledIcon: tdesignIconsVueNext.InfoCircleFilledIcon,
        CheckCircleFilledIcon: tdesignIconsVueNext.CheckCircleFilledIcon,
        CloseIcon: tdesignIconsVueNext.CloseIcon
      }),
      InfoCircleFilledIcon = _useGlobalIcon.InfoCircleFilledIcon,
      CheckCircleFilledIcon = _useGlobalIcon.CheckCircleFilledIcon,
      CloseIcon = _useGlobalIcon.CloseIcon;
    var renderTNode = hooks_tnode.useTNodeJSX();
    var renderContent = hooks_tnode.useContent();
    var timer = vue.ref(null);
    var notificationRef = vue.ref(null);
    var close = function close(e) {
      var dom = notificationRef.value;
      notification_animate.fadeOut(dom, props2.placement, function () {
        var _props2$onCloseBtnCli;
        (_props2$onCloseBtnCli = props2.onCloseBtnClick) === null || _props2$onCloseBtnCli === void 0 ? void 0 : _props2$onCloseBtnCli.call(props2, {
          e: e
        });
      });
    };
    var renderIcon = function renderIcon() {
      var iconContent;
      if (props2.icon === false) return null;
      if (isFunction__default["default"](props2.icon)) {
        iconContent = props2.icon(vue.h);
      } else if (slots.icon) {
        iconContent = slots.icon(null);
      } else if (props2.theme) {
        var iconType = props2.theme === "success" ? vue.createVNode(CheckCircleFilledIcon, {
          "class": "".concat(classPrefix.value, "-is-").concat(props2.theme)
        }, null) : vue.createVNode(InfoCircleFilledIcon, {
          "class": "".concat(classPrefix.value, "-is-").concat(props2.theme)
        }, null);
        iconContent = vue.createVNode("div", {
          "class": "t-notification__icon"
        }, [iconType]);
      }
      return iconContent;
    };
    var renderClose = function renderClose() {
      var defaultClose = vue.createVNode(CloseIcon, null, null);
      return vue.createVNode("span", {
        "class": "".concat(classPrefix.value, "-message__close"),
        "onClick": close
      }, [renderTNode("closeBtn", defaultClose)]);
    };
    var renderMainContent = function renderMainContent() {
      return vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__content")
      }, [renderContent("default", "content")]);
    };
    var clearTimer = function clearTimer() {
      props2.duration && clearTimeout(timer.value);
    };
    var setTimer = function setTimer() {
      if (!props2.duration) {
        return;
      }
      timer.value = Number(setTimeout(function () {
        clearTimer();
        var dom = notificationRef.value;
        notification_animate.fadeOut(dom, props2.placement, function () {
          var _props2$onDurationEnd;
          (_props2$onDurationEnd = props2.onDurationEnd) === null || _props2$onDurationEnd === void 0 ? void 0 : _props2$onDurationEnd.call(props2);
        });
      }, props2.duration));
    };
    vue.onBeforeMount(function () {
      props2.duration && setTimer();
    });
    vue.onMounted(function () {
      var dom = notificationRef.value;
      notification_animate.fadeIn(dom, props2.placement);
    });
    expose({
      close: close
    });
    return function () {
      return vue.createVNode("div", {
        "ref": notificationRef,
        "class": "".concat(COMPONENT_NAME.value),
        "onMouseenter": clearTimer,
        "onMouseleave": setTimer
      }, [renderIcon(), vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__main")
      }, [vue.createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__title__wrap")
      }, [vue.createVNode("span", {
        "class": "".concat(COMPONENT_NAME.value, "__title")
      }, [renderTNode("title")]), renderClose()]), renderMainContent(), renderTNode("footer")])]);
    };
  }
});

exports["default"] = _Notification;
//# sourceMappingURL=notification.js.map
