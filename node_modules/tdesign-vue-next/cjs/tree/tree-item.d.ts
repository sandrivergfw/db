import { PropType } from 'vue';
import { TypeEventState } from './interface';
import TreeNode from '../_common/js/tree/tree-node';
declare const _default: import("vue").DefineComponent<{
    node: {
        type: PropType<TreeNode>;
    };
    onClick: PropType<(e: TypeEventState) => void>;
    onChange: PropType<(e: TypeEventState) => void>;
    onDrop: PropType<(node: TreeNode, val: number, e: DragEvent) => void>;
    onDragStart: PropType<(node: TreeNode, e: DragEvent) => void>;
    expandOnClickNode: BooleanConstructor;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    node: {
        type: PropType<TreeNode>;
    };
    onClick: PropType<(e: TypeEventState) => void>;
    onChange: PropType<(e: TypeEventState) => void>;
    onDrop: PropType<(node: TreeNode, val: number, e: DragEvent) => void>;
    onDragStart: PropType<(node: TreeNode, e: DragEvent) => void>;
    expandOnClickNode: BooleanConstructor;
}>>, {
    expandOnClickNode: boolean;
}>;
export default _default;
