{"version":3,"file":"image-card.js","sources":["../../../src/upload/themes/image-card.tsx"],"sourcesContent":["import { defineComponent, PropType, toRefs, computed } from 'vue';\nimport {\n  BrowseIcon as TdBrowseIcon,\n  DeleteIcon as TdDeleteIcon,\n  AddIcon as TdAddIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n} from 'tdesign-icons-vue-next';\nimport Loading from '../../loading';\nimport useGlobalIcon from '../../hooks/useGlobalIcon';\nimport ImageViewer from '../../image-viewer';\nimport { CommonDisplayFileProps } from '../interface';\nimport { commonProps } from '../constants';\nimport { TdUploadProps, UploadFile } from '../type';\nimport { abridgeName } from '../../_common/js/upload/utils';\n\nexport interface ImageCardUploadProps extends CommonDisplayFileProps {\n  multiple: TdUploadProps['multiple'];\n  max: TdUploadProps['max'];\n  disabled?: TdUploadProps['disabled'];\n  showUploadProgress: TdUploadProps['showUploadProgress'];\n  triggerUpload?: (e: MouseEvent) => void;\n  uploadFiles?: (toFiles?: UploadFile[]) => void;\n  cancelUpload?: (context: { e: MouseEvent; file: UploadFile }) => void;\n  onPreview?: TdUploadProps['onPreview'];\n}\n\nexport default defineComponent({\n  name: 'UploadImageCard',\n\n  props: {\n    ...commonProps,\n    multiple: Boolean,\n    max: Number,\n    disabled: Boolean,\n    showUploadProgress: Boolean,\n    triggerUpload: Function as PropType<ImageCardUploadProps['triggerUpload']>,\n    uploadFiles: Function as PropType<ImageCardUploadProps['uploadFiles']>,\n    cancelUpload: Function as PropType<ImageCardUploadProps['cancelUpload']>,\n    onPreview: Function as PropType<ImageCardUploadProps['onPreview']>,\n  },\n\n  setup(props: ImageCardUploadProps) {\n    const { displayFiles, locale, classPrefix, multiple, max } = toRefs(props);\n    const { BrowseIcon, DeleteIcon, AddIcon, ErrorCircleFilledIcon } = useGlobalIcon({\n      AddIcon: TdAddIcon,\n      BrowseIcon: TdBrowseIcon,\n      DeleteIcon: TdDeleteIcon,\n      ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n    });\n\n    const showTrigger = computed(() => {\n      if (multiple.value) {\n        return !max.value || displayFiles.value.length < max.value;\n      }\n      return !displayFiles.value?.[0];\n    });\n\n    const renderMainContent = (file: UploadFile, index: number) => {\n      return (\n        <div class={`${classPrefix.value}-upload__card-content ${classPrefix.value}-upload__card-box`}>\n          <img class={`${classPrefix.value}-upload__card-image`} src={file.url} />\n          <div class={`${classPrefix.value}-upload__card-mask`}>\n            <span class={`${classPrefix.value}-upload__card-mask-item`} onClick={(e) => e.stopPropagation()}>\n              <ImageViewer\n                images={displayFiles.value.map((t: UploadFile) => t.url)}\n                defaultIndex={index}\n                trigger={(h, { open }) => {\n                  return (\n                    <BrowseIcon\n                      onClick={({ e }: { e: MouseEvent }) => {\n                        props.onPreview?.({ file, index, e });\n                        open();\n                      }}\n                    />\n                  );\n                }}\n              ></ImageViewer>\n            </span>\n            {!props.disabled && (\n              <>\n                <span class={`${classPrefix.value}-upload__card-mask-item-divider`} />\n                <span class={`${classPrefix.value}-upload__card-mask-item`} onClick={(e) => e.stopPropagation()}>\n                  <DeleteIcon onClick={({ e }: { e: MouseEvent }) => props?.onRemove?.({ e, file, index })} />\n                </span>\n              </>\n            )}\n          </div>\n        </div>\n      );\n    };\n\n    const renderProgressFile = (file: UploadFile, loadCard: string) => {\n      return (\n        <div class={loadCard}>\n          <Loading loading={true} size=\"medium\" />\n          <p>\n            {locale.value?.progress?.uploadingText}\n            {props.showUploadProgress ? ` ${file.percent}%` : ''}\n          </p>\n        </div>\n      );\n    };\n\n    const renderFailFile = (file: UploadFile, index: number, loadCard: string) => {\n      return (\n        <div class={loadCard}>\n          <ErrorCircleFilledIcon />\n          <p>{file.response?.error || locale.value?.progress?.failText}</p>\n          <div class={`${classPrefix.value}-upload__card-mask`}>\n            <span class={`${classPrefix.value}-upload__card-mask-item`} onClick={(e) => e.stopPropagation()}>\n              <DeleteIcon onClick={({ e }: { e: MouseEvent }) => props?.onRemove?.({ e, file, index })} />\n            </span>\n          </div>\n        </div>\n      );\n    };\n\n    return () => {\n      const cardItemClasses = `${classPrefix.value}-upload__card-item ${classPrefix.value}-is-background`;\n      return (\n        <div>\n          <ul class={`${classPrefix.value}-upload__card`}>\n            {displayFiles.value?.map((file: UploadFile, index: number) => {\n              const loadCard = `${classPrefix.value}-upload__card-container ${classPrefix.value}-upload__card-box`;\n              const fileName = props.abridgeName ? abridgeName(file.name, ...props.abridgeName) : file.name;\n              return (\n                <li class={cardItemClasses} key={index}>\n                  {file.status === 'progress' && renderProgressFile(file, loadCard)}\n                  {file.status === 'fail' && renderFailFile(file, index, loadCard)}\n                  {!['progress', 'fail'].includes(file.status) && file.url && renderMainContent(file, index)}\n                  <div class={`${classPrefix.value}-upload__card-name`}>{fileName}</div>\n                </li>\n              );\n            })}\n\n            {showTrigger.value && (\n              <li class={cardItemClasses} onClick={props.triggerUpload}>\n                <div class={`${classPrefix.value}-upload__card-container ${classPrefix.value}-upload__card-box`}>\n                  <AddIcon />\n                  <p class={`${classPrefix.value}-size-s`}>{locale.value?.triggerUploadText?.image}</p>\n                </div>\n              </li>\n            )}\n          </ul>\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","commonProps","multiple","Boolean","max","Number","disabled","showUploadProgress","triggerUpload","Function","uploadFiles","cancelUpload","onPreview","setup","toRefs","displayFiles","locale","classPrefix","useGlobalIcon","AddIcon","TdAddIcon","BrowseIcon","TdBrowseIcon","DeleteIcon","TdDeleteIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","showTrigger","computed","value","length","renderMainContent","file","index","_createVNode","url","e","stopPropagation","ImageViewer","map","t","h","open","_Fragment","onRemove","renderProgressFile","loadCard","Loading","progress","uploadingText","percent","renderFailFile","response","error","failText","cardItemClasses","fileName","abridgeName","status","includes","triggerUploadText","image"],"mappings":"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"}