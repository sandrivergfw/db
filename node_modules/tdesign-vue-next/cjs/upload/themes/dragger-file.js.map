{"version":3,"file":"dragger-file.js","sources":["../../../src/upload/themes/dragger-file.tsx"],"sourcesContent":["import { defineComponent, toRefs, PropType, ref, computed, h } from 'vue';\nimport {\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n} from 'tdesign-icons-vue-next';\nimport { abridgeName, getFileSizeText } from '../../_common/js/upload/utils';\nimport { TdUploadProps, UploadFile } from '../type';\nimport TLink from '../../link';\nimport { CommonDisplayFileProps } from '../interface';\nimport { commonProps } from '../constants';\nimport useCommonClassName from '../../hooks/useCommonClassName';\nimport TLoading from '../../loading';\nimport useDrag, { UploadDragEvents } from '../hooks/useDrag';\nimport useGlobalIcon from '../../hooks/useGlobalIcon';\nimport ImageViewer from '../../image-viewer';\n\nexport interface DraggerProps extends CommonDisplayFileProps {\n  trigger?: TdUploadProps['trigger'];\n  triggerUpload?: (e: MouseEvent) => void;\n  uploadFiles?: (toFiles?: UploadFile[]) => void;\n  cancelUpload?: (context: { e: MouseEvent; file: UploadFile }) => void;\n  dragEvents: UploadDragEvents;\n}\n\nexport default defineComponent({\n  name: 'UploadDraggerFile',\n\n  props: {\n    ...commonProps,\n    trigger: Function as PropType<DraggerProps['trigger']>,\n    triggerUpload: Function as PropType<DraggerProps['triggerUpload']>,\n    uploadFiles: Function as PropType<DraggerProps['uploadFiles']>,\n    cancelUpload: Function as PropType<DraggerProps['cancelUpload']>,\n    dragEvents: Object as PropType<DraggerProps['dragEvents']>,\n  },\n\n  setup(props: DraggerProps, { slots }) {\n    const { displayFiles, locale, disabled } = toRefs(props);\n\n    const { sizeClassNames } = useCommonClassName();\n    const uploadPrefix = `${props.classPrefix}-upload`;\n\n    const drag = useDrag(props.dragEvents);\n    const { dragActive } = drag;\n\n    const draggerFileRef = ref();\n\n    const classes = computed(() => [\n      `${uploadPrefix}__dragger`,\n      { [`${uploadPrefix}__dragger-center`]: !displayFiles.value[0] },\n      { [`${uploadPrefix}__dragger-error`]: displayFiles.value[0]?.status === 'fail' },\n    ]);\n\n    const { CheckCircleFilledIcon, ErrorCircleFilledIcon } = useGlobalIcon({\n      CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n      ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n    });\n\n    const renderImage = () => {\n      const file = displayFiles.value[0];\n      if (!file) return null;\n      const url = file.url || file.response?.url;\n      return (\n        <div class={`${uploadPrefix}__dragger-img-wrap`}>\n          {url && (\n            <ImageViewer images={[url]} trigger={(h, { open }: any) => <img src={url} onClick={open} />}></ImageViewer>\n          )}\n        </div>\n      );\n    };\n\n    const renderUploading = () => {\n      const file = displayFiles.value[0];\n      if (!file) return null;\n      if (file.status === 'progress') {\n        return (\n          <div class={`${uploadPrefix}__single-progress`}>\n            <TLoading />\n            <span class={`${uploadPrefix}__single-percent`}>{file.percent}%</span>\n          </div>\n        );\n      }\n    };\n\n    const renderMainPreview = () => {\n      const file = displayFiles.value[0];\n      if (!file) return null;\n      const fileName = props.abridgeName ? abridgeName(file.name, ...props.abridgeName) : file.name;\n      return (\n        <div class={`${uploadPrefix}__dragger-progress`}>\n          {props.theme === 'image' && renderImage()}\n          <div class={`${uploadPrefix}__dragger-progress-info`}>\n            <div class={`${uploadPrefix}__dragger-text`}>\n              <span class={`${uploadPrefix}__single-name`}>{fileName}</span>\n              {file.status === 'progress' && renderUploading()}\n              {file.status === 'success' && <CheckCircleFilledIcon />}\n              {file.status === 'fail' && <ErrorCircleFilledIcon />}\n            </div>\n            <small class={`${sizeClassNames.small}`}>\n              {locale.value.file.fileSizeText}：{getFileSizeText(file.size)}\n            </small>\n            <small class={`${sizeClassNames.small}`}>\n              {locale.value.file.fileOperationDateText}：{file.uploadTime || '-'}\n            </small>\n            <div class={`${uploadPrefix}__dragger-btns`}>\n              {['progress', 'waiting'].includes(file.status) && !disabled && (\n                <TLink\n                  theme=\"primary\"\n                  hover=\"color\"\n                  class={`${uploadPrefix}__dragger-progress-cancel`}\n                  onClick={(e: MouseEvent) =>\n                    props.cancelUpload?.({\n                      e,\n                      file: props.toUploadFiles[0] || props.files[0],\n                    })\n                  }\n                >\n                  {locale.value?.cancelUploadText}\n                </TLink>\n              )}\n              {!props.autoUpload && file.status === 'waiting' && (\n                <TLink\n                  theme=\"primary\"\n                  hover=\"color\"\n                  disabled={disabled.value}\n                  onClick={() => props.uploadFiles?.()}\n                  class={`${uploadPrefix}__dragger-upload-btn`}\n                >\n                  {locale.value.triggerUploadText.normal}\n                </TLink>\n              )}\n            </div>\n            {['fail', 'success'].includes(file?.status) && !disabled.value && (\n              <div class={`${uploadPrefix}__dragger-btns`}>\n                <TLink\n                  theme=\"primary\"\n                  hover=\"color\"\n                  disabled={disabled.value}\n                  class={`${uploadPrefix}__dragger-progress-cancel`}\n                  onClick={props.triggerUpload}\n                >\n                  {locale.value.triggerUploadText.reupload}\n                </TLink>\n                <TLink\n                  theme=\"danger\"\n                  hover=\"color\"\n                  disabled={disabled.value}\n                  class={`${uploadPrefix}__dragger-delete-btn`}\n                  onClick={(e: MouseEvent) => props.onRemove({ e, index: 0, file })}\n                >\n                  {locale.value.triggerUploadText.delete}\n                </TLink>\n              </div>\n            )}\n          </div>\n        </div>\n      );\n    };\n\n    const renderDefaultDragElement = () => {\n      const unActiveElement = (\n        <div>\n          <span class={`${uploadPrefix}--highlight`}>{locale.value.triggerUploadText?.normal}</span>\n          <span>&nbsp;&nbsp;/&nbsp;&nbsp;{locale.value.dragger.draggingText}</span>\n        </div>\n      );\n      const activeElement = <div>{locale.value.dragger.dragDropText}</div>;\n      return dragActive.value ? activeElement : unActiveElement;\n    };\n\n    const getContent = () => {\n      const file = displayFiles.value[0];\n      if (file && ['progress', 'success', 'fail', 'waiting'].includes(file.status)) {\n        return renderMainPreview();\n      }\n      return (\n        <div class={`${uploadPrefix}__trigger`} onClick={props.triggerUpload}>\n          {slots.default?.() || renderDefaultDragElement()}\n        </div>\n      );\n    };\n\n    return () => (\n      <div\n        ref={draggerFileRef}\n        class={classes.value}\n        onDrop={drag.handleDrop}\n        onDragenter={drag.handleDragenter}\n        onDragover={drag.handleDragover}\n        onDragleave={drag.handleDragleave}\n      >\n        {props.trigger?.(h, { files: displayFiles.value, dragActive: dragActive.value }) || getContent()}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","commonProps","trigger","Function","triggerUpload","uploadFiles","cancelUpload","dragEvents","Object","setup","slots","toRefs","displayFiles","locale","disabled","useCommonClassName","sizeClassNames","uploadPrefix","classPrefix","drag","useDrag","dragActive","draggerFileRef","ref","classes","computed","_defineProperty","value","status","useGlobalIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","renderImage","file","url","response","_createVNode","ImageViewer","h","open","renderUploading","TLoading","percent","renderMainPreview","fileName","abridgeName","theme","small","fileSizeText","getFileSizeText","size","fileOperationDateText","uploadTime","includes","TLink","e","toUploadFiles","files","cancelUploadText","autoUpload","triggerUploadText","normal","reupload","onRemove","index","renderDefaultDragElement","unActiveElement","dragger","draggingText","activeElement","dragDropText","getContent","handleDrop","handleDragenter","handleDragover","handleDragleave"],"mappings":"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"}