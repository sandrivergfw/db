{"version":3,"file":"normal-file.js","sources":["../../../src/upload/themes/normal-file.tsx"],"sourcesContent":["import { defineComponent, toRefs } from 'vue';\nimport {\n  CloseIcon as TdCloseIcon,\n  TimeFilledIcon as TdTimeFilledIcon,\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n  CloseCircleFilledIcon as TdCloseCircleFilledIcon,\n} from 'tdesign-icons-vue-next';\nimport TLoading from '../../loading';\nimport Link from '../../link';\nimport { useTNodeJSX } from '../../hooks/tnode';\nimport { UploadFile } from '../type';\nimport { abridgeName } from '../../_common/js/upload/utils';\nimport { useGlobalIcon } from '../../hooks/useGlobalIcon';\nimport { CommonDisplayFileProps } from '../interface';\nimport { commonProps } from '../constants';\n\nexport interface NormalFileProps extends CommonDisplayFileProps {\n  multiple: boolean;\n}\n\nconst NormalFile = defineComponent({\n  name: 'UploadNormalFile',\n\n  props: {\n    multiple: Boolean,\n    ...commonProps,\n  },\n\n  setup(props: NormalFileProps, { slots }) {\n    const { theme, disabled, classPrefix, locale } = toRefs(props);\n\n    const { CloseIcon, TimeFilledIcon, CheckCircleFilledIcon, ErrorCircleFilledIcon, CloseCircleFilledIcon } =\n      useGlobalIcon({\n        CloseIcon: TdCloseIcon,\n        TimeFilledIcon: TdTimeFilledIcon,\n        CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n        ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n        CloseCircleFilledIcon: TdCloseCircleFilledIcon,\n      });\n\n    const renderTNodeJSX = useTNodeJSX();\n\n    const uploadPrefix = `${classPrefix.value}-upload`;\n\n    const renderProgress = (percent: number) => (\n      <div class={`${uploadPrefix}__single-progress`}>\n        <TLoading />\n        <span class={`${uploadPrefix}__single-percent`}>{percent || 0}%</span>\n      </div>\n    );\n\n    // 文本型预览\n    const renderFilePreviewAsText = (files: UploadFile[]) => {\n      if (theme.value !== 'file') return null;\n      if (!props.multiple && files[0]?.status === 'fail') {\n        return null;\n      }\n      return files.map((file, index) => (\n        <div\n          class={`${uploadPrefix}__single-display-text ${uploadPrefix}__display-text--margin`}\n          key={file.name + index + file.percent + file.status}\n        >\n          {file.url ? (\n            <Link href={file.url} target=\"_blank\" hover=\"color\" size=\"small\" class={`${uploadPrefix}__single-name`}>\n              {file.name}\n            </Link>\n          ) : (\n            <span class={`${uploadPrefix}__single-name`}>{file.name}</span>\n          )}\n          {file.status === 'fail' && (\n            <div class={`${uploadPrefix}__flow-status`}>\n              <ErrorCircleFilledIcon />\n            </div>\n          )}\n          {file.status === 'waiting' && (\n            <div class={`${uploadPrefix}__flow-status`}>\n              <TimeFilledIcon />\n            </div>\n          )}\n          {file.status === 'progress' && renderProgress(file.percent)}\n          {!disabled.value && file.status !== 'progress' && (\n            <CloseIcon\n              class={`${uploadPrefix}__icon-delete`}\n              onClick={(e: MouseEvent) => props.onRemove({ e, file, index })}\n            />\n          )}\n        </div>\n      ));\n    };\n\n    // 输入框型预览\n    const renderFilePreviewAsInput = () => {\n      if (theme.value !== 'file-input') return;\n      const file = props.displayFiles[0];\n      const inputTextClass = [\n        `${classPrefix.value}-input__inner`,\n        { [`${uploadPrefix}__placeholder`]: !props.displayFiles[0] },\n      ];\n      const disabledClass = disabled.value ? `${classPrefix.value}-is-disabled` : '';\n      const fileName =\n        props.abridgeName?.length && file?.name ? abridgeName(file.name, ...props.abridgeName) : file?.name;\n      return (\n        <div class={`${uploadPrefix}__single-input-preview ${classPrefix.value}-input ${disabledClass}`}>\n          <div class={inputTextClass}>\n            <span class={`${uploadPrefix}__single-input-text`}>{file?.name ? fileName : props.placeholder}</span>\n            {file?.status === 'progress' && renderProgress(file.percent)}\n            {file?.status === 'waiting' && <TimeFilledIcon class={`${uploadPrefix}__status-icon`} />}\n            {file?.url && file.status === 'success' && <CheckCircleFilledIcon class={`${uploadPrefix}__status-icon`} />}\n            {file?.name && file.status === 'fail' && <ErrorCircleFilledIcon class={`${uploadPrefix}__status-icon`} />}\n            {!disabled.value && (\n              <CloseCircleFilledIcon\n                class={`${uploadPrefix}__single-input-clear`}\n                onClick={({ e }: { e: MouseEvent }) => props.onRemove({ e, file, index: 0 })}\n              />\n            )}\n          </div>\n        </div>\n      );\n    };\n\n    return () => {\n      const classes = [`${uploadPrefix}__single`, `${uploadPrefix}__single-${theme.value}`];\n      const fileListDisplay = renderTNodeJSX('fileListDisplay', { params: { files: props.displayFiles } });\n      const { displayFiles } = props;\n      return (\n        <div class={classes}>\n          {theme.value === 'file-input' && renderFilePreviewAsInput()}\n\n          {slots.default?.()}\n\n          {theme.value === 'file' && props.placeholder && !displayFiles[0] && (\n            <small class={props.tipsClasses}>{props.placeholder}</small>\n          )}\n\n          {fileListDisplay || renderFilePreviewAsText(displayFiles)}\n\n          {props.sizeOverLimitMessage && <small class={props.errorClasses}>{props.sizeOverLimitMessage}</small>}\n\n          {/* 单文件上传失败要显示失败的原因 */}\n          {!props.multiple && displayFiles[0]?.status === 'fail' && theme.value === 'file' ? (\n            <small class={props.errorClasses}>\n              {displayFiles[0].response?.error || locale.value.progress.failText}\n            </small>\n          ) : null}\n        </div>\n      );\n    };\n  },\n});\n\nexport default NormalFile;\n"],"names":["NormalFile","defineComponent","name","props","multiple","Boolean","commonProps","setup","slots","toRefs","theme","disabled","classPrefix","locale","useGlobalIcon","CloseIcon","TdCloseIcon","TimeFilledIcon","TdTimeFilledIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","CloseCircleFilledIcon","TdCloseCircleFilledIcon","renderTNodeJSX","useTNodeJSX","uploadPrefix","value","renderProgress","percent","_createVNode","TLoading","renderFilePreviewAsText","files","status","map","file","index","url","Link","e","onRemove","renderFilePreviewAsInput","displayFiles","inputTextClass","disabledClass","fileName","abridgeName","length","_toConsumableArray","placeholder","classes","fileListDisplay","params","tipsClasses","sizeOverLimitMessage","errorClasses","response","error","progress","failText"],"mappings":"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"}