import { PrimaryTableProps } from '../interface';
import { AllValidateResult } from '../../form/type';
import { PrimaryTableRowEditContext, TableRowData, TableErrorListMap } from '../type';
export declare type ErrorListObjectType = PrimaryTableRowEditContext<TableRowData> & {
    errorList: AllValidateResult[];
};
export interface TablePromiseErrorData {
    errors: ErrorListObjectType[];
    errorMap: TableErrorListMap;
}
export default function useRowEdit(props: PrimaryTableProps): {
    errorListMap: import("vue").Ref<TableErrorListMap>;
    editableKeysMap: import("vue").ComputedRef<{
        [key: string]: boolean;
        [key: number]: boolean;
    }>;
    validateTableData: () => Promise<unknown>;
    validateRowData: (rowValue: any) => Promise<unknown>;
    onRuleChange: (context: PrimaryTableRowEditContext<TableRowData>) => void;
    clearValidateData: () => void;
};
