{"version":3,"file":"useTableHeader.js","sources":["../../../src/table/hooks/useTableHeader.tsx"],"sourcesContent":["import { SetupContext, computed, h } from 'vue';\nimport isString from 'lodash/isString';\nimport isFunction from 'lodash/isFunction';\nimport { BaseTableCol, PrimaryTableCol, TableRowData, TdBaseTableProps } from '../type';\nimport { getThRowspanAndColspan, getThList } from './useMultiHeader';\nimport useClassName from './useClassName';\nimport { TNodeReturnValue } from '../../common';\nimport { BaseTableColumns } from '../interface';\nimport TEllipsis from '../ellipsis';\n\n// 渲染表头的通用方法\nexport function renderTitle(slots: SetupContext['slots'], col: BaseTableColumns[0], index: number) {\n  const params = { col, colIndex: index };\n  if (isFunction(col.title)) {\n    return col.title(h, params);\n  }\n  if (isString(col.title) && slots[col.title]) {\n    return slots[col.title](params);\n  }\n  if (isFunction(col.render)) {\n    return (\n      col.render(h, {\n        ...params,\n        type: 'title',\n        row: {},\n        rowIndex: -1,\n      }) || col.title\n    );\n  }\n  return col.title;\n}\n\nexport default function useTableHeader(props: TdBaseTableProps) {\n  const { tableSortClasses, tableFilterClasses } = useClassName();\n  // 一次性获取 colspan 和 rowspan 可以避免其他数据更新导致的重复计算\n  const spansAndLeafNodes = computed(() => getThRowspanAndColspan(props.columns));\n  // 表头二维数据\n  const thList = computed(() => getThList(props.columns));\n  const isMultipleHeader = computed(() => thList.value.length > 1);\n\n  const renderTitleWidthIcon = (\n    [title, sortIcon, filterIcon]: TNodeReturnValue[],\n    col: PrimaryTableCol<TableRowData>,\n    colIndex: number,\n    ellipsisTitle: BaseTableCol['ellipsisTitle'],\n    attach: HTMLElement,\n    extra?: {\n      classPrefix: string;\n      ellipsisOverlayClassName: string;\n    },\n  ) => {\n    const classes = {\n      [tableSortClasses.sortable]: sortIcon,\n      [tableFilterClasses.filterable]: filterIcon,\n    };\n    const content = isFunction(ellipsisTitle) ? ellipsisTitle(h, { col, colIndex }) : undefined;\n    const isEllipsis = ellipsisTitle !== undefined ? Boolean(ellipsisTitle) : Boolean(col.ellipsis);\n    return (\n      <div class={classes}>\n        <div class={tableSortClasses.title}>\n          {isEllipsis ? (\n            <TEllipsis\n              placement=\"bottom\"\n              attach={attach ? () => attach : undefined}\n              tooltipContent={content && (() => content)}\n              tooltipProps={typeof ellipsisTitle === 'object' ? ellipsisTitle : undefined}\n              classPrefix={extra?.classPrefix}\n              overlayClassName={extra?.ellipsisOverlayClassName}\n            >\n              {title}\n            </TEllipsis>\n          ) : (\n            <div>{title}</div>\n          )}\n          {Boolean(sortIcon || filterIcon) && (\n            <div class={tableFilterClasses.iconWrap}>\n              {sortIcon}\n              {filterIcon}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return {\n    thList,\n    isMultipleHeader,\n    spansAndLeafNodes,\n    renderTitleWidthIcon,\n  };\n}\n"],"names":["_isVNode","renderTitle","slots","col","index","params","colIndex","isFunction","title","h","isString","render","type","row","rowIndex","useTableHeader","props","useClassName","tableSortClasses","tableFilterClasses","spansAndLeafNodes","computed","getThRowspanAndColspan","columns","thList","getThList","isMultipleHeader","value","length","renderTitleWidthIcon","ellipsisTitle","attach","extra","_slicedToArray","sortIcon","filterIcon","classes","_defineProperty","sortable","filterable","content","isEllipsis","Boolean","ellipsis","_createVNode","TEllipsis","_typeof","classPrefix","ellipsisOverlayClassName","iconWrap"],"mappings":"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"}