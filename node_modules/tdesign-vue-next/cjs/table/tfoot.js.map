{"version":3,"file":"tfoot.js","sources":["../../src/table/tfoot.tsx"],"sourcesContent":["import { SetupContext, h, defineComponent, PropType, toRefs } from 'vue';\nimport isString from 'lodash/isString';\nimport isFunction from 'lodash/isFunction';\nimport get from 'lodash/get';\nimport { BaseTableCellParams, RowspanColspan, TableRowData, TdBaseTableProps } from './type';\nimport { formatRowAttributes, formatRowClassNames } from './utils';\nimport { getColumnFixedStyles } from './hooks/useFixed';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport useRowspanAndColspan, { getCellKey } from './hooks/useRowspanAndColspan';\nimport { RowAndColFixedPosition } from './interface';\nimport useClassName from './hooks/useClassName';\nimport { Styles } from '../common';\n\nexport interface TFootProps {\n  rowKey: string;\n  // 是否固定表头\n  isFixedHeader: boolean;\n  // 固定列 left/right 具体值\n  rowAndColFixedPosition: RowAndColFixedPosition;\n  footData: TdBaseTableProps['footData'];\n  columns: TdBaseTableProps['columns'];\n  rowAttributes: TdBaseTableProps['rowAttributes'];\n  rowClassName: TdBaseTableProps['rowClassName'];\n  // 表尾吸底内容宽度\n  thWidthList?: { [colKey: string]: number };\n  footerSummary?: TdBaseTableProps['footerSummary'];\n  rowspanAndColspanInFooter: TdBaseTableProps['rowspanAndColspanInFooter'];\n}\n\nexport default defineComponent({\n  name: 'TFoot',\n\n  props: {\n    rowKey: String,\n    isFixedHeader: Boolean,\n    rowAndColFixedPosition: Map as PropType<TFootProps['rowAndColFixedPosition']>,\n    footData: Array as PropType<TFootProps['footData']>,\n    columns: Array as PropType<TFootProps['columns']>,\n    rowAttributes: [Array, Object, Function] as PropType<TFootProps['rowAttributes']>,\n    rowClassName: [Array, String, Object, Function] as PropType<TFootProps['rowClassName']>,\n    thWidthList: [Object] as PropType<TFootProps['thWidthList']>,\n    footerSummary: [String, Function] as PropType<TFootProps['footerSummary']>,\n    rowspanAndColspanInFooter: Function as PropType<TFootProps['rowspanAndColspanInFooter']>,\n  },\n\n  // eslint-disable-next-line\n  setup(props: TFootProps, context: SetupContext) {\n    const renderTNode = useTNodeJSX();\n    const classnames = useClassName();\n    const { footData, columns, rowKey, rowspanAndColspanInFooter } = toRefs(props);\n    const { skipSpansMap } = useRowspanAndColspan(footData, columns, rowKey, rowspanAndColspanInFooter);\n    const renderTFootCell = (p: BaseTableCellParams<TableRowData>) => {\n      const { col, row } = p;\n      if (isFunction(col.foot)) {\n        return col.foot(h, p);\n      }\n      if (isString(col.foot) && context.slots[col.foot]) {\n        return context.slots[col.foot](p) || col.foot;\n      }\n      return col.foot || get(row, col.colKey);\n    };\n\n    return {\n      skipSpansMap,\n      ...classnames,\n      renderTFootCell,\n      renderTNode,\n    };\n  },\n\n  render() {\n    if (!this.columns) return null;\n    const theadClasses = [this.tableFooterClasses.footer, { [this.tableFooterClasses.fixed]: this.isFixedHeader }];\n    const footerDomList = this.footData?.map((row, rowIndex) => {\n      const trAttributes = formatRowAttributes(this.rowAttributes, { row, rowIndex, type: 'foot' });\n      // 自定义行类名\n      const customClasses = formatRowClassNames(\n        this.rowClassName,\n        { row, rowIndex, type: 'foot' },\n        this.rowKey || 'id',\n      );\n      return (\n        <tr {...trAttributes} key={rowIndex} class={customClasses}>\n          {this.columns.map((col, colIndex) => {\n            // 合并单元格过滤\n            const cellSpans: RowspanColspan = {};\n            let spanState = null;\n            if (this.skipSpansMap.size) {\n              const cellKey = getCellKey(row, this.rowKey, col.colKey, colIndex);\n              spanState = this.skipSpansMap.get(cellKey) || {};\n              spanState?.rowspan > 1 && (cellSpans.rowspan = spanState.rowspan);\n              spanState?.colspan > 1 && (cellSpans.colspan = spanState.colspan);\n              if (spanState.skipped) return null;\n            }\n            const tdStyles = getColumnFixedStyles(\n              col,\n              colIndex,\n              this.rowAndColFixedPosition,\n              this.tableColFixedClasses,\n            );\n            const style: Styles = { ...tdStyles.style };\n            if (this.thWidthList?.[col.colKey]) {\n              style.width = `${this.thWidthList[col.colKey]}px`;\n            }\n            return (\n              <td {...{ key: col.colKey, ...cellSpans }} class={tdStyles.classes} style={style}>\n                {this.renderTFootCell({\n                  row,\n                  rowIndex,\n                  col,\n                  colIndex,\n                })}\n              </td>\n            );\n          })}\n        </tr>\n      );\n    });\n    const footerSummary = this.renderTNode('footerSummary');\n    // 都不存在，则不需要渲染 footer\n    if (!footerSummary && (!this.footData || !this.footData.length)) return null;\n    return (\n      <tfoot ref=\"tFooterRef\" class={theadClasses}>\n        {footerSummary && (\n          <tr class={this.tableFullRowClasses.base}>\n            <td colspan={this.columns.length}>\n              <div class={this.tableFullRowClasses.innerFullElement}>{footerSummary}</div>\n            </td>\n          </tr>\n        )}\n        {footerDomList}\n      </tfoot>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","rowKey","String","isFixedHeader","Boolean","rowAndColFixedPosition","Map","footData","Array","columns","rowAttributes","Object","Function","rowClassName","thWidthList","footerSummary","rowspanAndColspanInFooter","setup","context","renderTNode","useTNodeJSX","classnames","useClassName","toRefs","useRowspanAndColspan","skipSpansMap","renderTFootCell","p","col","row","isFunction","foot","h","isString","slots","get","colKey","render","theadClasses","tableFooterClasses","footer","_defineProperty","fixed","footerDomList","map","rowIndex","trAttributes","formatRowAttributes","type","customClasses","formatRowClassNames","_createVNode","_mergeProps","colIndex","cellSpans","spanState","size","cellKey","getCellKey","rowspan","colspan","skipped","tdStyles","getColumnFixedStyles","tableColFixedClasses","style","width","key","classes","length","tableFullRowClasses","base","innerFullElement"],"mappings":"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"}