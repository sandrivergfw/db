{"version":3,"file":"filter-controller.js","sources":["../../src/table/filter-controller.tsx"],"sourcesContent":["import { defineComponent, PropType, ref, h } from 'vue';\nimport { FilterIcon as TdFilterIcon } from 'tdesign-icons-vue-next';\nimport isEmpty from 'lodash/isEmpty';\n\nimport Popup from '../popup';\nimport { CheckboxGroup } from '../checkbox';\nimport { RadioGroup } from '../radio';\nimport Input from '../input';\nimport TButton from '../button';\nimport { useTNodeDefault } from '../hooks/tnode';\nimport { PrimaryTableCol, FilterValue } from './type';\nimport { useConfig } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\n\nexport interface TableFilterControllerProps {\n  tFilterValue: FilterValue;\n  innerFilterValue: FilterValue;\n  tableFilterClasses: {\n    filterable: string;\n    popup: string;\n    icon: string;\n    popupContent: string;\n    result: string;\n    inner: string;\n    bottomButtons: string;\n    contentInner: string;\n    iconWrap: string;\n  };\n  isFocusClass: string;\n  column: PrimaryTableCol;\n  // HTMLElement\n  primaryTableElement: any;\n  onVisibleChange: (val: boolean) => void;\n}\n\nexport default defineComponent({\n  name: 'TableFilterController',\n\n  props: {\n    column: Object as PropType<TableFilterControllerProps['column']>,\n    tFilterValue: Object as PropType<TableFilterControllerProps['tFilterValue']>,\n    innerFilterValue: Object as PropType<TableFilterControllerProps['innerFilterValue']>,\n    tableFilterClasses: Object as PropType<TableFilterControllerProps['tableFilterClasses']>,\n    isFocusClass: String,\n    // eslint-disable-next-line\n    primaryTableElement: {},\n    onVisibleChange: Function as PropType<TableFilterControllerProps['onVisibleChange']>,\n  },\n\n  emits: ['inner-filter-change', 'reset', 'confirm'],\n\n  setup(props: TableFilterControllerProps) {\n    const triggerElementRef = ref<HTMLDivElement>(null);\n    const renderTNode = useTNodeDefault();\n    const { t, globalConfig } = useConfig('table');\n    const { FilterIcon } = useGlobalIcon({ FilterIcon: TdFilterIcon });\n    const filterPopupVisible = ref(false);\n\n    const onFilterPopupVisibleChange = (visible: boolean) => {\n      filterPopupVisible.value = visible;\n      props.onVisibleChange?.(visible);\n    };\n\n    return {\n      t,\n      globalConfig,\n      FilterIcon,\n      filterPopupVisible,\n      triggerElementRef,\n      renderTNode,\n      onFilterPopupVisibleChange,\n    };\n  },\n\n  render() {\n    const getFilterContent = (column: PrimaryTableCol) => {\n      const types = ['single', 'multiple', 'input'];\n      if (column.type && !types.includes(column.filter.type)) {\n        console.error(`TDesign Table Error: column.filter.type must be the following: ${JSON.stringify(types)}`);\n        return;\n      }\n      const component =\n        {\n          single: RadioGroup,\n          multiple: CheckboxGroup,\n          input: Input,\n        }[column.filter.type] || column.filter.component;\n      if (!component && !column.filter.component) return;\n      const filterComponentProps: { [key: string]: any } = {\n        options: ['single', 'multiple'].includes(column.filter.type) ? column.filter?.list : undefined,\n        ...(column.filter?.props || {}),\n        value: this.innerFilterValue?.[column.colKey],\n        onChange: (val: any) => {\n          this.$emit('inner-filter-change', val, column);\n        },\n      };\n      // 允许自定义触发确认搜索的事件\n      if (column.filter.confirmEvents) {\n        column.filter.confirmEvents.forEach((event) => {\n          filterComponentProps[event] = () => {\n            this.$emit('confirm', column);\n            this.filterPopupVisible = false;\n          };\n        });\n      }\n      const renderComponent = () => {\n        if (!component) return null;\n        const isVueComponent = !!component.setup;\n        if (typeof column.filter.component === 'function' && !isVueComponent) {\n          return column.filter.component((v: any, b: any) => {\n            const tProps = typeof b === 'object' && 'attrs' in b ? b.attrs : {};\n            return h(v, {\n              props: { ...filterComponentProps, ...tProps },\n            });\n          });\n        }\n        return <component value={this.innerFilterValue?.[column.colKey]} {...filterComponentProps}></component>;\n      };\n      return <div class={this.tableFilterClasses.contentInner}>{renderComponent()}</div>;\n    };\n\n    const getBottomButtons = (column: PrimaryTableCol) => {\n      if (!column.filter.showConfirmAndReset) return;\n      return (\n        <div class={this.tableFilterClasses.bottomButtons}>\n          <TButton\n            theme=\"default\"\n            size=\"small\"\n            onClick={() => {\n              this.$emit('reset', column);\n              this.filterPopupVisible = false;\n            }}\n          >\n            {this.globalConfig.resetText}\n          </TButton>\n          <TButton\n            theme=\"primary\"\n            size=\"small\"\n            onClick={() => {\n              this.$emit('confirm', column);\n              this.filterPopupVisible = false;\n            }}\n          >\n            {this.globalConfig.confirmText}\n          </TButton>\n        </div>\n      );\n    };\n\n    const column = this.column as any;\n    const FilterIcon = this.FilterIcon as any;\n\n    if (!column.filter || (column.filter && !Object.keys(column.filter).length)) return null;\n    const defaultFilterIcon = this.t(this.globalConfig.filterIcon) || <FilterIcon />;\n    const filterValue = this.tFilterValue?.[column.colKey];\n    const isObjectTrue = typeof filterValue === 'object' && !isEmpty(filterValue);\n    const isValueTrue = filterValue && typeof filterValue !== 'object';\n    return (\n      <Popup\n        attach={this.primaryTableElement ? () => this.primaryTableElement as HTMLElement : undefined}\n        visible={this.filterPopupVisible}\n        destroyOnClose\n        trigger=\"click\"\n        placement=\"bottom-right\"\n        showArrow\n        overlayClassName={this.tableFilterClasses.popup}\n        onVisibleChange={(val: boolean) => this.onFilterPopupVisibleChange(val)}\n        class={[\n          this.tableFilterClasses.icon,\n          {\n            [this.isFocusClass]: isObjectTrue || isValueTrue,\n          },\n        ]}\n        content={() => (\n          <div class={this.tableFilterClasses.popupContent}>\n            {getFilterContent(column)}\n            {getBottomButtons(column)}\n          </div>\n        )}\n      >\n        <div ref=\"triggerElementRef\">{this.renderTNode('filterIcon', defaultFilterIcon)}</div>\n      </Popup>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","column","Object","tFilterValue","innerFilterValue","tableFilterClasses","isFocusClass","String","primaryTableElement","onVisibleChange","Function","emits","setup","triggerElementRef","ref","renderTNode","useTNodeDefault","useConfig","t","globalConfig","useGlobalIcon","FilterIcon","TdFilterIcon","filterPopupVisible","onFilterPopupVisibleChange","visible","value","render","getFilterContent","types","type","includes","filter","console","error","JSON","stringify","component","single","RadioGroup","multiple","CheckboxGroup","input","Input","filterComponentProps","options","list","colKey","onChange","val","$emit","confirmEvents","forEach","event","renderComponent","isVueComponent","v","b","tProps","_typeof","attrs","h","_createVNode","_mergeProps","contentInner","getBottomButtons","showConfirmAndReset","bottomButtons","TButton","resetText","confirmText","keys","length","defaultFilterIcon","filterIcon","filterValue","isObjectTrue","isEmpty","isValueTrue","Popup","popup","icon","_defineProperty","popupContent"],"mappings":"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"}