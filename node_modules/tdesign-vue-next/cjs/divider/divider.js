/**
 * tdesign v0.24.9
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var divider_props = require('./props.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_tnode = require('../hooks/tnode.js');
require('../config-provider/useConfig.js');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/default-config.js');
require('../_common/js/global-config/locale/zh_CN.js');
require('lodash/isFunction');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../utils/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isObject');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _Divider = vue.defineComponent({
  name: "TDivider",
  props: _objectSpread({}, divider_props["default"]),
  setup: function setup(props2) {
    var COMPONENT_NAME = hooks_useConfig.usePrefixClass("divider");
    var renderContent = hooks_tnode.useContent();
    return function () {
      var _ref;
      var layout = props2.layout,
        dashed = props2.dashed,
        align = props2.align;
      var children = renderContent("default", "content");
      var dividerClassNames = ["".concat(COMPONENT_NAME.value), ["".concat(COMPONENT_NAME.value, "--").concat(layout)], (_ref = {}, _defineProperty__default["default"](_ref, "".concat(COMPONENT_NAME.value, "--dashed"), !!dashed), _defineProperty__default["default"](_ref, "".concat(COMPONENT_NAME.value, "--with-text"), !!children), _defineProperty__default["default"](_ref, "".concat(COMPONENT_NAME.value, "--with-text-").concat(align), !!children), _ref)];
      return vue.createVNode("div", {
        "class": dividerClassNames
      }, [children && vue.createVNode("span", {
        "class": "".concat(COMPONENT_NAME.value, "__inner-text")
      }, [children])]);
    };
  }
});

exports["default"] = _Divider;
//# sourceMappingURL=divider.js.map
