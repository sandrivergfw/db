{"version":3,"file":"DateRangePicker.js","sources":["../../src/date-picker/DateRangePicker.tsx"],"sourcesContent":["import { defineComponent, computed, ref, watch } from 'vue';\nimport dayjs from 'dayjs';\nimport { useFormDisabled } from '../form/hooks';\nimport { usePrefixClass } from '../hooks/useConfig';\n\nimport props from './date-range-picker-props';\nimport { DateValue, DateRangePickerPartial } from './type';\n\nimport { RangeInputPopup as TRangeInputPopup } from '../range-input';\nimport TRangePanel from './panel/RangePanel';\nimport useRange from './hooks/useRange';\nimport { initYearMonthTime } from './hooks/useRangeValue';\nimport { parseToDayjs, formatTime, formatDate, isValidDate, getDefaultFormat } from '../_common/js/date-picker/format';\nimport { subtractMonth, addMonth, extractTimeObj } from '../_common/js/date-picker/utils';\n\nexport default defineComponent({\n  name: 'TDateRangePicker',\n\n  props: {\n    ...props,\n  },\n\n  setup(props) {\n    const COMPONENT_NAME = usePrefixClass('date-range-picker');\n\n    const {\n      inputValue,\n      popupVisible,\n      rangeInputProps,\n      popupProps,\n      value,\n      year,\n      month,\n      time,\n      cacheValue,\n      activeIndex,\n      isHoverCell,\n      isFirstValueSelected,\n      onChange,\n    } = useRange(props);\n\n    const disabled = useFormDisabled();\n\n    const formatRef = computed(() =>\n      getDefaultFormat({\n        mode: props.mode,\n        enableTimePicker: props.enableTimePicker,\n        format: props.format,\n        valueType: props.valueType,\n      }),\n    );\n\n    // 记录面板是否选中过\n    const isSelected = ref(false);\n\n    watch(popupVisible, (visible) => {\n      // 面板展开重置数据\n      if (visible) {\n        isSelected.value = false;\n        cacheValue.value = formatDate(value.value || [], {\n          format: formatRef.value.format,\n        }) as string[];\n        time.value = formatTime(\n          value.value || [dayjs().format(formatRef.value.timeFormat), dayjs().format(formatRef.value.timeFormat)],\n          formatRef.value.timeFormat,\n        ) as string[];\n\n        // 空数据重置为当前年月\n        if (!value.value.length) {\n          year.value = initYearMonthTime({ value: value.value, mode: props.mode, format: formatRef.value.format }).year;\n          month.value = initYearMonthTime({\n            value: value.value,\n            mode: props.mode,\n            format: formatRef.value.format,\n            enableTimePicker: props.enableTimePicker,\n          }).month;\n        } else if (value.value.length === 2 && !props.enableTimePicker) {\n          // 确保右侧面板月份比左侧大 避免两侧面板月份一致\n          const nextMonth = value.value.map((v: string) => parseToDayjs(v, formatRef.value.format).month());\n          if (year.value[0] === year.value[1] && nextMonth[0] === nextMonth[1]) {\n            nextMonth[0] === 11 ? (nextMonth[0] -= 1) : (nextMonth[1] += 1);\n          }\n          month.value = nextMonth;\n          year.value = value.value.map((v: string) => parseToDayjs(v, formatRef.value.format).year());\n          // 月份季度选择时需要确保右侧面板年份比左侧大\n          if ((props.mode === 'month' || props.mode === 'quarter') && year.value[0] === year.value[1]) {\n            year.value = [year.value[0], year.value[0] + 1];\n          }\n        } else {\n          year.value = value.value.map((v: string) => parseToDayjs(v, formatRef.value.format).year());\n          if (year.value.length === 1) year.value = [year.value[0], year.value[0]];\n\n          month.value = value.value.map((v: string) => parseToDayjs(v, formatRef.value.format).month());\n          if (month.value.length === 1) month.value = [month.value[0], Math.min(month.value[0] + 1, 11)];\n        }\n      } else {\n        isHoverCell.value = false;\n        isFirstValueSelected.value = false;\n        inputValue.value = formatDate(value.value, {\n          format: formatRef.value.format,\n        });\n      }\n    });\n\n    // 日期 hover\n    function onCellMouseEnter(date: Date) {\n      isHoverCell.value = true;\n      const nextValue = [...(inputValue.value as string[])];\n      nextValue[activeIndex.value] = formatDate(date, {\n        format: formatRef.value.format,\n      }) as string;\n      inputValue.value = nextValue;\n    }\n\n    // 日期 leave\n    function onCellMouseLeave() {\n      isHoverCell.value = false;\n      inputValue.value = cacheValue.value;\n    }\n\n    // 日期点击\n    function onCellClick(date: Date, { e, partial }: { e: MouseEvent; partial: DateRangePickerPartial }) {\n      props.onPick?.(date, { e, partial: activeIndex.value ? 'end' : 'start' });\n\n      isHoverCell.value = false;\n      isSelected.value = true;\n\n      const nextValue = [...(inputValue.value as string[])];\n      nextValue[activeIndex.value] = formatDate(date, {\n        format: formatRef.value.format,\n      }) as string;\n      cacheValue.value = nextValue;\n      inputValue.value = nextValue;\n\n      // date 模式自动切换年月\n      if (props.mode === 'date') {\n        // 选择了不属于面板中展示月份的日期\n        const partialIndex = partial === 'start' ? 0 : 1;\n        const isAdditional = dayjs(date).month() !== month.value[partialIndex];\n        if (isAdditional) {\n          // 保证左侧时间小于右侧\n          if (activeIndex.value === 0) month.value = [dayjs(date).month(), Math.min(dayjs(date).month() + 1, 11)];\n          if (activeIndex.value === 1) month.value = [Math.max(dayjs(date).month() - 1, 0), dayjs(date).month()];\n        }\n      }\n\n      // 有时间选择器走 confirm 逻辑\n      if (props.enableTimePicker) return;\n\n      // 确保两端都是有效值\n      const notValidIndex = nextValue.findIndex((v) => !v || !isValidDate(v, formatRef.value.format));\n\n      // 当两端都有有效值时更改 value\n      if (notValidIndex === -1 && nextValue.length === 2) {\n        // 二次修改时当其中一侧不符合上次区间规范时，清空另一侧数据\n        if (\n          !isFirstValueSelected.value &&\n          parseToDayjs(nextValue[0], formatRef.value.format).isAfter(parseToDayjs(nextValue[1], formatRef.value.format))\n        ) {\n          nextValue[activeIndex.value ? 0 : 1] = '';\n          cacheValue.value = nextValue;\n          inputValue.value = nextValue;\n        } else {\n          onChange?.(\n            formatDate(nextValue, {\n              format: formatRef.value.format,\n              targetFormat: formatRef.value.valueType,\n              autoSwap: true,\n            }) as DateValue[],\n            {\n              dayjsValue: nextValue.map((v) => parseToDayjs(v, formatRef.value.format)),\n              trigger: 'pick',\n            },\n          );\n        }\n      }\n\n      // 首次点击不关闭、确保两端都有有效值并且无时间选择器时点击后自动关闭\n      if (!isFirstValueSelected.value) {\n        let nextIndex = notValidIndex;\n        if (nextIndex === -1) nextIndex = activeIndex.value ? 0 : 1;\n        activeIndex.value = nextIndex;\n        isFirstValueSelected.value = true;\n      } else {\n        popupVisible.value = false;\n      }\n    }\n\n    // 头部快速切换\n    function onJumperClick({ trigger, partial }: { trigger: string; partial: DateRangePickerPartial }) {\n      const partialIndex = partial === 'start' ? 0 : 1;\n\n      const monthCountMap = { date: 1, week: 1, month: 12, quarter: 12, year: 120 };\n      const monthCount = monthCountMap[props.mode] || 0;\n      const current = new Date(year.value[partialIndex], month.value[partialIndex]);\n\n      let next = null;\n      if (trigger === 'prev') {\n        next = subtractMonth(current, monthCount);\n      } else if (trigger === 'current') {\n        next = new Date();\n      } else if (trigger === 'next') {\n        next = addMonth(current, monthCount);\n      }\n\n      const nextYear = [...year.value];\n      nextYear[partialIndex] = next.getFullYear();\n      const nextMonth = [...month.value];\n      nextMonth[partialIndex] = next.getMonth();\n\n      // 保证左侧时间不大于右侧\n      if (partialIndex === 0) {\n        nextYear[1] = Math.max(nextYear[0], nextYear[1]);\n\n        if (nextYear[0] === nextYear[1]) {\n          nextMonth[1] = Math.max(nextMonth[0], nextMonth[1]);\n        }\n      }\n\n      // 保证左侧时间不大于右侧\n      if (partialIndex === 1) {\n        nextYear[0] = Math.min(nextYear[0], nextYear[1]);\n\n        if (nextYear[0] === nextYear[1]) {\n          nextMonth[0] = Math.min(nextMonth[0], nextMonth[1]);\n        }\n      }\n\n      year.value = nextYear;\n      month.value = nextMonth;\n    }\n\n    // time-picker 点击\n    function onTimePickerChange(val: string) {\n      const { hours, minutes, seconds, milliseconds, meridiem } = extractTimeObj(val);\n\n      const nextInputValue = [...(inputValue.value as DateValue[])];\n      const changedInputValue = inputValue.value[activeIndex.value];\n      const currentDate = !dayjs(changedInputValue, formatRef.value.format).isValid()\n        ? dayjs().year(year.value[activeIndex.value]).month(month.value[activeIndex.value])\n        : dayjs(changedInputValue, formatRef.value.format);\n      // am pm 12小时制转化 24小时制\n      let nextHours = hours;\n      if (/am/i.test(meridiem) && nextHours === 12) nextHours -= 12;\n      if (/pm/i.test(meridiem) && nextHours < 12) nextHours += 12;\n\n      const nextDate = currentDate.hour(nextHours).minute(minutes).second(seconds).millisecond(milliseconds).toDate();\n      nextInputValue[activeIndex.value] = nextDate;\n\n      const nextTime = [...time.value];\n      nextTime[activeIndex.value] = val;\n      time.value = nextTime;\n\n      isSelected.value = true;\n      inputValue.value = formatDate(nextInputValue, {\n        format: formatRef.value.format,\n      });\n      cacheValue.value = formatDate(nextInputValue, {\n        format: formatRef.value.format,\n      });\n    }\n\n    // 确定\n    function onConfirmClick() {\n      const nextValue = [...(inputValue.value as string[])];\n\n      const notValidIndex = nextValue.findIndex((v) => !v || !isValidDate(v, formatRef.value.format));\n\n      // 当两端都有有效值时更改 value\n      if (notValidIndex === -1 && nextValue.length === 2) {\n        // 二次修改时当其中一侧不符合上次区间规范时，清空另一侧数据\n        if (\n          !isFirstValueSelected.value &&\n          parseToDayjs(nextValue[0], formatRef.value.format).isAfter(parseToDayjs(nextValue[1], formatRef.value.format))\n        ) {\n          nextValue[activeIndex.value ? 0 : 1] = '';\n          cacheValue.value = nextValue;\n          inputValue.value = nextValue;\n        } else {\n          onChange?.(\n            formatDate(nextValue, {\n              format: formatRef.value.format,\n              targetFormat: formatRef.value.valueType,\n              autoSwap: true,\n            }) as DateValue[],\n            {\n              dayjsValue: nextValue.map((v) => parseToDayjs(v, formatRef.value.format)),\n              trigger: 'confirm',\n            },\n          );\n        }\n      }\n\n      // 首次点击不关闭、确保两端都有有效值并且无时间选择器时点击后自动关闭\n      if (!isFirstValueSelected.value) {\n        let nextIndex = notValidIndex;\n        if (nextIndex === -1) nextIndex = activeIndex.value ? 0 : 1;\n        activeIndex.value = nextIndex;\n        isFirstValueSelected.value = true;\n      } else {\n        popupVisible.value = false;\n      }\n    }\n\n    // 预设\n    function onPresetClick(preset: any) {\n      let presetValue = preset;\n      if (typeof preset === 'function') {\n        presetValue = preset();\n      }\n      if (!Array.isArray(presetValue)) {\n        console.error(`preset: ${preset} 预设值必须是数组!`);\n      } else {\n        onChange?.(\n          formatDate(presetValue, {\n            format: formatRef.value.format,\n            targetFormat: formatRef.value.valueType,\n            autoSwap: true,\n          }) as DateValue[],\n          {\n            dayjsValue: presetValue.map((p) => parseToDayjs(p, formatRef.value.format)),\n            trigger: 'preset',\n          },\n        );\n        popupVisible.value = false;\n      }\n    }\n\n    function onYearChange(nextVal: number, { partial }: { partial: DateRangePickerPartial }) {\n      let partialIndex = partial === 'start' ? 0 : 1;\n      if (props.enableTimePicker) partialIndex = activeIndex.value;\n\n      const nextYear = [...year.value];\n      nextYear[partialIndex] = nextVal;\n      // 保证左侧时间不大于右侧\n      if (partialIndex === 0) nextYear[1] = Math.max(nextYear[0], nextYear[1]);\n      if (partialIndex === 1) nextYear[0] = Math.min(nextYear[0], nextYear[1]);\n\n      year.value = nextYear;\n    }\n\n    function onMonthChange(nextVal: number, { partial }: { partial: DateRangePickerPartial }) {\n      let partialIndex = partial === 'start' ? 0 : 1;\n      if (props.enableTimePicker) partialIndex = activeIndex.value;\n\n      const nextMonth = [...month.value];\n      nextMonth[partialIndex] = nextVal;\n      // 保证左侧时间不大于右侧\n      if (year[0] === year[1]) {\n        if (partialIndex === 0) nextMonth[1] = Math.max(nextMonth[0], nextMonth[1]);\n        if (partialIndex === 1) nextMonth[0] = Math.min(nextMonth[0], nextMonth[1]);\n      }\n\n      month.value = nextMonth;\n    }\n\n    const panelProps = computed(() => ({\n      hoverValue: (isHoverCell.value ? inputValue.value : []) as string[],\n      value: (isSelected.value ? cacheValue.value : value.value) as string[],\n      isFirstValueSelected: isFirstValueSelected.value,\n      activeIndex: activeIndex.value,\n      year: year.value,\n      month: month.value,\n      format: formatRef.value.format,\n      mode: props.mode,\n      presets: props.presets,\n      time: time.value,\n      disableDate: props.disableDate,\n      firstDayOfWeek: props.firstDayOfWeek,\n      timePickerProps: props.timePickerProps,\n      enableTimePicker: props.enableTimePicker,\n      presetsPlacement: props.presetsPlacement,\n      popupVisible: popupVisible.value,\n      panelPreselection: props.panelPreselection,\n      onCellClick,\n      onCellMouseEnter,\n      onCellMouseLeave,\n      onJumperClick,\n      onConfirmClick,\n      onPresetClick,\n      onYearChange,\n      onMonthChange,\n      onTimePickerChange,\n    }));\n\n    return () => (\n      <div class={COMPONENT_NAME.value}>\n        <TRangeInputPopup\n          disabled={disabled.value}\n          status={props.status}\n          tips={props.tips}\n          inputValue={inputValue.value as string[]}\n          popupProps={popupProps.value}\n          rangeInputProps={rangeInputProps.value}\n          popupVisible={popupVisible.value}\n          panel={() => <TRangePanel {...panelProps.value} />}\n        />\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","setup","COMPONENT_NAME","usePrefixClass","useRange","inputValue","popupVisible","rangeInputProps","popupProps","value","year","month","time","cacheValue","activeIndex","isHoverCell","isFirstValueSelected","onChange","disabled","useFormDisabled","formatRef","computed","getDefaultFormat","mode","enableTimePicker","format","valueType","isSelected","ref","watch","visible","formatDate","formatTime","dayjs","timeFormat","length","initYearMonthTime","nextMonth","map","v","parseToDayjs","Math","min","onCellMouseEnter","date","nextValue","_toConsumableArray","onCellMouseLeave","onCellClick","e","partial","onPick","partialIndex","isAdditional","max","notValidIndex","findIndex","isValidDate","isAfter","targetFormat","autoSwap","dayjsValue","trigger","nextIndex","onJumperClick","monthCountMap","week","quarter","monthCount","current","Date","next","subtractMonth","addMonth","nextYear","getFullYear","getMonth","onTimePickerChange","val","extractTimeObj","hours","minutes","seconds","milliseconds","meridiem","nextInputValue","changedInputValue","currentDate","isValid","nextHours","test","nextDate","hour","minute","second","millisecond","toDate","nextTime","onConfirmClick","onPresetClick","preset","presetValue","Array","isArray","console","error","p","onYearChange","nextVal","onMonthChange","panelProps","hoverValue","presets","disableDate","firstDayOfWeek","timePickerProps","presetsPlacement","panelPreselection","_createVNode","status","tips"],"mappings":"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"}