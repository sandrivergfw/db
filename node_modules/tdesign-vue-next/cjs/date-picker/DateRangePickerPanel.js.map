{"version":3,"file":"DateRangePickerPanel.js","sources":["../../src/date-picker/DateRangePickerPanel.tsx"],"sourcesContent":["import { defineComponent, computed, ref } from 'vue';\nimport dayjs from 'dayjs';\n\nimport dateRangePickerPanelProps from './date-range-picker-panel-props';\nimport dateRangePickerProps from './date-range-picker-props';\nimport {\n  DateValue,\n  DateRangePickerPartial,\n  TdDateRangePickerPanelProps,\n  DatePickerYearChangeTrigger,\n  DatePickerMonthChangeTrigger,\n} from './type';\n\nimport TRangePanel from './panel/RangePanel';\nimport useRangeValue from './hooks/useRangeValue';\nimport { formatDate, getDefaultFormat, parseToDayjs } from '../_common/js/date-picker/format';\nimport { subtractMonth, addMonth, extractTimeObj } from '../_common/js/date-picker/utils';\n\nexport default defineComponent({\n  name: 'TDateRangePickerPanel',\n\n  props: {\n    value: dateRangePickerProps.value,\n    defaultValue: dateRangePickerProps.defaultValue,\n    modelValue: dateRangePickerProps.modelValue,\n    disabled: dateRangePickerProps.disabled,\n    disableDate: dateRangePickerProps.disableDate,\n    enableTimePicker: dateRangePickerProps.enableTimePicker,\n    firstDayOfWeek: dateRangePickerProps.firstDayOfWeek,\n    format: dateRangePickerProps.format,\n    mode: dateRangePickerProps.mode,\n    presets: dateRangePickerProps.presets,\n    presetsPlacement: dateRangePickerProps.presetsPlacement,\n    timePickerProps: dateRangePickerProps.timePickerProps,\n    panelPreselection: dateRangePickerProps.panelPreselection,\n    ...dateRangePickerPanelProps,\n  },\n\n  setup(props: TdDateRangePickerPanelProps) {\n    const { value, year, month, time, cacheValue, isFirstValueSelected, onChange } = useRangeValue(props);\n\n    const formatRef = computed(() =>\n      getDefaultFormat({\n        mode: props.mode,\n        enableTimePicker: props.enableTimePicker,\n        format: props.format,\n      }),\n    );\n\n    // 记录面板是否选中过\n    const isSelected = ref(false);\n    const isHoverCell = ref(false);\n    const hoverValue = ref([]);\n    const activeIndex = computed(() => (isFirstValueSelected.value ? 1 : 0));\n\n    // 日期 hover\n    function onCellMouseEnter(date: Date) {\n      isHoverCell.value = true;\n      const nextValue = [...(hoverValue.value as string[])];\n      nextValue[activeIndex.value] = formatDate(date, {\n        format: formatRef.value.format,\n      }) as string;\n      hoverValue.value = nextValue;\n    }\n\n    // 日期 leave\n    function onCellMouseLeave() {\n      isHoverCell.value = false;\n      hoverValue.value = cacheValue.value as string[];\n    }\n\n    // 日期点击\n    function onCellClick(date: Date, { e }: { e: MouseEvent }) {\n      props.onCellClick?.({\n        e,\n        partial: activeIndex.value ? 'end' : 'start',\n        date: value.value.map((v) => dayjs(v).toDate()),\n      });\n\n      isHoverCell.value = false;\n      isSelected.value = true;\n\n      const nextValue = [...(cacheValue.value as string[])];\n      nextValue[activeIndex.value] = formatDate(date, {\n        format: formatRef.value.format,\n      }) as string;\n      cacheValue.value = nextValue;\n\n      // 有时间选择器走 confirm 逻辑\n      if (props.enableTimePicker) return;\n\n      // 首次点击不关闭、确保两端都有有效值并且无时间选择器时点击后自动关闭\n      if (nextValue.length === 2 && isFirstValueSelected.value) {\n        onChange?.(\n          formatDate(nextValue, {\n            format: formatRef.value.format,\n            autoSwap: true,\n          }) as DateValue[],\n          {\n            dayjsValue: nextValue.map((v) => parseToDayjs(v, formatRef.value.format)),\n            trigger: 'pick',\n          },\n        );\n        isFirstValueSelected.value = false;\n      } else {\n        isFirstValueSelected.value = true;\n      }\n    }\n\n    // 头部快速切换\n    function onJumperClick({ trigger, partial }: { trigger: string; partial: DateRangePickerPartial }) {\n      const partialIndex = partial === 'start' ? 0 : 1;\n\n      const triggerMap = {\n        prev: 'arrow-previous',\n        next: 'arrow-next',\n      };\n      const monthCountMap = { date: 1, month: 12, year: 120 };\n      const monthCount = monthCountMap[props.mode] || 0;\n      const current = new Date(year.value[partialIndex], month.value[partialIndex]);\n\n      let next = null;\n      if (trigger === 'prev') {\n        next = subtractMonth(current, monthCount);\n      } else if (trigger === 'current') {\n        next = new Date();\n      } else if (trigger === 'next') {\n        next = addMonth(current, monthCount);\n      }\n\n      const nextYear = [...year.value];\n      nextYear[partialIndex] = next.getFullYear();\n      const nextMonth = [...month.value];\n      nextMonth[partialIndex] = next.getMonth();\n\n      // 保证左侧时间不大于右侧\n      if (partialIndex === 0) {\n        nextYear[1] = Math.max(nextYear[0], nextYear[1]);\n\n        if (nextYear[0] === nextYear[1]) {\n          nextMonth[1] = Math.max(nextMonth[0], nextMonth[1]);\n        }\n      }\n\n      // 保证左侧时间不大于右侧\n      if (partialIndex === 1) {\n        nextYear[0] = Math.min(nextYear[0], nextYear[1]);\n\n        if (nextYear[0] === nextYear[1]) {\n          nextMonth[0] = Math.min(nextMonth[0], nextMonth[1]);\n        }\n      }\n\n      if (year.value.some((y) => !nextYear.includes(y))) {\n        props.onYearChange?.({\n          partial,\n          year: nextYear[partialIndex],\n          date: value.value.map((v) => dayjs(v).toDate()),\n          trigger: trigger === 'current' ? 'today' : (`year-${triggerMap[trigger]}` as DatePickerYearChangeTrigger),\n        });\n      }\n      if (month.value.some((m) => !nextMonth.includes(m))) {\n        props.onMonthChange?.({\n          partial,\n          month: nextMonth[partialIndex],\n          date: value.value.map((v) => dayjs(v).toDate()),\n          trigger: trigger === 'current' ? 'today' : (`month-${triggerMap[trigger]}` as DatePickerMonthChangeTrigger),\n        });\n      }\n\n      year.value = nextYear;\n      month.value = nextMonth;\n    }\n\n    // time-picker 点击\n    function onTimePickerChange(val: string) {\n      const { hours, minutes, seconds, milliseconds, meridiem } = extractTimeObj(val);\n\n      const nextInputValue = [...(cacheValue.value as DateValue[])];\n      const changedInputValue = cacheValue.value[activeIndex.value];\n      const currentDate = !dayjs(changedInputValue, formatRef.value.format).isValid()\n        ? dayjs().year(year.value[activeIndex.value]).month(month.value[activeIndex.value])\n        : dayjs(changedInputValue, formatRef.value.format);\n      // am pm 12小时制转化 24小时制\n      let nextHours = hours;\n      if (/am/i.test(meridiem) && nextHours === 12) nextHours -= 12;\n      if (/pm/i.test(meridiem) && nextHours < 12) nextHours += 12;\n\n      const nextDate = currentDate.hour(nextHours).minute(minutes).second(seconds).millisecond(milliseconds).toDate();\n      nextInputValue[activeIndex.value] = nextDate;\n\n      const nextTime = [...time.value];\n      nextTime[activeIndex.value] = val;\n      time.value = nextTime;\n\n      isSelected.value = true;\n      cacheValue.value = formatDate(nextInputValue, {\n        format: formatRef.value.format,\n      });\n\n      props.onTimeChange?.({\n        time: val,\n        date: value.value.map((v) => parseToDayjs(v, formatRef.value.format).toDate()),\n        partial: activeIndex.value ? 'end' : 'start',\n        trigger: 'time-hour',\n      });\n    }\n\n    // 确定\n    function onConfirmClick({ e }: { e: MouseEvent }) {\n      const nextValue = [...(cacheValue.value as string[])];\n\n      // 首次点击不关闭、确保两端都有有效值并且无时间选择器时点击后自动关闭\n      if (nextValue.length === 2 && isFirstValueSelected.value) {\n        onChange?.(\n          formatDate(nextValue, {\n            format: formatRef.value.format,\n            autoSwap: true,\n          }) as DateValue[],\n          {\n            dayjsValue: nextValue.map((v) => parseToDayjs(v, formatRef.value.format)),\n            trigger: 'confirm',\n          },\n        );\n        year.value = nextValue.map((v) => dayjs(v, formatRef.value.format).year());\n        month.value = nextValue.map((v) => dayjs(v, formatRef.value.format).month());\n        isFirstValueSelected.value = false;\n      } else {\n        isFirstValueSelected.value = true;\n      }\n\n      props.onConfirm?.({ date: value.value.map((v) => dayjs(v).toDate()), e });\n    }\n\n    // 预设\n    function onPresetClick(preset: any) {\n      let presetValue = preset;\n      if (typeof preset === 'function') {\n        presetValue = preset();\n      }\n      if (!Array.isArray(presetValue)) {\n        console.error(`preset: ${preset} 预设值必须是数组!`);\n      } else {\n        onChange?.(\n          formatDate(presetValue, {\n            format: formatRef.value.format,\n            autoSwap: true,\n          }) as DateValue[],\n          {\n            dayjsValue: presetValue.map((p) => parseToDayjs(p, formatRef.value.format)),\n            trigger: 'preset',\n          },\n        );\n      }\n    }\n\n    function onYearChange(nextVal: number, { partial }: { partial: DateRangePickerPartial }) {\n      let partialIndex = partial === 'start' ? 0 : 1;\n      if (props.enableTimePicker) partialIndex = activeIndex.value;\n\n      const nextYear = [...year.value];\n      nextYear[partialIndex] = nextVal;\n      // 保证左侧时间不大于右侧\n      if (partialIndex === 0) nextYear[1] = Math.max(nextYear[0], nextYear[1]);\n      if (partialIndex === 1) nextYear[0] = Math.min(nextYear[0], nextYear[1]);\n\n      year.value = nextYear;\n\n      props.onYearChange?.({\n        partial,\n        year: nextYear[partialIndex],\n        date: value.value.map((v) => dayjs(v).toDate()),\n        trigger: 'year-select',\n      });\n    }\n\n    function onMonthChange(nextVal: number, { partial }: { partial: DateRangePickerPartial }) {\n      let partialIndex = partial === 'start' ? 0 : 1;\n      if (props.enableTimePicker) partialIndex = activeIndex.value;\n\n      const nextMonth = [...month.value];\n      nextMonth[partialIndex] = nextVal;\n      // 保证左侧时间不大于右侧\n      if (year[0] === year[1]) {\n        if (partialIndex === 0) nextMonth[1] = Math.max(nextMonth[0], nextMonth[1]);\n        if (partialIndex === 1) nextMonth[0] = Math.min(nextMonth[0], nextMonth[1]);\n      }\n\n      month.value = nextMonth;\n\n      props.onMonthChange?.({\n        partial,\n        month: nextMonth[partialIndex],\n        date: value.value.map((v) => dayjs(v).toDate()),\n        trigger: 'month-select',\n      });\n    }\n\n    const panelProps = computed(() => ({\n      hoverValue: (isHoverCell.value ? hoverValue.value : []) as string[],\n      value: (isSelected.value ? cacheValue.value : value.value) as string[],\n      activeIndex: activeIndex.value,\n      year: year.value,\n      month: month.value,\n      mode: props.mode,\n      format: formatRef.value.format,\n      presets: props.presets,\n      time: time.value,\n      disableDate: props.disableDate,\n      firstDayOfWeek: props.firstDayOfWeek,\n      timePickerProps: props.timePickerProps,\n      enableTimePicker: props.enableTimePicker,\n      presetsPlacement: props.presetsPlacement,\n      panelPreselection: props.panelPreselection,\n      panelClick: props.onPanelClick,\n      onCellClick,\n      onCellMouseEnter,\n      onCellMouseLeave,\n      onJumperClick,\n      onConfirmClick,\n      onPresetClick,\n      onYearChange,\n      onMonthChange,\n      onTimePickerChange,\n    }));\n\n    return () => <TRangePanel {...panelProps.value} />;\n  },\n});\n"],"names":["defineComponent","name","props","value","dateRangePickerProps","defaultValue","modelValue","disabled","disableDate","enableTimePicker","firstDayOfWeek","format","mode","presets","presetsPlacement","timePickerProps","panelPreselection","dateRangePickerPanelProps","setup","useRangeValue","year","month","time","cacheValue","isFirstValueSelected","onChange","formatRef","computed","getDefaultFormat","isSelected","ref","isHoverCell","hoverValue","activeIndex","onCellMouseEnter","date","nextValue","_toConsumableArray","formatDate","onCellMouseLeave","onCellClick","e","partial","map","v","dayjs","toDate","length","autoSwap","dayjsValue","parseToDayjs","trigger","onJumperClick","partialIndex","triggerMap","prev","next","monthCountMap","monthCount","current","Date","subtractMonth","addMonth","nextYear","getFullYear","nextMonth","getMonth","Math","max","min","some","y","includes","onYearChange","m","onMonthChange","onTimePickerChange","val","extractTimeObj","hours","minutes","seconds","milliseconds","meridiem","nextInputValue","changedInputValue","currentDate","isValid","nextHours","test","nextDate","hour","minute","second","millisecond","nextTime","onTimeChange","onConfirmClick","onConfirm","onPresetClick","preset","presetValue","Array","isArray","console","error","p","nextVal","panelProps","panelClick","onPanelClick"],"mappings":"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"}