{"version":3,"file":"step-item.js","sources":["../../src/steps/step-item.tsx"],"sourcesContent":["import { computed, defineComponent, h, inject } from 'vue';\nimport isFunction from 'lodash/isFunction';\nimport { CheckIcon as TdCheckIcon, CloseIcon as TdCloseIcon } from 'tdesign-icons-vue-next';\n\nimport props from './step-item-props';\nimport { SlotReturnValue } from '../common';\nimport { useConfig, usePrefixClass } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport { useTNodeJSX, useContent } from '../hooks';\n\nexport default defineComponent({\n  name: 'TStepItem',\n  props: { ...props, index: Number },\n\n  setup(props) {\n    const stepsState = inject('StepsState', undefined);\n    const stepsProps = inject('StepsProps', undefined);\n\n    const { globalConfig } = useConfig('steps');\n    const { CheckIcon, CloseIcon } = useGlobalIcon({ CheckIcon: TdCheckIcon, CloseIcon: TdCloseIcon });\n    const canClick = computed(() => {\n      return props.status !== 'process' && !stepsProps?.readonly;\n    });\n\n    // when props.value is undefined\n    const onStepClick = (e: MouseEvent) => {\n      if (!canClick.value) return;\n      const val = props.value === undefined ? props.index : props.value;\n      stepsState.setCurrent(val, stepsState.current, { e });\n    };\n\n    // class\n    const COMPONENT_NAME = usePrefixClass('steps-item');\n    const statusClass = computed(() => ({ [`${COMPONENT_NAME.value}--${props.status}`]: props.status }));\n    const baseClass = computed(() => [COMPONENT_NAME.value, statusClass.value]);\n    const iconClass = computed(() => [`${COMPONENT_NAME.value}__icon`, statusClass.value]);\n\n    // render\n    const renderTNodeJSX = useTNodeJSX();\n    const renderContent = useContent();\n    const renderIcon = () => {\n      let defaultIcon;\n      if (stepsProps.theme === 'default') {\n        let icon: SlotReturnValue = '';\n        switch (props.status) {\n          case 'finish':\n            icon = <CheckIcon />;\n            break;\n          case 'error':\n            if (isFunction(globalConfig.value.errorIcon)) {\n              icon = globalConfig.value.errorIcon(h);\n            } else {\n              icon = <CloseIcon />;\n            }\n            break;\n          default:\n            icon = String(props.index + 1);\n            break;\n        }\n        defaultIcon = <span class={`${COMPONENT_NAME.value}__icon--number`}>{icon}</span>;\n      }\n      return renderTNodeJSX('icon', defaultIcon);\n    };\n\n    return () => (\n      <div class={baseClass.value}>\n        <div\n          class={`${COMPONENT_NAME.value}__inner ${canClick.value ? `${COMPONENT_NAME.value}--clickable` : ''}`}\n          onClick={onStepClick}\n        >\n          <div class={iconClass.value}>{renderIcon()}</div>\n          <div class={`${COMPONENT_NAME.value}__content`}>\n            <div class={`${COMPONENT_NAME.value}__title`}>{renderTNodeJSX('title')}</div>\n            <div class={`${COMPONENT_NAME.value}__description`}>{renderContent('default', 'content')}</div>\n            <div class={`${COMPONENT_NAME.value}__extra`}>{renderTNodeJSX('extra')}</div>\n          </div>\n        </div>\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","index","Number","setup","stepsState","inject","stepsProps","useConfig","globalConfig","useGlobalIcon","CheckIcon","TdCheckIcon","CloseIcon","TdCloseIcon","canClick","computed","status","readonly","onStepClick","e","value","val","setCurrent","current","COMPONENT_NAME","usePrefixClass","statusClass","baseClass","iconClass","renderTNodeJSX","useTNodeJSX","renderContent","useContent","renderIcon","defaultIcon","theme","icon","_createVNode","isFunction","errorIcon","h","String"],"mappings":"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"}