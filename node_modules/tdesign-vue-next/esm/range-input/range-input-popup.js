/**
 * tdesign v0.24.9
 * (c) 2022 tdesign
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, computed, createVNode, mergeProps } from 'vue';
import { Popup } from '../popup/index.js';
import { usePrefixClass } from '../hooks/useConfig.js';
import _RangeInput from './range-input.js';
import props from './range-input-popup-props.js';
import useOverlayInnerStyle from '../select-input/useOverlayInnerStyle.js';
import '../popup/popup.js';
import '@babel/runtime/helpers/typeof';
import '@babel/runtime/helpers/slicedToArray';
import '@popperjs/core';
import '../utils/dom.js';
import '../_chunks/dep-ff6303d0.js';
import 'lodash/isString';
import '../utils/easing.js';
import '../utils/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isFunction';
import 'lodash/isObject';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../_common/js/utils/set-style.js';
import '../popup/props.js';
import '../popup/container.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../hooks/useVModel.js';
import '../utils/withInstall.js';
import '../popup/style';
import '../popup/type.js';
import '../config-provider/useConfig.js';
import '../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import '../_common/js/global-config/default-config.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../config-provider/type.js';
import 'tdesign-icons-vue-next';
import '../input/index.js';
import '../input/input.js';
import '@babel/runtime/helpers/objectWithoutProperties';
import '../input/props.js';
import '../form/hooks.js';
import '../hooks/useGlobalIcon.js';
import '../hooks/tnode.js';
import '../input/useInput.js';
import '../form/const.js';
import '../hooks/index.js';
import '../hooks/icon.js';
import '../hooks/slot.js';
import '../hooks/useCommonClassName.js';
import '../hooks/useDefaultValue.js';
import '../hooks/useDestroyOnClose.js';
import '../hooks/useKeepAnimation.js';
import '../hooks/useRipple.js';
import '../utils/set-style.js';
import '../hooks/useVirtualScroll.js';
import '../input/useLengthLimit.js';
import '../_common/js/log/index.js';
import '../_common/js/log/log.js';
import '../_common/js/utils/helper.js';
import '../input/useInputEventHandler.js';
import '../input/useInputWidth.js';
import '../input/input-group.js';
import '../input/style';
import '../input/type.js';
import './props.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _RangeInputPopup = defineComponent({
  name: "TRangeInputPopup",
  props: props,
  setup: function setup(props2) {
    var COMPONENT_NAME = usePrefixClass("range-input-popup");
    var _useOverlayInnerStyle = useOverlayInnerStyle(props2),
      tOverlayInnerStyle = _useOverlayInnerStyle.tOverlayInnerStyle,
      innerPopupVisible = _useOverlayInnerStyle.innerPopupVisible,
      onInnerPopupVisibleChange = _useOverlayInnerStyle.onInnerPopupVisibleChange;
    var popupClasses = computed(function () {
      return [COMPONENT_NAME.value, _defineProperty({}, "".concat(COMPONENT_NAME.value, "--visible"), props2.popupVisible || innerPopupVisible.value)];
    });
    return function () {
      return createVNode("div", {
        "class": popupClasses.value
      }, [createVNode(Popup, mergeProps({
        "hideEmptyPopup": true,
        "content": props2.panel,
        "trigger": "click",
        "placement": "bottom-left",
        "disabled": props2.disabled,
        "visible": props2.popupVisible || innerPopupVisible.value
      }, _objectSpread({
        overlayInnerStyle: tOverlayInnerStyle.value,
        onVisibleChange: onInnerPopupVisibleChange
      }, props2.popupProps)), {
        "default": function _default() {
          return [createVNode(_RangeInput, _objectSpread({
            value: props2.inputValue,
            onChange: props2.onInputChange,
            disabled: props2.disabled,
            status: props2.status,
            tips: props2.tips
          }, props2.rangeInputProps), null)];
        }
      })]);
    };
  }
});

export { _RangeInputPopup as default };
//# sourceMappingURL=range-input-popup.js.map
