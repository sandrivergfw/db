{"version":3,"file":"checkbox.js","sources":["../../src/checkbox/checkbox.tsx"],"sourcesContent":["import { defineComponent, ref, toRefs, computed, inject } from 'vue';\nimport props from './props';\nimport useVModel from '../hooks/useVModel';\nimport { useFormDisabled } from '../form/hooks';\nimport useRipple from '../hooks/useRipple';\nimport { useContent } from '../hooks/tnode';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { CheckboxGroupInjectionKey } from './constants';\n\nexport default defineComponent({\n  name: 'TCheckbox',\n  props: {\n    ...props,\n    needRipple: Boolean,\n    stopLabelTrigger: Boolean,\n  },\n\n  setup(props) {\n    const labelRef = ref<HTMLElement>();\n    if (props.needRipple) {\n      useRipple(labelRef);\n    }\n\n    const { checked, modelValue } = toRefs(props);\n    const [innerChecked, setInnerChecked] = useVModel(\n      checked,\n      modelValue,\n      props.defaultChecked,\n      props.onChange,\n      'checked',\n    );\n\n    const checkboxGroup = inject(CheckboxGroupInjectionKey, undefined);\n    const GroupDisabled = computed(() => {\n      return props.disabled || !!checkboxGroup?.disabled;\n    });\n    const formDisabled = useFormDisabled(GroupDisabled);\n\n    const name = computed<string>(() => props.name || checkboxGroup?.name);\n\n    const selfChecked = computed<boolean>(() => {\n      if (props.checkAll) return checkboxGroup?.isCheckAll;\n      return checkboxGroup ? !!checkboxGroup.checkedMap[props.value] : innerChecked.value;\n    });\n\n    const disabled = computed<boolean>(() => {\n      if (formDisabled) return formDisabled.value;\n      if (!props.checkAll && !selfChecked.value && checkboxGroup?.maxExceeded) {\n        return true;\n      }\n      if (props.disabled !== undefined) return props.disabled;\n      return !!checkboxGroup?.disabled;\n    });\n\n    const selfIndeterminate = computed<boolean>(() => {\n      if (props.checkAll) return checkboxGroup?.indeterminate;\n      return props.indeterminate;\n    });\n\n    /** 样式计算相关逻辑 */\n    const classPrefix = usePrefixClass();\n    const COMPONENT_NAME = usePrefixClass('checkbox');\n    const labelClasses = computed(() => [\n      `${COMPONENT_NAME.value}`,\n      {\n        [`${classPrefix.value}-is-checked`]: selfChecked.value,\n        [`${classPrefix.value}-is-disabled`]: disabled.value,\n        [`${classPrefix.value}-is-indeterminate`]: selfIndeterminate.value,\n      },\n    ]);\n\n    // methods\n    const handleChange = (e: Event) => {\n      if (props.readonly) return;\n      const checked = !selfChecked.value;\n      setInnerChecked(checked, { e });\n      if (checkboxGroup && checkboxGroup.handleCheckboxChange) {\n        checkboxGroup.onCheckedChange({ checked, checkAll: props.checkAll, e, option: props });\n      }\n    };\n\n    const renderContent = useContent();\n\n    const handleLabelClick = (e: MouseEvent) => {\n      // 在tree等组件中使用  阻止label触发checked 与expand冲突\n      if (props.stopLabelTrigger) e.preventDefault();\n    };\n\n    return () => (\n      <label class={labelClasses.value} ref=\"labelRef\">\n        <input\n          type=\"checkbox\"\n          class={`${COMPONENT_NAME.value}__former`}\n          disabled={disabled.value}\n          readonly={props.readonly}\n          indeterminate={props.indeterminate}\n          name={name.value}\n          value={props.value}\n          checked={selfChecked.value}\n          onChange={handleChange}\n        ></input>\n        <span class={`${COMPONENT_NAME.value}__input`}></span>\n        <span class={`${COMPONENT_NAME.value}__label`} onClick={handleLabelClick}>\n          {renderContent('default', 'label')}\n        </span>\n      </label>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","needRipple","Boolean","stopLabelTrigger","setup","labelRef","ref","useRipple","toRefs","checked","modelValue","useVModel","defaultChecked","onChange","innerChecked","setInnerChecked","checkboxGroup","inject","CheckboxGroupInjectionKey","GroupDisabled","computed","disabled","formDisabled","useFormDisabled","selfChecked","checkAll","isCheckAll","checkedMap","value","maxExceeded","selfIndeterminate","indeterminate","classPrefix","usePrefixClass","COMPONENT_NAME","labelClasses","handleChange","e","readonly","handleCheckboxChange","onCheckedChange","option","renderContent","useContent","handleLabelClick","preventDefault","_createVNode"],"mappings":"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"}