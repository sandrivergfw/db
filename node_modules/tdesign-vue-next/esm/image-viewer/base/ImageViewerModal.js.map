{"version":3,"file":"ImageViewerModal.js","sources":["../../../src/image-viewer/base/ImageViewerModal.tsx"],"sourcesContent":["import { computed, defineComponent, PropType } from 'vue';\nimport TDialog from '../../dialog';\nimport TImageItem from './ImageItem';\nimport TImageViewerUtils from './ImageViewerUtils';\nimport { usePrefixClass } from '../../hooks/useConfig';\nimport { useTNodeJSX } from '../../hooks/tnode';\nimport { ImageInfo, TdImageViewerProps } from '../type';\nimport props from '../props';\n\nexport default defineComponent({\n  name: 'TImageViewerModal',\n  props: {\n    zIndex: Number,\n    visible: Boolean,\n    index: Number,\n    images: props.images,\n    scale: Number,\n    rotate: Number,\n    mirror: Number,\n    title: props.title,\n    currentImage: {\n      type: Object as PropType<ImageInfo>,\n      default() {\n        return {};\n      },\n    },\n    onRotate: Function as PropType<() => void>,\n    onZoomIn: Function as PropType<() => void>,\n    onZoomOut: Function as PropType<() => void>,\n    onMirror: Function as PropType<() => void>,\n    onReset: Function as PropType<() => void>,\n    onClose: props.onClose,\n    draggable: {\n      type: Boolean,\n      default: true,\n    },\n    viewerScale: {\n      type: Object as PropType<TdImageViewerProps['viewerScale']>,\n      default() {\n        return {};\n      },\n    },\n    showOverlay: Boolean,\n    closeBtn: props.closeBtn,\n  },\n  setup(props) {\n    const classPrefix = usePrefixClass();\n    const renderJSX = useTNodeJSX();\n    const style = computed(() => ({\n      minWidth: props.viewerScale.minWidth,\n      minHeight: props.viewerScale.minHeight,\n    }));\n\n    return () => (\n      <TDialog\n        destroyOnClose\n        attach=\"body\"\n        onClose={props.onClose}\n        visible={props.visible}\n        placement=\"center\"\n        mode=\"modeless\"\n        width={1000}\n        cancelBtn={null}\n        confirmBtn={null}\n        draggable={props.draggable}\n        zIndex={props.zIndex}\n        showOverlay={props.showOverlay}\n        class={`${classPrefix.value}-image-viewer__dialog`}\n        header={renderJSX('title', '')}\n        footer={() => (\n          <div class={`${classPrefix.value}-image-viewer-mini__footer`}>\n            <TImageViewerUtils\n              onZoomIn={props.onZoomIn}\n              onZoomOut={props.onZoomOut}\n              scale={props.scale}\n              currentImage={props.currentImage}\n              onRotate={props.onRotate}\n              onMirror={props.onMirror}\n              onReset={props.onReset}\n            />\n          </div>\n        )}\n      >\n        <div class={`${classPrefix.value}-image-viewer-mini__content`} style={style.value}>\n          <TImageItem\n            rotate={props.rotate}\n            scale={props.scale}\n            mirror={props.mirror}\n            src={props.currentImage.mainImage}\n            placementSrc={props.currentImage.thumbnail}\n          />\n        </div>\n      </TDialog>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","zIndex","Number","visible","Boolean","index","images","scale","rotate","mirror","title","currentImage","type","Object","onRotate","Function","onZoomIn","onZoomOut","onMirror","onReset","onClose","draggable","viewerScale","showOverlay","closeBtn","setup","classPrefix","usePrefixClass","renderJSX","useTNodeJSX","style","computed","minWidth","minHeight","_createVNode","TDialog","value","mainImage","thumbnail"],"mappings":"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"}