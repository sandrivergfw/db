/**
 * tdesign v0.24.9
 * (c) 2022 tdesign
 * @license MIT
 */

import { defineComponent, provide, computed, createVNode } from 'vue';
import cloneDeep from 'lodash/cloneDeep';
import { useTNodeJSX } from '../hooks/tnode.js';
import { defaultGlobalConfig, configProviderInjectKey, mergeWith } from './context.js';
import 'lodash/isFunction';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../utils/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isString';
import 'lodash/isObject';
import 'lodash/mergeWith';
import 'lodash/merge';
import '../_common/js/global-config/default-config.js';
import '../_common/js/global-config/locale/zh_CN.js';

var _ConfigProvider = defineComponent({
  name: "TConfigProvider",
  props: {
    globalConfig: Object
  },
  setup: function setup(props) {
    var defaultData = cloneDeep(defaultGlobalConfig);
    provide(configProviderInjectKey, computed(function () {
      return mergeWith(defaultData, props.globalConfig);
    }));
    var renderTNodeJSX = useTNodeJSX();
    return function () {
      return createVNode("div", null, [renderTNodeJSX("default")]);
    };
  }
});

export { _ConfigProvider as default };
//# sourceMappingURL=config-provider.js.map
