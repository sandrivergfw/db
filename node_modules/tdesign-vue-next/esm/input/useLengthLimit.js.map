{"version":3,"file":"useLengthLimit.js","sources":["../../src/input/useLengthLimit.tsx"],"sourcesContent":["import { computed, ComputedRef, onMounted, watch } from 'vue';\nimport { TdInputProps } from './type';\nimport log from '../_common/js/log';\nimport { getCharacterLength, getUnicodeLength, limitUnicodeMaxLength } from '../_common/js/utils/helper';\n\nexport interface UseLengthLimitParams {\n  value: string;\n  maxlength: number;\n  maxcharacter: number;\n  allowInputOverMax: boolean;\n  status: TdInputProps['status'];\n  onValidate: TdInputProps['onValidate'];\n}\n\nexport default function useLengthLimit(params: ComputedRef<UseLengthLimitParams>) {\n  // 文本超出数量限制时，是否允许继续输入\n  const getValueByLimitNumber = (inputValue: string) => {\n    const { allowInputOverMax, maxlength, maxcharacter } = params.value;\n    if (!(maxlength || maxcharacter) || allowInputOverMax || !inputValue) return inputValue;\n    if (maxlength) {\n      // input value could be unicode 😊\n      return limitUnicodeMaxLength(inputValue, maxlength);\n    }\n    if (maxcharacter) {\n      const r = getCharacterLength(inputValue, maxcharacter);\n      if (typeof r === 'object') {\n        return r.characters;\n      }\n    }\n  };\n\n  const limitNumber = computed(() => {\n    const { maxlength, maxcharacter, value } = params.value;\n    if (typeof value === 'number') return String(value);\n    if (maxlength && maxcharacter) {\n      log.warn('Input', 'Pick one of maxlength and maxcharacter please.');\n    }\n    if (maxlength) {\n      const length = value?.length ? getUnicodeLength(value) : 0;\n      return `${length}/${maxlength}`;\n    }\n    if (maxcharacter) {\n      return `${getCharacterLength(value || '')}/${maxcharacter}`;\n    }\n    return '';\n  });\n\n  const innerStatus = computed(() => {\n    if (limitNumber.value) {\n      const [current, total] = limitNumber.value.split('/');\n      return Number(current) > Number(total) ? 'error' : '';\n    }\n    return '';\n  });\n\n  const tStatus = computed(() => {\n    const { status } = params.value;\n    return status || innerStatus.value;\n  });\n\n  const onValidateChange = () => {\n    params.value.onValidate?.({\n      error: innerStatus.value ? 'exceed-maximum' : undefined,\n    });\n  };\n\n  watch(innerStatus, onValidateChange);\n\n  onMounted(() => {\n    innerStatus.value && onValidateChange();\n  });\n\n  return {\n    tStatus,\n    limitNumber,\n    getValueByLimitNumber,\n  };\n}\n"],"names":["useLengthLimit","params","getValueByLimitNumber","inputValue","value","allowInputOverMax","maxlength","maxcharacter","limitUnicodeMaxLength","r","getCharacterLength","characters","limitNumber","computed","String","log","warn","length","getUnicodeLength","innerStatus","split","current","total","Number","tStatus","status","onValidateChange","onValidate","error","watch","onMounted"],"mappings":"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"}