{"version":3,"file":"badge.js","sources":["../../src/badge/badge.tsx"],"sourcesContent":["import { defineComponent, computed } from 'vue';\nimport props from './props';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { useConfig } from '../hooks/useConfig';\n\nexport default defineComponent({\n  name: 'TBadge',\n\n  props: { ...props },\n\n  setup(props) {\n    const renderTNodeJSX = useTNodeJSX();\n\n    /** 内容计算相关逻辑 start */\n    const content = computed(() => {\n      if (props.dot) return '';\n      if (typeof props.count === 'function') {\n        return renderTNodeJSX('count');\n      }\n      if (Number.isNaN(Number(props.count))) {\n        return props.count;\n      }\n      const count = Number(props.count);\n      return count > props.maxCount ? `${props.maxCount}+` : count;\n    });\n\n    const renderChildren = () => renderTNodeJSX('default');\n\n    const getOffset = () => {\n      if (!props.offset) return {};\n      let [xOffset, yOffset]: Array<string | number> = props.offset;\n      xOffset = Number.isNaN(Number(xOffset)) ? xOffset : `${xOffset}px`;\n      yOffset = Number.isNaN(Number(yOffset)) ? yOffset : `${yOffset}px`;\n      return { xOffset, yOffset };\n    };\n    /** 内容计算相关逻辑 end */\n\n    /** 样式计算相关逻辑 start */\n    const { classPrefix } = useConfig('classPrefix');\n    const name = `${classPrefix.value}-badge`;\n    const isHidden = computed(() => {\n      return !props.showZero && (content.value === 0 || content.value === '0');\n    });\n\n    const badgeClassNames = computed(() => {\n      return [\n        {\n          [`${name}--dot`]: !!props.dot,\n          [`${name}--circle`]: !props.dot && props.shape === 'circle',\n          [`${name}--round`]: props.shape === 'round',\n          [`${classPrefix.value}-size-s`]: props.size === 'small',\n        },\n      ];\n    });\n\n    const inlineStyle = computed(() => {\n      const { xOffset, yOffset } = getOffset();\n      return {\n        background: `${props.color}`,\n        right: xOffset,\n        top: yOffset,\n      };\n    });\n    /** 样式计算相关逻辑 end */\n    return {\n      content,\n      inlineStyle,\n      badgeClassNames,\n      isHidden,\n      renderChildren,\n      name,\n    };\n  },\n\n  render() {\n    return (\n      <div class={this.name} {...this.$attrs}>\n        {this.renderChildren()}\n        {this.isHidden ? null : (\n          <sup class={this.badgeClassNames} style={this.inlineStyle}>\n            {this.content}\n          </sup>\n        )}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","setup","renderTNodeJSX","useTNodeJSX","content","computed","dot","count","Number","isNaN","maxCount","renderChildren","getOffset","offset","xOffset","yOffset","useConfig","classPrefix","value","isHidden","showZero","badgeClassNames","shape","size","inlineStyle","background","color","right","top","render","_createVNode","_mergeProps","$attrs"],"mappings":"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"}