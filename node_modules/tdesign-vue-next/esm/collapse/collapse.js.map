{"version":3,"file":"collapse.js","sources":["../../src/collapse/collapse.tsx"],"sourcesContent":["import { defineComponent, toRefs, provide, computed } from 'vue';\nimport props from './props';\nimport { CollapseValue, TdCollapseProps, CollapsePanelValue } from './type';\nimport useVModel from '../hooks/useVModel';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { usePrefixClass } from '../hooks/useConfig';\n\nexport default defineComponent({\n  name: 'TCollapse',\n  props,\n\n  setup(props: TdCollapseProps, context) {\n    const componentName = usePrefixClass('collapse');\n    const borderlessClass = usePrefixClass('-border-less');\n    const renderTNodeJSX = useTNodeJSX();\n    const { value, expandMutex, borderless, modelValue } = toRefs(props);\n    const [collapseValue, setCollapseValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const updateCollapseValue = (value: CollapsePanelValue) => {\n      let newValue: CollapseValue = [].concat(collapseValue.value || []);\n      const index = newValue.indexOf(value);\n      if (index >= 0) {\n        newValue.splice(index, 1);\n      } else if (expandMutex.value) {\n        newValue = [value];\n      } else {\n        newValue.push(value);\n      }\n      setCollapseValue(newValue);\n    };\n    const classes = computed(() => {\n      return [\n        componentName.value,\n        {\n          [borderlessClass.value]: !!borderless.value,\n        },\n      ];\n    });\n    const getUniqId = (() => {\n      let index = 0;\n      return () => index++;\n    })();\n    provide('collapseValue', collapseValue);\n    provide('updateCollapseValue', updateCollapseValue);\n    provide('collapseProps', toRefs(props));\n    provide('getUniqId', getUniqId);\n    provide('renderParentTNode', renderTNodeJSX);\n    return () => {\n      const nodes = renderTNodeJSX('default');\n      return <div class={classes.value}>{nodes}</div>;\n    };\n  },\n});\n"],"names":["defineComponent","name","props","setup","context","componentName","usePrefixClass","borderlessClass","renderTNodeJSX","useTNodeJSX","toRefs","value","expandMutex","borderless","modelValue","useVModel","defaultValue","onChange","collapseValue","setCollapseValue","updateCollapseValue","newValue","concat","index","indexOf","splice","push","classes","computed","getUniqId","provide","nodes","_createVNode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,gBAAeA,eAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,WAAA;AACNC,EAAAA,KAAA,EAAAA,KAAA;AAEAC,EAAAA,KAAA,EAAMD,SAAAA,KAAAA,CAAAA,QAAwBE,OAAS,EAAA;AAC/B,IAAA,IAAAC,aAAA,GAAgBC,eAAe,UAAU,CAAA,CAAA;AACzC,IAAA,IAAAC,eAAA,GAAkBD,eAAe,cAAc,CAAA,CAAA;IACrD,IAAME,iBAAiBC,WAAY,EAAA,CAAA;IACnC,IAAuDC,OAAAA,GAAAA,OAAOR,MAAK,CAAA;AAA3DS,MAAAA,KAAO,WAAPA,KAAO;AAAAC,MAAAA,WAAA,WAAAA,WAAA;AAAaC,MAAAA,qBAAAA;AAAYC,MAAAA,UAAW,WAAXA,UAAW,CAAA;AAC7C,IAAA,IAAA,UAAA,GAAoCC,SAAA,CAAUJ,OAAOG,UAAYZ,EAAAA,MAAAA,CAAMc,YAAcd,EAAAA,MAAAA,CAAMe,QAAQ,CAAA;AAAA,MAAA,WAAA,GAAA,cAAA,CAAA,UAAA,EAAA,CAAA,CAAA;MAAlGC,aAAe,GAAA,WAAA,CAAA,CAAA,CAAA;MAAAC,gBAAgB,GAAA,WAAA,CAAA,CAAA,CAAA,CAAA;AAChC,IAAA,IAAAC,mBAAA,GAAsB,SAAtBA,mBAAA,CAAuBT,MAA8B,EAAA;MACzD,IAAIU,WAA0B,EAAC,CAAEC,OAAOJ,aAAc,CAAAP,KAAA,IAAS,EAAE,CAAA,CAAA;AAC3D,MAAA,IAAAY,KAAA,GAAQF,QAAS,CAAAG,OAAA,CAAQb,MAAK,CAAA,CAAA;MACpC,IAAIY,SAAS,CAAG,EAAA;AACLF,QAAAA,QAAA,CAAAI,MAAA,CAAOF,OAAO,CAAC,CAAA,CAAA;AAC1B,OAAA,MAAA,IAAWX,YAAYD,KAAO,EAAA;QAC5BU,QAAA,GAAW,CAACV,MAAK,CAAA,CAAA;AACnB,OAAO,MAAA;AACLU,QAAAA,QAAA,CAASK,KAAKf,MAAK,CAAA,CAAA;AACrB,OAAA;MACAQ,gBAAA,CAAiBE,QAAQ,CAAA,CAAA;KAC3B,CAAA;AACM,IAAA,IAAAM,OAAA,GAAUC,SAAS,YAAM;AACtB,MAAA,OAAA,CACLvB,aAAc,CAAAM,KAAA,sBAEXJ,eAAA,CAAgBI,KAAQ,EAAA,CAAC,CAACE,UAAW,CAAAF,KAAA,CAE1C,CAAA,CAAA;AACF,KAAC,CAAA,CAAA;IACD,IAAMkB,YAAa,YAAM;MACvB,IAAIN,KAAQ,GAAA,CAAA,CAAA;MACZ,OAAO,YAAA;AAAA,QAAA,OAAMA,KAAA,EAAA,CAAA;AAAA,OAAA,CAAA;AACf,KAAG,EAAA,CAAA;AACHO,IAAAA,OAAA,CAAQ,iBAAiBZ,aAAa,CAAA,CAAA;AACtCY,IAAAA,OAAA,CAAQ,uBAAuBV,mBAAmB,CAAA,CAAA;AAC1CU,IAAAA,OAAA,CAAA,eAAA,EAAiBpB,MAAOR,CAAAA,MAAK,CAAC,CAAA,CAAA;AACtC4B,IAAAA,OAAA,CAAQ,aAAaD,SAAS,CAAA,CAAA;AAC9BC,IAAAA,OAAA,CAAQ,qBAAqBtB,cAAc,CAAA,CAAA;AAC3C,IAAA,OAAO,YAAM;AACL,MAAA,IAAAuB,KAAA,GAAQvB,eAAe,SAAS,CAAA,CAAA;AACtC,MAAA,OAAAwB,WAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EAAmBL,OAAQ,CAAAhB,KAAAA;AAAA,OAAA,EAAA,CAAQoB;KACrC,CAAA;AACF,GAAA;AACF,CAAC,CAAA;;;;"}