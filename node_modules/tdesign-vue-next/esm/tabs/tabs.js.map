{"version":3,"file":"tabs.js","sources":["../../src/tabs/tabs.tsx"],"sourcesContent":["import { ComponentPublicInstance, defineComponent, provide, Ref, toRefs } from 'vue';\nimport TTabPanel from './tab-panel';\nimport TTabNav from './tab-nav';\nimport { TabValue, TdTabsProps } from './type';\nimport props from './props';\n\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport useVModel from '../hooks/useVModel';\n\nexport interface InjectTabs {\n  value: Ref<TabValue>;\n}\n\nexport default defineComponent({\n  name: 'TTabs',\n\n  props,\n\n  setup(props) {\n    const COMPONENT_NAME = usePrefixClass('tabs');\n    const classPrefix = usePrefixClass();\n    const renderTNodeJSX = useTNodeJSX();\n\n    const { value, modelValue } = toRefs(props);\n    const [tabValue, setTabValue] = useVModel(value, modelValue, props.defaultValue || '', props.onChange);\n\n    provide<InjectTabs>('tabs', { value: tabValue });\n\n    // methods\n    const onTabAdd = (context: { e: MouseEvent }) => {\n      props.onAdd?.({ e: context.e });\n    };\n    const onTabChange = (value: TabValue) => {\n      setTabValue(value);\n    };\n    const onTabRemove = ({ e, value, index }: Parameters<TdTabsProps['onRemove']>[0]) => {\n      props.onRemove({ value, index, e });\n    };\n\n    // render\n    const getSlotPanels = () => {\n      let content = renderTNodeJSX('default');\n      if (!content) return [];\n      content = content\n        .map((item: ComponentPublicInstance) => {\n          if (item.children && Array.isArray(item.children)) return item.children;\n          return item;\n        })\n        .flat()\n        .filter((item: ComponentPublicInstance) => {\n          return item.type.name === 'TTabPanel';\n        });\n\n      return content;\n    };\n    const renderHeader = () => {\n      const panels = (props.list?.length ? props.list : getSlotPanels()) || [];\n      const panelsData = panels.map((item: ComponentPublicInstance) => {\n        const selfItem = item;\n\n        if (item.props) {\n          Object.keys(item.props).forEach((key) => {\n            selfItem[key] = item.props[key];\n          });\n        }\n\n        return selfItem;\n      });\n      const tabNavProps = {\n        theme: props.theme,\n        value: tabValue.value,\n        size: props.size,\n        disabled: props.disabled,\n        placement: props.placement,\n        addable: props.addable,\n        panels: panelsData,\n        dragSort: props.dragSort,\n      };\n      return (\n        <div\n          class={{\n            [`${classPrefix.value}-tabs__header`]: true,\n            [`${classPrefix.value}-is-${props.placement}`]: true,\n          }}\n        >\n          <TTabNav\n            {...tabNavProps}\n            onDragSort={props.onDragSort}\n            onChange={onTabChange}\n            onAdd={onTabAdd}\n            onRemove={onTabRemove}\n          />\n        </div>\n      );\n    };\n    const renderContent = () => {\n      const panels = getSlotPanels();\n      if (props.list?.length) {\n        return props.list.map((item) => <TTabPanel {...item} onRemove={onTabRemove} />);\n      }\n      if (panels && panels.length) {\n        return <div class={[`${classPrefix.value}-tabs__content`]}>{panels}</div>;\n      }\n    };\n\n    return () => {\n      return (\n        <div class={[COMPONENT_NAME.value]}>\n          {props.placement !== 'bottom' ? [renderHeader(), renderContent()] : [renderContent(), renderHeader()]}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","setup","COMPONENT_NAME","usePrefixClass","classPrefix","renderTNodeJSX","useTNodeJSX","toRefs","value","modelValue","useVModel","defaultValue","onChange","tabValue","setTabValue","provide","onTabAdd","context","onAdd","e","onTabChange","onTabRemove","index","onRemove","getSlotPanels","content","map","item","children","Array","isArray","flat","filter","type","renderHeader","panels","list","length","panelsData","selfItem","Object","keys","forEach","key","tabNavProps","theme","size","disabled","placement","addable","dragSort","_createVNode","_mergeProps","onDragSort","renderContent","TTabPanel"],"mappings":"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"}