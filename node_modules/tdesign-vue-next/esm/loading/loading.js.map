{"version":3,"file":"loading.js","sources":["../../src/loading/loading.tsx"],"sourcesContent":["import { defineComponent, ref, computed, watch, onMounted, toRefs, CSSProperties } from 'vue';\nimport GradientIcon from './icon/gradient';\nimport { addClass, removeClass } from '../utils/dom';\nimport { renderTNodeJSX, renderContent } from '../utils/render-tnode';\nimport TransferDom from '../utils/transfer-dom';\nimport props from './props';\n\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\n\nconst useComponentClassName = () => {\n  return {\n    name: usePrefixClass('loading'),\n    centerClass: usePrefixClass('loading--center'),\n    fullscreenClass: usePrefixClass('loading__fullscreen'),\n    lockClass: usePrefixClass('loading--lock'),\n    overlayClass: usePrefixClass('loading__overlay'),\n    relativeClass: usePrefixClass('loading__parent'),\n    fullClass: usePrefixClass('loading--full'),\n    inheritColorClass: usePrefixClass('loading--inherit-color'),\n  };\n};\n\nexport default defineComponent({\n  name: 'TLoading',\n  directives: {\n    TransferDom,\n  },\n  props,\n  setup(props, { slots }) {\n    const delayShowLoading = ref(false);\n\n    const { name, centerClass, fullscreenClass, lockClass, overlayClass, relativeClass, fullClass, inheritColorClass } =\n      useComponentClassName();\n\n    const classPrefix = usePrefixClass();\n    const { SIZE } = useCommonClassName();\n\n    const countDelay = () => {\n      delayShowLoading.value = false;\n      const timer = setTimeout(() => {\n        delayShowLoading.value = true;\n        clearTimeout(timer);\n      }, props.delay);\n    };\n\n    // 延时计时是否完成。用于控制延时计时结束前不能显示加载态\n    const delayCounted = computed(() => Boolean(!props.delay || (props.delay && delayShowLoading.value)));\n\n    // loading style\n    const styles = computed(() => {\n      const styles: CSSProperties = {};\n      if (props.zIndex !== undefined) {\n        styles.zIndex = props.zIndex;\n      }\n      if (!['small', 'medium', 'large'].includes(props.size)) {\n        styles['font-size'] = props.size;\n      }\n      return styles;\n    });\n\n    const hasContent = computed(() => Boolean(props.default || slots.default || props.content || slots.content));\n    const lockFullscreen = computed(() => props.preventScrollThrough && props.fullscreen);\n    const showText = computed(() => Boolean(props.text || slots.text));\n    const showWrapLoading = computed(() => hasContent.value && props.loading && delayCounted.value);\n    const showFullScreenLoading = computed(() => props.fullscreen && props.loading && delayCounted.value);\n    const showNormalLoading = computed(() => props.attach && props.loading && delayCounted.value);\n    const showAttachedLoading = computed(() => props.attach && props.loading && delayCounted.value);\n    const classes = computed(() => {\n      const baseClasses = [\n        centerClass.value,\n        SIZE.value[props.size],\n        { [inheritColorClass.value]: props.inheritColor },\n      ];\n      const fullScreenClasses = [name.value, fullscreenClass.value, centerClass.value, overlayClass.value];\n\n      return {\n        baseClasses,\n        attachClasses: baseClasses.concat([name.value, fullClass.value, { [overlayClass.value]: props.showOverlay }]),\n        withContentClasses: baseClasses.concat([\n          name.value,\n          fullClass.value,\n          {\n            [overlayClass.value]: props.showOverlay,\n          },\n        ]),\n        fullScreenClasses,\n        normalClasses: baseClasses.concat([name.value]),\n      };\n    });\n\n    const { loading } = toRefs(props);\n\n    watch([loading], ([isLoading]) => {\n      if (isLoading) {\n        countDelay();\n        lockFullscreen.value && addClass(document.body, lockClass.value);\n      } else {\n        lockFullscreen.value && removeClass(document.body, lockClass.value);\n      }\n    });\n\n    onMounted(() => {\n      props.delay && countDelay();\n    });\n\n    return {\n      classPrefix,\n      relativeClass,\n      delayShowLoading,\n      styles,\n      showText,\n      hasContent,\n      classes,\n      lockFullscreen,\n      showWrapLoading,\n      showNormalLoading,\n      showFullScreenLoading,\n      showAttachedLoading,\n    };\n  },\n  render() {\n    const { fullScreenClasses, baseClasses, withContentClasses, attachClasses, normalClasses } = this.classes;\n\n    const defaultIndicator = <GradientIcon size={this.size} />;\n    const indicator = this.loading && renderTNodeJSX(this, 'indicator', defaultIndicator);\n    const text = this.showText && <div class={`${this.classPrefix}-loading__text`}>{renderTNodeJSX(this, 'text')}</div>;\n\n    // full screen loading\n    if (this.fullscreen) {\n      if (!this.showFullScreenLoading) return null;\n      return (\n        <div class={fullScreenClasses} style={this.styles} v-transfer-dom={this.attach}>\n          <div class={baseClasses}>\n            {indicator}\n            {text}\n          </div>\n        </div>\n      );\n    }\n\n    // Loading is wrapping a HTMLElement.\n    if (this.hasContent) {\n      return (\n        <div class={this.relativeClass}>\n          {renderContent(this, 'default', 'content')}\n          {this.showWrapLoading && (\n            <div class={withContentClasses} style={this.styles}>\n              {indicator}\n              {text}\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    // transfer parent node\n    if (this.attach) {\n      if (!this.showAttachedLoading) return null;\n      return (\n        <div class={attachClasses} style={this.styles} v-transfer-dom={this.attach}>\n          {indicator}\n          {text}\n        </div>\n      );\n    }\n\n    // Normal Loading without overlay or content\n    return (\n      <div class={normalClasses} style={this.styles}>\n        {indicator}\n        {text}\n      </div>\n    );\n  },\n});\n"],"names":["useComponentClassName","name","usePrefixClass","centerClass","fullscreenClass","lockClass","overlayClass","relativeClass","fullClass","inheritColorClass","defineComponent","directives","TransferDom","props","setup","slots","delayShowLoading","ref","classPrefix","useCommonClassName","SIZE","countDelay","value","timer","setTimeout","clearTimeout","delay","delayCounted","computed","Boolean","styles","zIndex","includes","size","hasContent","content","lockFullscreen","preventScrollThrough","fullscreen","showText","text","showWrapLoading","loading","showFullScreenLoading","showNormalLoading","attach","showAttachedLoading","classes","baseClasses","inheritColor","fullScreenClasses","attachClasses","concat","showOverlay","withContentClasses","normalClasses","toRefs","watch","isLoading","addClass","document","body","removeClass","onMounted","render","defaultIndicator","_createVNode","indicator","renderTNodeJSX","_withDirectives","_resolveDirective","renderContent"],"mappings":"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"}