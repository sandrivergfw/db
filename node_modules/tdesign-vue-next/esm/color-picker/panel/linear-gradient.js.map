{"version":3,"file":"linear-gradient.js","sources":["../../../src/color-picker/panel/linear-gradient.tsx"],"sourcesContent":["import { defineComponent, onBeforeUnmount, onMounted, reactive, ref, watch } from 'vue';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { GRADIENT_SLIDER_DEFAULT_WIDTH } from '../const';\nimport { genGradientPoint, gradientColors2string, GradientColorPoint } from '../utils';\nimport { InputNumber as TInputNumber } from '../../input-number';\nimport { useBaseClassName } from '../hooks';\nimport { useCommonClassName } from '../../hooks/useConfig';\nimport baseProps from './base-props';\n\nconst DELETE_KEYS: string[] = ['delete', 'backspace'];\n\nexport default defineComponent({\n  name: 'LinearGradient',\n\n  inheritAttrs: false,\n  props: {\n    ...baseProps,\n  },\n  setup(props) {\n    const baseClassName = useBaseClassName();\n    const { STATUS } = useCommonClassName();\n    const statusClassNames = STATUS.value;\n    const refSlider = ref<HTMLElement>(null);\n    const sliderRect = reactive({\n      left: 0,\n      width: GRADIENT_SLIDER_DEFAULT_WIDTH,\n    });\n    const isDragging = ref<Boolean>(false);\n    const isMoved = ref<Boolean>(false);\n    const degree = ref(props.color.gradientDegree);\n    const selectedId = ref(props.color.gradientSelectedId);\n    const colors = ref<GradientColorPoint[]>(cloneDeep(props.color.gradientColors));\n\n    watch(\n      () => props.color.gradientDegree,\n      (value) => (degree.value = value),\n    );\n    watch(\n      () => props.color.gradientSelectedId,\n      (value) => (selectedId.value = value),\n    );\n    watch(\n      () => props.color.gradientColors,\n      (value) => {\n        colors.value = cloneDeep(value);\n      },\n      {\n        deep: true,\n      },\n    );\n\n    const handleChange = (key: 'degree' | 'selectedId' | 'colors', payload: any, addUsedColor?: boolean) => {\n      if (props.disabled) {\n        return;\n      }\n      props.onChange({\n        key,\n        payload,\n        addUsedColor,\n      });\n    };\n\n    const handleDegreeChange = (value: number) => {\n      if (props.disabled || value === props.color.gradientDegree) {\n        return;\n      }\n      degree.value = value;\n      handleChange('degree', value, true);\n    };\n\n    const handleSelectedIdChange = (value: string) => {\n      if (props.disabled) {\n        return;\n      }\n      selectedId.value = value;\n      handleChange('selectedId', value);\n    };\n\n    const handleColorsChange = (value: GradientColorPoint[], isEnded?: boolean) => {\n      if (props.disabled) {\n        return;\n      }\n      colors.value = value;\n      handleChange('colors', value, isEnded);\n    };\n\n    /**\n     * 设置bar的位置\n     * @param left\n     * @returns\n     */\n    const updateActiveThumbLeft = (left: number) => {\n      const index = colors.value.findIndex((c) => c.id === selectedId.value);\n      if (index === -1) {\n        return;\n      }\n      const point = colors.value[index];\n      left = Math.max(0, Math.min(sliderRect.width, left));\n      const percentLeft = (left / sliderRect.width) * 100;\n      colors.value.splice(index, 1, {\n        color: point.color,\n        left: percentLeft,\n        id: point.id,\n      });\n      handleColorsChange(colors.value);\n    };\n\n    // 移动开始\n    const handleStart = (id: string) => {\n      const rect = refSlider.value.getBoundingClientRect();\n      sliderRect.left = rect.left;\n      sliderRect.width = rect.width || GRADIENT_SLIDER_DEFAULT_WIDTH;\n      if (isDragging.value || props.disabled) {\n        return;\n      }\n      isMoved.value = false;\n      isDragging.value = true;\n      handleSelectedIdChange(id);\n      // 让slider获取焦点，以便键盘事件生效。\n      refSlider.value.focus();\n      window.addEventListener('mousemove', handleMove, false);\n      window.addEventListener('mouseup', handleEnd, false);\n      window.addEventListener('contextmenu', handleEnd, false);\n    };\n\n    // 移动中\n    const handleMove = (e: MouseEvent) => {\n      if (!isDragging.value || props.disabled) {\n        return;\n      }\n      const left = e.clientX - sliderRect.left;\n      isMoved.value = true;\n      updateActiveThumbLeft(left);\n    };\n\n    // 移动结束\n    const handleEnd = () => {\n      if (!isDragging.value) {\n        return;\n      }\n      setTimeout(() => {\n        isDragging.value = false;\n      }, 0);\n      if (isMoved.value) {\n        handleColorsChange(colors.value, true);\n        isMoved.value = false;\n      }\n      window.removeEventListener('mousemove', handleMove, false);\n      window.removeEventListener('mouseup', handleEnd, false);\n      window.removeEventListener('contextmenu', handleEnd, false);\n    };\n\n    const handleKeyup = (e: KeyboardEvent) => {\n      if (props.disabled) {\n        return;\n      }\n      const points = colors.value;\n      let pos = points.findIndex((c) => c.id === selectedId.value);\n      const { length } = points;\n      // 必须保证有两个点\n      if (DELETE_KEYS.includes(e.key.toLocaleLowerCase()) && length > 2 && pos >= 0 && pos <= length - 1) {\n        points.splice(pos, 1);\n        if (!points[pos]) {\n          // eslint-disable-next-line no-nested-ternary\n          pos = points[pos + 1] ? pos + 1 : points[pos - 1] ? pos - 1 : 0;\n        }\n        const current = points[pos];\n        handleColorsChange(points, true);\n        handleSelectedIdChange(current?.id);\n      }\n    };\n\n    const handleThumbBarClick = (e: MouseEvent) => {\n      if (props.disabled) {\n        return;\n      }\n      let left = e.clientX - sliderRect.left;\n      left = Math.max(0, Math.min(sliderRect.width, left));\n      const percentLeft = (left / sliderRect.width) * 100;\n      const newPoint = genGradientPoint(percentLeft, props.color.rgba);\n      colors.value.push(newPoint);\n      handleColorsChange(colors.value, true);\n      handleSelectedIdChange(newPoint.id);\n    };\n\n    onMounted(() => {\n      const rect = refSlider.value.getBoundingClientRect();\n      sliderRect.left = rect.left;\n      sliderRect.width = rect.width || GRADIENT_SLIDER_DEFAULT_WIDTH;\n    });\n\n    onBeforeUnmount(() => {\n      window.removeEventListener('mousemove', handleMove, false);\n      window.removeEventListener('mouseup', handleEnd, false);\n      window.removeEventListener('contextmenu', handleEnd, false);\n    });\n\n    return {\n      baseClassName,\n      statusClassNames,\n      refSlider,\n      degree,\n      selectedId,\n      colors,\n      handleDegreeChange,\n      handleStart,\n      handleMove,\n      handleEnd,\n      handleKeyup,\n      handleThumbBarClick,\n    };\n  },\n  render() {\n    const { linearGradient, gradientColors } = this.color;\n    const { colors, selectedId, degree, disabled, baseClassName, statusClassNames } = this;\n    const thumbBackground = gradientColors2string({\n      points: gradientColors,\n      degree: 90,\n    });\n    return (\n      <div class={`${baseClassName}__gradient`}>\n        <div class={`${baseClassName}__gradient-slider`}>\n          <div\n            class={[`${baseClassName}__slider`, `${baseClassName}--bg-alpha`]}\n            onKeyup={this.handleKeyup}\n            tabindex={0}\n            ref=\"refSlider\"\n          >\n            <ul\n              class=\"gradient-thumbs\"\n              onClick={this.handleThumbBarClick}\n              style={{\n                background: thumbBackground,\n              }}\n            >\n              {colors.map((t) => {\n                const left = `${Math.round(t.left * 100) / 100}%`;\n                return (\n                  <li\n                    class={[\n                      `${baseClassName}__thumb`,\n                      'gradient-thumbs__item',\n                      selectedId === t.id ? statusClassNames.active : '',\n                    ]}\n                    key={t.id}\n                    title={`${t.color} ${left}`}\n                    style={{\n                      color: t.color,\n                      left,\n                    }}\n                    onClick={(e: MouseEvent) => e.stopPropagation()}\n                    onMousedown={(e: MouseEvent) => this.handleStart(t.id)}\n                  >\n                    <span class={['gradient-thumbs__item-inner', `${baseClassName}--bg-alpha`]}></span>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n        <div class={`${baseClassName}__gradient-degree`} title={`${degree}deg`}>\n          <TInputNumber\n            size=\"small\"\n            theme=\"normal\"\n            min={0}\n            max={360}\n            step={1}\n            format={(value: number) => `${value}°`}\n            v-model={this.degree}\n            onBlur={this.handleDegreeChange}\n            onEnter={this.handleDegreeChange}\n            disabled={disabled}\n          />\n        </div>\n        <div class={[`${baseClassName}__gradient-preview`, `${baseClassName}--bg-alpha`]}>\n          <span\n            class=\"preview-inner\"\n            style={{\n              background: linearGradient,\n            }}\n          ></span>\n        </div>\n      </div>\n    );\n  },\n});\n"],"names":["DELETE_KEYS","defineComponent","name","inheritAttrs","props","baseProps","setup","baseClassName","useBaseClassName","useCommonClassName","STATUS","statusClassNames","value","refSlider","ref","sliderRect","reactive","left","width","GRADIENT_SLIDER_DEFAULT_WIDTH","isDragging","isMoved","degree","color","gradientDegree","selectedId","gradientSelectedId","colors","cloneDeep","gradientColors","watch","deep","handleChange","key","payload","addUsedColor","disabled","onChange","handleDegreeChange","handleSelectedIdChange","handleColorsChange","isEnded","updateActiveThumbLeft","index","findIndex","c","id","point","Math","max","min","percentLeft","splice","handleStart","rect","getBoundingClientRect","focus","window","addEventListener","handleMove","handleEnd","e","clientX","setTimeout","removeEventListener","handleKeyup","points","pos","length","includes","toLocaleLowerCase","current","handleThumbBarClick","newPoint","genGradientPoint","rgba","push","onMounted","onBeforeUnmount","render","linearGradient","thumbBackground","gradientColors2string","_createVNode","background","map","t","round","active","stopPropagation","TInputNumber"],"mappings":"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"}