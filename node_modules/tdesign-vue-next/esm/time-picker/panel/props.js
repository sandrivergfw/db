/**
 * tdesign v0.24.9
 * (c) 2022 tdesign
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import props from '../props.js';
import { EPickerCols } from '../../_common/js/time-picker/const.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var BooleanType = {
  type: Boolean,
  "default": true,
  validator: function validator(v) {
    return typeof v === "boolean";
  }
};
var panelProps = function panelProps() {
  return {
    disabled: _objectSpread(_objectSpread({}, BooleanType), {
      "default": false
    }),
    isFocus: _objectSpread(_objectSpread({}, BooleanType), {
      "default": false
    }),
    value: {
      type: String,
      "default": ""
    },
    format: {
      type: String,
      "default": "HH:mm:ss"
    },
    steps: _objectSpread({
      type: Array
    }, {
      "default": [1, 1, 1]
    }),
    isShowPanel: _objectSpread(_objectSpread({}, BooleanType), {
      "default": true
    }),
    hideDisabledTime: _objectSpread({}, props.hideDisabledTime),
    disableTime: {
      type: Function
    },
    isFooterDisplay: _objectSpread({}, BooleanType)
  };
};
var panelColProps = function panelColProps() {
  return {
    format: {
      type: String,
      "default": "HH:mm:ss"
    },
    cols: {
      type: Array,
      "default": function _default() {
        return [EPickerCols.hour, EPickerCols.minute, EPickerCols.second];
      }
    },
    value: {
      type: String,
      "default": ""
    },
    range: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    steps: _objectSpread({
      type: Array
    }, {
      "default": [1, 1, 1]
    }),
    hideDisabledTime: _objectSpread({}, props.hideDisabledTime),
    disableTime: {
      type: Function
    },
    localeMeridiems: {
      type: Array
    }
  };
};

export { panelColProps, panelProps };
//# sourceMappingURL=props.js.map
