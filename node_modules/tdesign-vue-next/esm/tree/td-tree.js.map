{"version":3,"file":"td-tree.js","sources":["../../src/tree/td-tree.tsx"],"sourcesContent":["import { computed, defineComponent, TransitionGroup, provide } from 'vue';\n\nimport props from './props';\nimport { useConfig } from '../hooks/useConfig';\nimport { useTNodeDefault } from '../hooks/tnode';\nimport { useCLASSNAMES, injectKey } from './constants';\nimport useTree from './useTree';\nimport useExposeFunc from './hooks/useExposeFunc';\n\nexport default defineComponent({\n  name: 'TTree',\n  props,\n  setup(props, { expose, slots }) {\n    const { globalConfig, t } = useConfig('tree');\n    const CLASS_NAMES = useCLASSNAMES();\n    const renderTNodeJSX = useTNodeDefault();\n\n    // 向子组件传递的状态\n    const statusContext = computed(() => {\n      const { checkProps, empty, icon, label, line, disableCheck, operations } = props;\n      return {\n        checkProps,\n        empty,\n        icon,\n        label,\n        line,\n        disableCheck,\n        operations,\n        scopedSlots: slots,\n      };\n    });\n    provide(injectKey, statusContext);\n\n    // tree核心逻辑\n    const { treeStore, treeNodeViews } = useTree(props);\n\n    // 导出方法\n    useExposeFunc(treeStore, expose);\n\n    const classList = computed(() => [\n      CLASS_NAMES.value.tree,\n      {\n        [CLASS_NAMES.value.disabled]: props.disabled,\n        [CLASS_NAMES.value.treeHoverAble]: props.hover,\n        [CLASS_NAMES.value.treeCheckable]: props.checkable,\n        [CLASS_NAMES.value.treeTransition]: props.transition,\n        [CLASS_NAMES.value.treeBlockNode]: props.expandOnClickNode,\n      },\n    ]);\n\n    return () => (\n      <div class={classList.value}>\n        {treeNodeViews.value.length === 0 ? (\n          <div class={CLASS_NAMES.value.treeEmpty}>\n            {renderTNodeJSX('empty', {\n              defaultNode: t(globalConfig.value.empty),\n            })}\n          </div>\n        ) : (\n          <TransitionGroup\n            name={CLASS_NAMES.value.treeNodeToggle}\n            tag=\"div\"\n            enter-active-class={CLASS_NAMES.value.treeNodeEnter}\n            leave-active-class={CLASS_NAMES.value.treeNodeLeave}\n          >\n            {treeNodeViews.value}\n          </TransitionGroup>\n        )}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","setup","expose","slots","useConfig","globalConfig","t","CLASS_NAMES","useCLASSNAMES","renderTNodeJSX","useTNodeDefault","statusContext","computed","checkProps","empty","icon","label","line","disableCheck","operations","scopedSlots","provide","injectKey","useTree","treeStore","treeNodeViews","useExposeFunc","classList","value","tree","disabled","treeHoverAble","hover","treeCheckable","checkable","treeTransition","transition","treeBlockNode","expandOnClickNode","_createVNode","length","treeEmpty","defaultNode","treeNodeToggle","treeNodeEnter","treeNodeLeave"],"mappings":"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"}