import { VNode } from 'vue';
import TreeStore from '../_common/js/tree/tree-store';
import TreeNode from '../_common/js/tree/tree-node';
import { TypeMark, TypeLineModel, TypeTNodeProp, TypeGetTNodeOption, TypeTargetNode } from './interface';
import { TdTreeProps } from './type';
export declare function getParentsToRoot(element?: HTMLElement, root?: HTMLElement): HTMLElement[];
export declare function getParentMarks(name: string, element?: HTMLElement, root?: HTMLElement): TypeMark[];
export declare function getMark(name: string, element?: HTMLElement, root?: HTMLElement): TypeMark;
export declare function getTNode(prop: TypeTNodeProp, options?: TypeGetTNodeOption): string | VNode;
export declare function getLineModel(nodes: TreeNode[], node: TreeNode, index: number): TypeLineModel;
export declare function isTreeNodeValue(item: unknown): boolean;
export declare function getNode(store: TreeStore, item: TypeTargetNode): TreeNode;
export declare const getStoreConfig: (props: TdTreeProps) => Pick<TdTreeProps<import("../common").TreeOptionData>, "filter" | "keys" | "load" | "draggable" | "lazy" | "disabled" | "expandMutex" | "valueMode" | "checkable" | "activable" | "activeMultiple" | "checkStrictly" | "expandAll" | "expandLevel" | "expandParent">;
