{"version":3,"file":"editable-cell.js","sources":["../../src/table/editable-cell.tsx"],"sourcesContent":["import { computed, defineComponent, PropType, ref, SetupContext, toRefs, watch } from 'vue';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport isFunction from 'lodash/isFunction';\nimport { Edit1Icon as TdEdit1Icon } from 'tdesign-icons-vue-next';\n\nimport {\n  TableRowData,\n  PrimaryTableCol,\n  PrimaryTableRowEditContext,\n  PrimaryTableRowValidateContext,\n  TdBaseTableProps,\n} from './type';\nimport { TableClassName } from './hooks/useClassName';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport { renderCell } from './tr';\nimport { validate } from '../form/form-model';\nimport log from '../_common/js/log';\nimport { AllValidateResult } from '../form/type';\n\nexport interface EditableCellProps {\n  row: TableRowData;\n  rowIndex: number;\n  col: PrimaryTableCol<TableRowData>;\n  colIndex: number;\n  oldCell: PrimaryTableCol<TableRowData>['cell'];\n  tableBaseClass?: TableClassName['tableBaseClass'];\n  /** 行编辑需要使用 editable。单元格编辑则无需使用，设置为 undefined */\n  editable?: boolean;\n  readonly?: boolean;\n  errors?: AllValidateResult[];\n  cellEmptyContent?: TdBaseTableProps['cellEmptyContent'];\n  onChange?: (context: PrimaryTableRowEditContext<TableRowData>) => void;\n  onValidate?: (context: PrimaryTableRowValidateContext<TableRowData>) => void;\n  onRuleChange?: (context: PrimaryTableRowEditContext<TableRowData>) => void;\n}\n\nexport default defineComponent({\n  name: 'TableEditableCell',\n  props: {\n    row: Object as PropType<EditableCellProps['row']>,\n    rowIndex: Number,\n    col: Object as PropType<EditableCellProps['col']>,\n    colIndex: Number,\n    oldCell: [Function, String] as PropType<EditableCellProps['oldCell']>,\n    tableBaseClass: Object as PropType<EditableCellProps['tableBaseClass']>,\n    cellEmptyContent: [Function, String] as PropType<EditableCellProps['cellEmptyContent']>,\n    editable: {\n      type: Boolean,\n      default: undefined,\n    },\n    readonly: {\n      type: Boolean,\n    },\n    errors: {\n      type: Array as PropType<EditableCellProps['errors']>,\n      default: undefined,\n    },\n    onChange: Function as PropType<EditableCellProps['onChange']>,\n    onValidate: Function as PropType<EditableCellProps['onValidate']>,\n    onRuleChange: Function as PropType<EditableCellProps['onRuleChange']>,\n  },\n\n  setup(props: EditableCellProps, context: SetupContext) {\n    const { row, col } = toRefs(props);\n    const tableEditableCellRef = ref(null);\n    const isEdit = ref(props.col.edit?.defaultEditable || false);\n    const editValue = ref();\n    const errorList = ref<AllValidateResult[]>();\n\n    const { Edit1Icon } = useGlobalIcon({ Edit1Icon: TdEdit1Icon });\n\n    const cellParams = computed(() => ({\n      rowIndex: props.rowIndex,\n      colIndex: props.colIndex,\n      col: props.col,\n      row: props.row,\n    }));\n\n    const currentRow = computed(() => {\n      const newRow = { ...row.value };\n      set(newRow, col.value.colKey, editValue.value);\n      return newRow;\n    });\n\n    const cellNode = computed(() => {\n      const node = renderCell(\n        {\n          row: currentRow.value,\n          col: { ...col.value, cell: props.oldCell },\n          rowIndex: props.rowIndex,\n          colIndex: props.colIndex,\n        },\n        context.slots,\n        { cellEmptyContent: props.cellEmptyContent },\n      );\n      return node;\n    });\n\n    const componentProps = computed(() => {\n      const { edit } = col.value;\n      if (!edit) return {};\n      const editProps = isFunction(edit.props)\n        ? edit.props({\n            ...cellParams.value,\n            editedRow: currentRow.value,\n          })\n        : { ...edit.props };\n      // to remove warn: runtime-core.esm-bundler.js:38 [Vue warn]: Invalid prop: type check failed for prop \"onChange\". Expected Function, got Array\n      delete editProps.onChange;\n      delete editProps.value;\n      edit.abortEditOnEvent?.forEach((item) => {\n        delete editProps[item];\n      });\n      return editProps;\n    });\n\n    const isAbortEditOnChange = computed(() => {\n      const { edit } = col.value;\n      if (!edit) return false;\n      return Boolean(edit.abortEditOnEvent?.includes('onChange'));\n    });\n\n    const validateEdit = (trigger: 'self' | 'parent') => {\n      return new Promise((resolve) => {\n        const params: PrimaryTableRowValidateContext<TableRowData> = {\n          result: [\n            {\n              ...cellParams.value,\n              errorList: [],\n              value: editValue.value,\n            },\n          ],\n          trigger,\n        };\n        const rules = isFunction(col.value.edit.rules) ? col.value.edit.rules(cellParams.value) : col.value.edit.rules;\n        if (!col.value.edit || !rules || !rules.length) {\n          props.onValidate?.(params);\n          resolve(true);\n          return;\n        }\n        validate(editValue.value, rules).then((result) => {\n          const list = result?.filter((t) => !t.result);\n          params.result[0].errorList = list;\n          props.onValidate?.(params);\n          if (!list || !list.length) {\n            resolve(true);\n          } else {\n            errorList.value = list;\n            resolve(list);\n          }\n        });\n      });\n    };\n\n    const isSame = (a: any, b: any) => {\n      if (typeof a === 'object' && typeof b === 'object') {\n        return JSON.stringify(a) === JSON.stringify(b);\n      }\n      return a === b;\n    };\n\n    const updateAndSaveAbort = (outsideAbortEvent: Function, ...args: any) => {\n      validateEdit('self').then((result) => {\n        if (result !== true) return;\n        const oldValue = get(row.value, col.value.colKey);\n        // 相同的值无需触发变化\n        if (!isSame(editValue.value, oldValue)) {\n          editValue.value = oldValue;\n          outsideAbortEvent?.(...args);\n        }\n        // 此处必须在事件执行完成后异步销毁编辑组件，否则会导致事件清楚不及时引起的其他问题\n        const timer = setTimeout(() => {\n          isEdit.value = false;\n          errorList.value = [];\n          clearTimeout(timer);\n        }, 0);\n      });\n    };\n\n    const listeners = computed<{ [key: string]: Function }>(() => {\n      const { edit } = col.value;\n      const isCellEditable = props.editable === undefined;\n      if (!isEdit.value || !isCellEditable) return;\n      if (!edit?.abortEditOnEvent?.length) return {};\n      // 自定义退出编辑态的事件\n      const tListeners = {};\n      const outsideAbortEvent = edit?.onEdited;\n      edit.abortEditOnEvent.forEach((itemEvent) => {\n        if (itemEvent === 'onChange') return;\n        tListeners[itemEvent] = (...args: any) => {\n          updateAndSaveAbort(\n            outsideAbortEvent,\n            {\n              ...cellParams.value,\n              trigger: itemEvent,\n              newRowData: currentRow.value,\n            },\n            ...args,\n          );\n        };\n      });\n\n      return tListeners;\n    });\n\n    const onEditChange = (val: any, ...args: any) => {\n      editValue.value = val;\n      const params = {\n        ...cellParams.value,\n        value: val,\n        editedRow: { ...props.row, [props.col.colKey]: val },\n      };\n      props.onChange?.(params);\n      props.onRuleChange?.(params);\n      const isCellEditable = props.editable === undefined;\n      if (isCellEditable && isAbortEditOnChange.value) {\n        const outsideAbortEvent = col.value.edit?.onEdited;\n        updateAndSaveAbort(\n          outsideAbortEvent,\n          {\n            ...cellParams.value,\n            trigger: 'onChange',\n            newRowData: currentRow.value,\n          },\n          ...args,\n        );\n      }\n    };\n\n    const documentClickHandler = (e: PointerEvent) => {\n      if (!col.value.edit || !col.value.edit.component) return;\n      if (!isEdit.value) return;\n      // @ts-ignore\n      if (e.path?.includes(tableEditableCellRef.value?.$el)) return;\n      // @ts-ignore 如果点击到 Popup 复层也直接返回\n      for (let i = 0, len = e.path.length; i < len; i++) {\n        // @ts-ignore\n        const node = e.path[i];\n        if (node.classList?.value?.includes('popup__content')) {\n          return;\n        }\n      }\n      const outsideAbortEvent = col.value.edit.onEdited;\n      updateAndSaveAbort(outsideAbortEvent, {\n        ...cellParams.value,\n        trigger: 'document',\n        newRowData: currentRow.value,\n      });\n    };\n\n    const cellValue = computed(() => get(row.value, col.value.colKey));\n\n    watch(\n      cellValue,\n      (cellValue) => {\n        let val = cellValue;\n        if (typeof val === 'object' && val !== null) {\n          val = val instanceof Array ? [...val] : { ...val };\n        }\n        editValue.value = val;\n      },\n      { immediate: true },\n    );\n\n    watch(\n      isEdit,\n      (isEdit) => {\n        const isCellEditable = props.editable === undefined;\n        if (!col.value.edit || !col.value.edit.component || !isCellEditable) return;\n        if (isEdit) {\n          document.addEventListener('click', documentClickHandler);\n        } else {\n          document.removeEventListener('click', documentClickHandler);\n        }\n      },\n      { immediate: true },\n    );\n\n    watch(\n      () => [props.editable, props.row, props.col, props.rowIndex, props.colIndex],\n      ([editable]: [boolean]) => {\n        // 退出编辑态时，恢复原始值，等待父组件传入新的 data 值\n        if (editable === false) {\n          editValue.value = cellValue.value;\n        } else if (editable === true) {\n          props.onRuleChange?.({\n            ...cellParams.value,\n            value: cellValue.value,\n            editedRow: row.value,\n          });\n        }\n      },\n      { immediate: true },\n    );\n\n    watch(\n      () => props.errors,\n      (errors) => {\n        errorList.value = errors;\n      },\n    );\n\n    return () => {\n      if (props.readonly) {\n        return cellNode.value;\n      }\n      // props.editable = undefined 表示由组件内部控制编辑状态\n      if ((props.editable === undefined && !isEdit.value) || props.editable === false) {\n        return (\n          <div\n            class={props.tableBaseClass.cellEditable}\n            onClick={(e: MouseEvent) => {\n              isEdit.value = true;\n              e.stopPropagation();\n            }}\n          >\n            {cellNode.value}\n            {col.value.edit?.showEditIcon !== false && <Edit1Icon size=\"12px\" />}\n          </div>\n        );\n      }\n      const Component = col.value.edit?.component;\n      if (!Component) {\n        log.error('Table', 'edit.component is required.');\n        return null;\n      }\n      const errorMessage = errorList.value?.[0]?.message;\n      return (\n        <div\n          class={props.tableBaseClass.cellEditWrap}\n          onClick={(e: MouseEvent) => {\n            e.stopPropagation();\n          }}\n        >\n          <Component\n            ref=\"tableEditableCellRef\"\n            status={errorMessage ? errorList.value?.[0]?.type || 'error' : undefined}\n            tips={errorMessage}\n            {...componentProps.value}\n            {...listeners.value}\n            value={editValue.value}\n            onChange={onEditChange}\n          />\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","row","Object","rowIndex","Number","col","colIndex","oldCell","Function","String","tableBaseClass","cellEmptyContent","editable","type","Boolean","readonly","errors","Array","onChange","onValidate","onRuleChange","setup","context","toRefs","tableEditableCellRef","ref","isEdit","edit","defaultEditable","editValue","errorList","useGlobalIcon","Edit1Icon","TdEdit1Icon","cellParams","computed","currentRow","newRow","value","set","colKey","cellNode","node","renderCell","cell","slots","componentProps","editProps","isFunction","editedRow","abortEditOnEvent","forEach","item","isAbortEditOnChange","includes","validateEdit","trigger","Promise","resolve","params","result","rules","length","validate","then","list","filter","t","isSame","a","b","JSON","stringify","updateAndSaveAbort","outsideAbortEvent","args","oldValue","get","timer","setTimeout","clearTimeout","listeners","isCellEditable","tListeners","onEdited","itemEvent","newRowData","onEditChange","val","documentClickHandler","e","component","path","$el","i","len","classList","cellValue","watch","immediate","document","addEventListener","removeEventListener","_createVNode","cellEditable","stopPropagation","showEditIcon","Component","log","error","errorMessage","message","cellEditWrap","_mergeProps"],"mappings":"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"}