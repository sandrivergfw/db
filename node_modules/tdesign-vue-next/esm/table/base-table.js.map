{"version":3,"file":"base-table.js","sources":["../../src/table/base-table.tsx"],"sourcesContent":["import {\n  computed,\n  defineComponent,\n  SetupContext,\n  toRefs,\n  ref,\n  provide,\n  nextTick,\n  PropType,\n  watch,\n  onMounted,\n} from 'vue';\nimport pick from 'lodash/pick';\nimport props from './base-table-props';\nimport useTableHeader from './hooks/useTableHeader';\nimport useColumnResize from './hooks/useColumnResize';\nimport useFixed from './hooks/useFixed';\nimport usePagination from './hooks/usePagination';\nimport useVirtualScroll from '../hooks/useVirtualScroll';\nimport useAffix from './hooks/useAffix';\nimport Loading from '../loading';\nimport TBody, { extendTableProps } from './tbody';\nimport { BaseTableProps } from './interface';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport useStyle, { formatCSSUnit } from './hooks/useStyle';\nimport useClassName from './hooks/useClassName';\nimport { useConfig } from '../hooks/useConfig';\nimport { Affix } from '../affix';\nimport { ROW_LISTENERS } from './tr';\nimport THead from './thead';\nimport TFoot from './tfoot';\nimport { getAffixProps } from './utils';\nimport { Styles } from '../common';\nimport log from '../_common/js/log';\n\nexport const BASE_TABLE_EVENTS = ['page-change', 'cell-click', 'scroll', 'scrollX', 'scrollY'];\nexport const BASE_TABLE_ALL_EVENTS = ROW_LISTENERS.map((t) => `row-${t}`).concat(BASE_TABLE_EVENTS);\n\nexport interface TableListeners {\n  [key: string]: Function;\n}\n\nexport default defineComponent({\n  name: 'TBaseTable',\n\n  props: {\n    ...props,\n    /**\n     * 渲染展开行，非公开属性，请勿在业务中使用\n     */\n    renderExpandedRow: Function as PropType<BaseTableProps['renderExpandedRow']>,\n    onLeafColumnsChange: Function as PropType<BaseTableProps['onLeafColumnsChange']>,\n  },\n\n  setup(props: BaseTableProps, context: SetupContext) {\n    const renderTNode = useTNodeJSX();\n    const tableRef = ref<HTMLDivElement>();\n    const tableElmRef = ref<HTMLTableElement>();\n    const tableBodyRef = ref<HTMLTableElement>();\n    const tableFootHeight = ref(0);\n    const { classPrefix, virtualScrollClasses, tableLayoutClasses, tableBaseClass, tableColFixedClasses } =\n      useClassName();\n    // 表格基础样式类\n    const { tableClasses, sizeClassNames, tableContentStyles, tableElementStyles } = useStyle(props);\n    const { globalConfig } = useConfig('table');\n    const { isMultipleHeader, spansAndLeafNodes, thList } = useTableHeader(props);\n    const finalColumns = computed(() => spansAndLeafNodes.value?.leafColumns || props.columns);\n\n    // 吸附相关ref 用来做视图resize后重新定位\n    const paginationAffixRef = ref();\n    const horizontalScrollAffixRef = ref();\n    const headerTopAffixRef = ref();\n    const footerBottomAffixRef = ref();\n\n    // 固定表头和固定列逻辑\n    const {\n      scrollbarWidth,\n      virtualScrollHeaderPos,\n      tableWidth,\n      tableElmWidth,\n      tableContentRef,\n      isFixedHeader,\n      isWidthOverflow,\n      isFixedColumn,\n      thWidthList,\n      showColumnShadow,\n      rowAndColFixedPosition,\n      setData,\n      refreshTable,\n      emitScrollEvent,\n      setUseFixedTableElmRef,\n      updateColumnFixedShadow,\n      getThWidthList,\n      updateThWidthList,\n      setRecalculateColWidthFuncRef,\n      addTableResizeObserver,\n    } = useFixed(props, context, finalColumns, {\n      paginationAffixRef,\n      horizontalScrollAffixRef,\n      headerTopAffixRef,\n      footerBottomAffixRef,\n    });\n\n    // 1. 表头吸顶；2. 表尾吸底；3. 底部滚动条吸底；4. 分页器吸底\n    const {\n      affixHeaderRef,\n      affixFooterRef,\n      horizontalScrollbarRef,\n      paginationRef,\n      showAffixHeader,\n      showAffixFooter,\n      showAffixPagination,\n      onHorizontalScroll,\n      setTableContentRef,\n      updateAffixHeaderOrFooter,\n    } = useAffix(props);\n\n    const { dataSource, isPaginateData, renderPagination } = usePagination(props);\n\n    // 列宽拖拽逻辑\n    const columnResizeParams = useColumnResize(tableContentRef, refreshTable, getThWidthList, updateThWidthList);\n    const { resizeLineRef, resizeLineStyle, recalculateColWidth, setEffectColMap } = columnResizeParams;\n    setRecalculateColWidthFuncRef(recalculateColWidth);\n\n    const dynamicBaseTableClasses = computed(() => [\n      tableClasses.value,\n      {\n        [tableBaseClass.headerFixed]: isFixedHeader.value,\n        [tableBaseClass.columnFixed]: isFixedColumn.value,\n        [tableBaseClass.widthOverflow]: isWidthOverflow.value,\n        [tableBaseClass.multipleHeader]: isMultipleHeader.value,\n        [tableColFixedClasses.leftShadow]: showColumnShadow.left,\n        [tableColFixedClasses.rightShadow]: showColumnShadow.right,\n        [tableBaseClass.columnResizableTable]: props.resizable,\n      },\n    ]);\n\n    const tableElmClasses = computed(() => [\n      [tableLayoutClasses[props.tableLayout]],\n      { [tableBaseClass.fullHeight]: props.height },\n    ]);\n\n    const isVirtual = computed(() => type === 'virtual' && props.data?.length > (props.scroll?.threshold || 100));\n\n    const showRightDivider = computed(\n      () =>\n        props.bordered &&\n        isFixedHeader.value &&\n        ((isMultipleHeader.value && isWidthOverflow.value) || !isMultipleHeader.value),\n    );\n\n    watch(tableElmRef, () => {\n      setUseFixedTableElmRef(tableElmRef.value);\n    });\n\n    watch(\n      () => [props.data, dataSource],\n      () => {\n        setData(isPaginateData.value ? dataSource.value : props.data);\n      },\n    );\n\n    watch(\n      spansAndLeafNodes,\n      () => {\n        props.onLeafColumnsChange?.(spansAndLeafNodes.value.leafColumns);\n      },\n      { immediate: true },\n    );\n\n    watch(\n      thList,\n      () => {\n        setEffectColMap(thList.value[0], null);\n      },\n      {\n        immediate: true,\n      },\n    );\n\n    const onFixedChange = () => {\n      nextTick(() => {\n        onHorizontalScroll();\n        updateAffixHeaderOrFooter();\n      });\n    };\n\n    const { type, rowHeight, bufferSize = 20, isFixedRowHeight = false } = props.scroll || {};\n    const { data } = toRefs<any>(props);\n    const {\n      trs = null,\n      scrollHeight = null,\n      visibleData = null,\n      translateY = null,\n      handleScroll: handleVirtualScroll = null,\n      handleRowMounted = null,\n    } = type === 'virtual'\n      ? useVirtualScroll({\n          container: tableContentRef,\n          data,\n          fixedHeight: isFixedRowHeight,\n          lineHeight: rowHeight,\n          bufferSize,\n          threshold: props.scroll?.threshold,\n        })\n      : {};\n    provide('tableContentRef', tableContentRef);\n    provide('rowHeightRef', ref(rowHeight));\n\n    let lastScrollY = 0;\n    const onInnerVirtualScroll = (e: WheelEvent) => {\n      const target = (e.target || e.srcElement) as HTMLElement;\n      const top = target.scrollTop;\n      // 排除横向滚动出发的纵向虚拟滚动计算\n      if (lastScrollY !== top) {\n        isVirtual.value && handleVirtualScroll();\n      } else {\n        lastScrollY = 0;\n        updateColumnFixedShadow(target);\n      }\n      lastScrollY = top;\n      emitScrollEvent(e);\n    };\n\n    // used for top margin\n    const getTFootHeight = () => {\n      if (!tableElmRef.value) return;\n      tableFootHeight.value = tableElmRef.value.querySelector('tfoot')?.getBoundingClientRect().height;\n    };\n\n    watch(tableContentRef, () => {\n      setTableContentRef(tableContentRef.value);\n    });\n\n    watch(tableElmRef, getTFootHeight);\n\n    watch(tableRef, (tableRef) => {\n      addTableResizeObserver(tableRef);\n    });\n\n    onMounted(() => {\n      getTFootHeight();\n      setTableContentRef(tableContentRef.value);\n      addTableResizeObserver(tableRef.value);\n    });\n\n    return {\n      thList,\n      classPrefix,\n      isVirtual,\n      globalConfig,\n      tableFootHeight,\n      virtualScrollHeaderPos,\n      tableWidth,\n      tableElmWidth,\n      tableRef,\n      tableElmRef,\n      sizeClassNames,\n      tableBaseClass,\n      spansAndLeafNodes,\n      dynamicBaseTableClasses,\n      tableContentStyles,\n      tableElementStyles,\n      virtualScrollClasses,\n      tableLayoutClasses,\n      tableElmClasses,\n      tableContentRef,\n      isFixedHeader,\n      isWidthOverflow,\n      isFixedColumn,\n      rowAndColFixedPosition,\n      showColumnShadow,\n      thWidthList,\n      isPaginateData,\n      dataSource,\n      scrollType: type,\n      rowHeight,\n      trs,\n      bufferSize,\n      scrollHeight,\n      visibleData,\n      translateY,\n      affixHeaderRef,\n      affixFooterRef,\n      paginationRef,\n      showAffixHeader,\n      showAffixFooter,\n      scrollbarWidth,\n      isMultipleHeader,\n      showRightDivider,\n      resizeLineRef,\n      resizeLineStyle,\n      columnResizeParams,\n      horizontalScrollbarRef,\n      tableBodyRef,\n      showAffixPagination,\n      renderPagination,\n      renderTNode,\n      handleRowMounted,\n      onFixedChange,\n      onHorizontalScroll,\n      updateAffixHeaderOrFooter,\n      refreshTable,\n      onInnerVirtualScroll,\n      paginationAffixRef,\n      horizontalScrollAffixRef,\n      headerTopAffixRef,\n      footerBottomAffixRef,\n    };\n  },\n\n  render() {\n    const { rowAndColFixedPosition } = this;\n    const data = this.isPaginateData ? this.dataSource : this.data;\n    const columns = this.spansAndLeafNodes?.leafColumns || this.columns;\n\n    const columnResizable = this.allowResizeColumnWidth === undefined ? this.resizable : this.allowResizeColumnWidth;\n    if (columnResizable && this.tableLayout === 'auto') {\n      log.warn('Table', 'table-layout can not be `auto` for resizable column table, set `table-layout: fixed` please.');\n    }\n    const defaultColWidth = this.tableLayout === 'fixed' && this.isWidthOverflow ? '100px' : undefined;\n\n    const renderColGroup = (isAffixHeader = true) => (\n      <colgroup>\n        {columns.map((col) => {\n          const style: Styles = {\n            width:\n              formatCSSUnit(\n                (isAffixHeader || columnResizable ? this.thWidthList[col.colKey] : undefined) || col.width,\n              ) || defaultColWidth,\n          };\n          if (col.minWidth) {\n            style.minWidth = formatCSSUnit(col.minWidth);\n          }\n          return <col key={col.colKey} style={style}></col>;\n        })}\n      </colgroup>\n    );\n\n    const renderAffixedHeader = () => {\n      if (this.showHeader === false) return null;\n      return (\n        !!(this.isVirtual || this.headerAffixedTop) &&\n        (this.headerAffixedTop ? (\n          <Affix\n            offsetTop={0}\n            {...getAffixProps(this.headerAffixedTop)}\n            onFixedChange={this.onFixedChange}\n            ref=\"headerTopAffixRef\"\n          >\n            {affixHeaderWithWrap}\n          </Affix>\n        ) : (\n          this.isFixedHeader && affixHeaderWithWrap\n        ))\n      );\n    };\n\n    const renderAffixedHorizontalScrollbar = () => (\n      <Affix\n        offsetBottom={0}\n        {...getAffixProps(this.horizontalScrollAffixedBottom)}\n        style={{ marginTop: `-${this.scrollbarWidth * 2}px` }}\n        horizontalScrollAffixedBottom\n        ref=\"horizontalScrollAffixRef\"\n      >\n        <div\n          ref=\"horizontalScrollbarRef\"\n          class={['scrollbar', this.tableBaseClass.obviousScrollbar]}\n          style={{\n            width: `${this.tableWidth}px`,\n            overflow: 'auto',\n            opacity: Number(this.showAffixFooter),\n          }}\n        >\n          <div style={{ width: `${this.tableElmWidth}px`, height: '5px' }}></div>\n        </div>\n      </Affix>\n    );\n\n    const headProps = {\n      isFixedHeader: this.isFixedHeader,\n      rowAndColFixedPosition: this.rowAndColFixedPosition,\n      isMultipleHeader: this.isMultipleHeader,\n      bordered: this.bordered,\n      spansAndLeafNodes: this.spansAndLeafNodes,\n      thList: this.thList,\n      thWidthList: this.thWidthList,\n      resizable: this.resizable,\n      columnResizeParams: this.columnResizeParams,\n      classPrefix: this.classPrefix,\n      ellipsisOverlayClassName: this.size !== 'medium' ? this.sizeClassNames[this.size] : '',\n    };\n\n    /**\n     * Affixed Header\n     */\n    // onlyVirtualScrollBordered 用于浏览器兼容性处理，只有 chrome 需要调整 bordered，FireFox 和 Safari 不需要\n    const onlyVirtualScrollBordered =\n      !!(this.isVirtual && !this.headerAffixedTop && this.bordered) && /Chrome/.test(navigator?.userAgent);\n    const borderWidth = this.bordered && onlyVirtualScrollBordered ? 1 : 0;\n    const affixHeaderWrapHeight =\n      (this.affixHeaderRef?.getBoundingClientRect().height || 0) - this.scrollbarWidth - borderWidth;\n    // 两类场景：1. 虚拟滚动，永久显示表头，直到表头消失在可视区域； 2. 表头吸顶，根据滚动情况判断是否显示吸顶表头\n    const headerOpacity = props.headerAffixedTop ? Number(this.showAffixHeader) : 1;\n    const affixHeaderWrapHeightStyle = {\n      width: `${this.tableWidth}px`,\n      height: `${affixHeaderWrapHeight}px`,\n      opacity: headerOpacity,\n      marginTop: onlyVirtualScrollBordered ? `${borderWidth}px` : 0,\n    };\n    // 多级表头左边线缺失\n    const affixedLeftBorder = this.bordered ? 1 : 0;\n    const affixedHeader = Boolean((this.headerAffixedTop || this.isVirtual) && this.tableWidth) && (\n      <div\n        ref=\"affixHeaderRef\"\n        style={{\n          width: `${this.tableWidth - affixedLeftBorder}px`,\n          opacity: Number(this.showAffixHeader),\n        }}\n        class={['scrollbar', { [this.tableBaseClass.affixedHeaderElm]: this.headerAffixedTop || this.isVirtual }]}\n      >\n        <table class={this.tableElmClasses} style={{ ...this.tableElementStyles, width: `${this.tableElmWidth}px` }}>\n          {renderColGroup(true)}\n          <THead v-slots={this.$slots} {...headProps} />\n        </table>\n      </div>\n    );\n\n    // 添加这一层，是为了隐藏表头的横向滚动条。如果以后不需要照顾 IE 10 以下的项目，则可直接移除这一层\n    // 彼时，可更为使用 CSS 样式中的 .hideScrollbar()\n    const affixHeaderWithWrap = (\n      <div class={this.tableBaseClass.affixedHeaderWrap} style={affixHeaderWrapHeightStyle}>\n        {affixedHeader}\n      </div>\n    );\n\n    /**\n     * Affixed Footer\n     */\n    let marginScrollbarWidth = this.isWidthOverflow ? this.scrollbarWidth : 0;\n    if (this.bordered) {\n      marginScrollbarWidth += 1;\n    }\n    // Hack: Affix 组件，marginTop 临时使用 负 margin 定位位置\n    const affixedFooter = Boolean(this.footerAffixedBottom && this.footData?.length && this.tableWidth) && (\n      <Affix\n        class={this.tableBaseClass.affixedFooterWrap}\n        onFixedChange={this.onFixedChange}\n        offsetBottom={marginScrollbarWidth || 0}\n        {...getAffixProps(this.footerAffixedBottom)}\n        style={{ marginTop: `${-1 * (this.tableFootHeight + marginScrollbarWidth)}px` }}\n        ref=\"footerBottomAffixRef\"\n      >\n        <div\n          ref=\"affixFooterRef\"\n          style={{ width: `${this.tableWidth - affixedLeftBorder}px`, opacity: Number(this.showAffixFooter) }}\n          class={['scrollbar', { [this.tableBaseClass.affixedFooterElm]: this.footerAffixedBottom || this.isVirtual }]}\n        >\n          <table class={this.tableElmClasses} style={{ ...this.tableElementStyles, width: `${this.tableElmWidth}px` }}>\n            {/* 此处和 Vue2 不同，Vue3 里面必须每一处单独写 <colgroup> */}\n            {renderColGroup(true)}\n            <TFoot\n              rowKey={this.rowKey}\n              v-slots={this.$slots}\n              isFixedHeader={this.isFixedHeader}\n              rowAndColFixedPosition={rowAndColFixedPosition}\n              footData={this.footData}\n              columns={columns}\n              rowAttributes={this.rowAttributes}\n              rowClassName={this.rowClassName}\n              thWidthList={this.thWidthList}\n              footerSummary={this.footerSummary}\n              rowspanAndColspanInFooter={this.rowspanAndColspanInFooter}\n            ></TFoot>\n          </table>\n        </div>\n      </Affix>\n    );\n\n    const translate = `translate(0, ${this.scrollHeight}px)`;\n    const virtualStyle = {\n      transform: translate,\n      '-ms-transform': translate,\n      '-moz-transform': translate,\n      '-webkit-transform': translate,\n    };\n    const tableBodyProps = {\n      classPrefix: this.classPrefix,\n      ellipsisOverlayClassName: this.size !== 'medium' ? this.sizeClassNames[this.size] : '',\n      rowAndColFixedPosition,\n      showColumnShadow: this.showColumnShadow,\n      data: this.isVirtual ? this.visibleData : data,\n      columns: this.spansAndLeafNodes.leafColumns,\n      tableElm: this.tableRef,\n      tableWidth: this.tableWidth,\n      isWidthOverflow: this.isWidthOverflow,\n      // 虚拟滚动相关属性\n      isVirtual: this.isVirtual,\n      translateY: this.translateY,\n      scrollType: this.scrollType,\n      rowHeight: this.rowHeight,\n      trs: this.trs,\n      bufferSize: this.bufferSize,\n      scroll: this.scroll,\n      cellEmptyContent: this.cellEmptyContent,\n      tableContentElm: this.tableContentRef,\n      handleRowMounted: this.handleRowMounted,\n      renderExpandedRow: this.renderExpandedRow,\n      ...pick(this.$props, extendTableProps),\n    };\n    const tableContent = (\n      <div\n        ref=\"tableContentRef\"\n        class={this.tableBaseClass.content}\n        style={this.tableContentStyles}\n        onScroll={this.onInnerVirtualScroll}\n      >\n        {this.isVirtual && <div class={this.virtualScrollClasses.cursor} style={virtualStyle} />}\n\n        <table ref=\"tableElmRef\" class={this.tableElmClasses} style={this.tableElementStyles}>\n          {renderColGroup(false)}\n          {this.showHeader && (\n            <THead v-slots={this.$slots} {...{ ...headProps, thWidthList: columnResizable ? this.thWidthList : {} }} />\n          )}\n          <TBody v-slots={this.$slots} {...tableBodyProps} />\n          <TFoot\n            v-slots={this.$slots}\n            rowKey={this.rowKey}\n            isFixedHeader={this.isFixedHeader}\n            rowAndColFixedPosition={rowAndColFixedPosition}\n            footData={this.footData}\n            columns={columns}\n            rowAttributes={this.rowAttributes}\n            rowClassName={this.rowClassName}\n            footerSummary={this.footerSummary}\n            rowspanAndColspanInFooter={this.rowspanAndColspanInFooter}\n          ></TFoot>\n        </table>\n      </div>\n    );\n\n    const customLoadingText = this.renderTNode('loading');\n    const loadingContent = this.loading !== undefined && (\n      <Loading\n        loading={!!this.loading}\n        text={customLoadingText ? () => customLoadingText : undefined}\n        attach={this.tableRef ? () => this.tableRef : undefined}\n        showOverlay\n        size=\"small\"\n        {...(this.loadingProps as BaseTableProps['loadingProps'])}\n      ></Loading>\n    );\n\n    const topContent = this.renderTNode('topContent');\n    const bottomContent = this.renderTNode('bottomContent');\n    const pagination = (\n      <div\n        ref=\"paginationRef\"\n        class={this.tableBaseClass.paginationWrap}\n        style={{ opacity: Number(this.showAffixPagination) }}\n      >\n        {this.renderPagination()}\n      </div>\n    );\n    const bottom = !!bottomContent && <div class={this.tableBaseClass.bottomContent}>{bottomContent}</div>;\n\n    return (\n      <div ref=\"tableRef\" class={this.dynamicBaseTableClasses} style=\"position: relative\">\n        {!!topContent && <div class={this.tableBaseClass.topContent}>{topContent}</div>}\n\n        {renderAffixedHeader()}\n\n        {tableContent}\n\n        {affixedFooter}\n\n        {loadingContent}\n\n        {/* 右侧滚动条分隔线 */}\n        {this.showRightDivider && (\n          <div\n            class={this.tableBaseClass.scrollbarDivider}\n            style={{\n              right: `${this.scrollbarWidth}px`,\n              height: `${this.tableContentRef?.getBoundingClientRect().height}px`,\n            }}\n          ></div>\n        )}\n\n        {bottom}\n\n        {/* 吸底的滚动条 */}\n        {this.horizontalScrollAffixedBottom && renderAffixedHorizontalScrollbar()}\n\n        {/* 吸底的分页器 */}\n        {this.paginationAffixedBottom ? (\n          <Affix offsetBottom={0} {...getAffixProps(this.paginationAffixedBottom)} ref=\"paginationAffixRef\">\n            {pagination}\n          </Affix>\n        ) : (\n          pagination\n        )}\n\n        {/* 调整列宽时的指示线。由于层级需要比较高，因而放在根节点，避免被吸顶表头覆盖。非必要情况，请勿调整辅助线位置 */}\n        <div ref=\"resizeLineRef\" class={this.tableBaseClass.resizeLine} style={this.resizeLineStyle}></div>\n      </div>\n    );\n  },\n});\n"],"names":["_isVNode","BASE_TABLE_EVENTS","BASE_TABLE_ALL_EVENTS","ROW_LISTENERS","map","t","concat","defineComponent","name","props","renderExpandedRow","Function","onLeafColumnsChange","setup","context","renderTNode","useTNodeJSX","tableRef","ref","tableElmRef","tableBodyRef","tableFootHeight","useClassName","classPrefix","virtualScrollClasses","tableLayoutClasses","tableBaseClass","tableColFixedClasses","useStyle","tableClasses","sizeClassNames","tableContentStyles","tableElementStyles","useConfig","globalConfig","useTableHeader","isMultipleHeader","spansAndLeafNodes","thList","finalColumns","computed","value","leafColumns","columns","paginationAffixRef","horizontalScrollAffixRef","headerTopAffixRef","footerBottomAffixRef","useFixed","scrollbarWidth","virtualScrollHeaderPos","tableWidth","tableElmWidth","tableContentRef","isFixedHeader","isWidthOverflow","isFixedColumn","thWidthList","showColumnShadow","rowAndColFixedPosition","setData","refreshTable","emitScrollEvent","setUseFixedTableElmRef","updateColumnFixedShadow","getThWidthList","updateThWidthList","setRecalculateColWidthFuncRef","addTableResizeObserver","useAffix","affixHeaderRef","affixFooterRef","horizontalScrollbarRef","paginationRef","showAffixHeader","showAffixFooter","showAffixPagination","onHorizontalScroll","setTableContentRef","updateAffixHeaderOrFooter","usePagination","dataSource","isPaginateData","renderPagination","columnResizeParams","useColumnResize","resizeLineRef","resizeLineStyle","recalculateColWidth","setEffectColMap","dynamicBaseTableClasses","headerFixed","columnFixed","widthOverflow","multipleHeader","leftShadow","left","rightShadow","right","columnResizableTable","resizable","tableElmClasses","tableLayout","fullHeight","height","isVirtual","type","data","length","scroll","threshold","showRightDivider","bordered","watch","immediate","onFixedChange","nextTick","rowHeight","bufferSize","isFixedRowHeight","toRefs","useVirtualScroll","container","fixedHeight","lineHeight","trs","scrollHeight","visibleData","translateY","handleScroll","handleVirtualScroll","handleRowMounted","provide","lastScrollY","onInnerVirtualScroll","e","target","srcElement","top","scrollTop","getTFootHeight","querySelector","getBoundingClientRect","onMounted","scrollType","render","columnResizable","allowResizeColumnWidth","log","warn","defaultColWidth","renderColGroup","isAffixHeader","_createVNode","col","style","width","formatCSSUnit","colKey","minWidth","renderAffixedHeader","showHeader","headerAffixedTop","_mergeProps","getAffixProps","affixHeaderWithWrap","renderAffixedHorizontalScrollbar","horizontalScrollAffixedBottom","marginTop","obviousScrollbar","overflow","opacity","Number","headProps","ellipsisOverlayClassName","size","onlyVirtualScrollBordered","test","navigator","userAgent","borderWidth","affixHeaderWrapHeight","headerOpacity","affixHeaderWrapHeightStyle","affixedLeftBorder","affixedHeader","Boolean","affixedHeaderElm","$slots","affixedHeaderWrap","marginScrollbarWidth","affixedFooter","footerAffixedBottom","footData","affixedFooterWrap","affixedFooterElm","rowKey","rowAttributes","rowClassName","footerSummary","rowspanAndColspanInFooter","translate","virtualStyle","transform","tableBodyProps","tableElm","cellEmptyContent","tableContentElm","pick","$props","extendTableProps","tableContent","content","cursor","customLoadingText","loadingContent","loading","loadingProps","topContent","bottomContent","pagination","paginationWrap","bottom","scrollbarDivider","paginationAffixedBottom","resizeLine"],"mappings":"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"}