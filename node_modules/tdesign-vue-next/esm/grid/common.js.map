{"version":3,"file":"common.js","sources":["../../src/grid/common.ts"],"sourcesContent":["import { ref } from 'vue';\nimport isObject from 'lodash/isObject';\nimport { TdColProps, TdRowProps } from './type';\nimport { calcSize } from '../utils/responsive';\nimport { useListener } from '../hooks/useListener';\nimport { isServer } from '../utils/dom';\n\nexport interface RowProviderType {\n  gutter: TdRowProps['gutter'];\n}\n\n/**\n * rowSizeHook\n * @returns\n */\nexport function useRowSize() {\n  const size = ref(calcSize(isServer ? 0 : window.innerWidth));\n  const updateSize = () => {\n    size.value = calcSize(isServer ? 0 : window.innerWidth);\n  };\n\n  useListener('resize', updateSize);\n\n  return size;\n}\n\n/**\n *\n * @param name\n * @param props\n * @returns\n */\nexport function getRowClasses(name: string, props: TdRowProps) {\n  const { justify, align } = props;\n  return [\n    name,\n    {\n      [`${name}--${justify}`]: justify,\n      // 区分 justify 传值\n      [`${name}--align-${align}`]: align,\n    },\n  ];\n}\n\n/**\n *\n * @param gutter\n * @param currentSize\n * @returns\n */\nexport function calcRowStyle(gutter: TdRowProps['gutter'], currentSize: string) {\n  const rowStyle = {};\n  const getMarginStyle = (gutter: number) =>\n    Object.assign(rowStyle, {\n      marginLeft: `${gutter / -2}px`,\n      marginRight: `${gutter / -2}px`,\n    });\n\n  const getRowGapStyle = (gutter: number) =>\n    Object.assign(rowStyle, {\n      rowGap: `${gutter}px`,\n    });\n\n  const strategyMap = {\n    isNumber: (gutter: TdRowProps['gutter']) => {\n      if (typeof gutter === 'number') {\n        getMarginStyle(gutter);\n      }\n    },\n    isArray: (gutter: TdRowProps['gutter']) => {\n      if (Array.isArray(gutter) && gutter.length) {\n        strategyMap.isNumber(gutter[0]);\n\n        if (typeof gutter[1] === 'number') {\n          getRowGapStyle(gutter[1]);\n        }\n\n        if (isObject(gutter[0]) && gutter[0][currentSize] !== undefined) {\n          getMarginStyle(gutter[0][currentSize]);\n        }\n\n        if (isObject(gutter[1]) && gutter[1][currentSize] !== undefined) {\n          getRowGapStyle(gutter[1][currentSize]);\n        }\n      }\n    },\n    isObject: (gutter: TdRowProps['gutter']) => {\n      if (isObject(gutter) && gutter[currentSize]) {\n        if (Array.isArray(gutter) && gutter.length) {\n          getMarginStyle(gutter[currentSize][0]);\n          getRowGapStyle(gutter[currentSize][1]);\n        } else {\n          getMarginStyle(gutter[currentSize]);\n        }\n      }\n    },\n  };\n\n  Object.keys(strategyMap).forEach((item) => {\n    strategyMap[item](gutter);\n  });\n\n  return rowStyle;\n}\n\n/**\n * 解析Flex\n * @param flex\n * @returns\n */\nexport function parseFlex(flex: TdColProps['flex']): string {\n  if (typeof flex === 'number') {\n    return `${flex} ${flex} 0`;\n  }\n  // 判断是否是flex\n  if (/^\\d+(\\.\\d+)?(px|r?em|%)$/.test(flex)) {\n    return `0 0 ${flex}`;\n  }\n  return flex;\n}\n\n/**\n * 计算ColPadding\n * @param gutter\n * @param currentSize\n * @returns\n */\nexport function calcColPadding(gutter: TdRowProps['gutter'], currentSize: string) {\n  const paddingObj = {};\n  const getPaddingStyle = (gutter: number) =>\n    Object.assign(paddingObj, {\n      paddingLeft: `${gutter / 2}px`,\n      paddingRight: `${gutter / 2}px`,\n    });\n\n  const strategyMap = {\n    isNumber: (gutter: TdRowProps['gutter']) => {\n      if (typeof gutter === 'number') {\n        getPaddingStyle(gutter);\n      }\n    },\n    isArray: (gutter: TdRowProps['gutter']) => {\n      if (Array.isArray(gutter) && gutter.length) {\n        if (typeof gutter[0] === 'number') {\n          getPaddingStyle(gutter[0]);\n        }\n        if (isObject(gutter[0]) && gutter[0][currentSize]) {\n          getPaddingStyle(gutter[0][currentSize]);\n        }\n      }\n    },\n    isObject: (gutter: TdRowProps['gutter']) => {\n      if (isObject(gutter) && gutter[currentSize]) {\n        getPaddingStyle(gutter[currentSize]);\n      }\n    },\n  };\n\n  Object.keys(strategyMap).forEach((item) => {\n    strategyMap[item](gutter);\n  });\n\n  return paddingObj;\n}\n\n/**\n * 获取 col size\n * @param props\n * @returns\n */\nexport function getColClasses(name: string, props: TdColProps) {\n  const { span, order, offset, push, pull } = props;\n  const allSizes = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\n\n  const ColSizeClasses = allSizes.reduce((acc, currSize) => {\n    const sizeProp = props[currSize];\n    let sizeObject: any = {};\n    if (typeof sizeProp === 'number') {\n      sizeObject.span = sizeProp;\n    } else if (isObject(sizeProp)) {\n      sizeObject = sizeProp || {};\n    }\n    return {\n      ...acc,\n      [`${name}-${currSize}-${sizeObject.span}`]: sizeObject.span !== undefined,\n      [`${name}-${currSize}-order-${sizeObject.order}`]: parseInt(sizeObject.order, 10) >= 0,\n      [`${name}-${currSize}-offset-${sizeObject.offset}`]: parseInt(sizeObject.offset, 10) >= 0,\n      [`${name}-${currSize}-push-${sizeObject.push}`]: parseInt(sizeObject.push, 10) >= 0,\n      [`${name}-${currSize}-pull-${sizeObject.pull}`]: parseInt(sizeObject.pull, 10) >= 0,\n    };\n  }, {});\n\n  return {\n    [`${name}`]: true,\n    [`${name}-${span}`]: span !== undefined,\n    [`${name}-order-${order}`]: order,\n    [`${name}-offset-${offset}`]: offset,\n    [`${name}-push-${push}`]: push,\n    [`${name}-pull-${pull}`]: pull,\n    ...ColSizeClasses,\n  };\n}\n"],"names":["useRowSize","size","ref","calcSize","isServer","window","innerWidth","updateSize","value","useListener","getRowClasses","name","props","justify","align","calcRowStyle","gutter","currentSize","rowStyle","getMarginStyle","Object","assign","marginLeft","marginRight","getRowGapStyle","rowGap","strategyMap","isNumber","isArray","Array","length","isObject","keys","forEach","item","parseFlex","flex","test","calcColPadding","paddingObj","getPaddingStyle","paddingLeft","paddingRight","getColClasses","span","order","offset","push","pull","allSizes","ColSizeClasses","reduce","acc","currSize","sizeProp","sizeObject","parseInt"],"mappings":";;;;;;;;;;;;;;;;;;AAeO,SAASA,UAAa,GAAA;AAC3B,EAAA,IAAMC,OAAOC,GAAI,CAAAC,QAAA,CAASC,WAAW,CAAI,GAAAC,MAAA,CAAOC,UAAU,CAAC,CAAA,CAAA;AAC3D,EAAA,IAAMC,aAAa,SAAbA,aAAmB;AACvBN,IAAAA,IAAA,CAAKO,KAAQ,GAAAL,QAAA,CAASC,QAAW,GAAA,CAAA,GAAIC,OAAOC,UAAU,CAAA,CAAA;GACxD,CAAA;AAEAG,EAAAA,WAAA,CAAY,UAAUF,UAAU,CAAA,CAAA;AAEzB,EAAA,OAAAN,IAAA,CAAA;AACT,CAAA;AAQgB,SAAAS,aAAA,CAAcC,MAAcC,KAAmB,EAAA;AAAA,EAAA,IAAA,IAAA,CAAA;AACvD,EAAA,IAAEC,OAAS,GAAUD,KAAA,CAAnBC,OAAS;IAAAC,KAAA,GAAUF,KAAA,CAAVE,KAAA,CAAA;AACV,EAAA,OAAA,CACLH,IAAA,GAEMA,IAAAA,GAAAA,EAAAA,EAAAA,eAAAA,CAAAA,IAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,eAASE,OAAY,CAAA,EAAAA,OAAA,CAAA,EAAA,eAAA,CAAA,IAAA,EAAA,EAAA,CAAA,MAAA,CAErBF,IAAA,EAAA,UAAA,CAAA,CAAA,MAAA,CAAeG,KAAU,CAAA,EAAAA,KAAA,CAEjC,EAAA,IAAA,EAAA,CAAA;AACF,CAAA;AAQgB,SAAAC,YAAA,CAAaC,QAA8BC,WAAqB,EAAA;EAC9E,IAAMC,WAAW,EAAC,CAAA;AAClB,EAAA,IAAMC,cAAiB,GAAA,SAAjBA,cAAiB,CAACH,OACtB,EAAA;AAAA,IAAA,OAAAI,MAAA,CAAOC,OAAOH,QAAU,EAAA;AACtBI,MAAAA,UAAA,EAAeN,EAAAA,CAAAA,MAAAA,CAAAA,OAAS,GAAA,CAAA,CAAA,EAAA,IAAA,CAAA;AACxBO,MAAAA,WAAA,EAAgBP,EAAAA,CAAAA,MAAAA,CAAAA,OAAS,GAAA,CAAA,CAAA,EAAA,IAAA,CAAA;AAC3B,KAAC,CAAA,CAAA;AAAA,GAAA,CAAA;AAEH,EAAA,IAAMQ,cAAiB,GAAA,SAAjBA,cAAiB,CAACR,OACtB,EAAA;AAAA,IAAA,OAAAI,MAAA,CAAOC,OAAOH,QAAU,EAAA;AACtBO,MAAAA,kBAAWT,OAAAA,EAAAA,IAAAA,CAAAA;AACb,KAAC,CAAA,CAAA;AAAA,GAAA,CAAA;AAEH,EAAA,IAAMU,WAAc,GAAA;IAClBC,QAAA,EAAU,SAACX,QAAAA,CAAAA,OAAiC,EAAA;AACtC,MAAA,IAAA,OAAOA,YAAW,QAAU,EAAA;QAC9BG,cAAA,CAAeH,OAAM,CAAA,CAAA;AACvB,OAAA;KACF;IACAY,OAAA,EAAS,SAACZ,OAAAA,CAAAA,OAAiC,EAAA;MACzC,IAAIa,KAAM,CAAAD,OAAA,CAAQZ,OAAM,CAAA,IAAKA,QAAOc,MAAQ,EAAA;AAC9BJ,QAAAA,WAAA,CAAAC,QAAA,CAASX,QAAO,CAAE,CAAA,CAAA,CAAA;AAE1B,QAAA,IAAA,OAAOA,OAAO,CAAA,CAAA,CAAA,KAAO,QAAU,EAAA;AACjCQ,UAAAA,cAAA,CAAeR,QAAO,CAAE,CAAA,CAAA,CAAA;AAC1B,SAAA;AAEA,QAAA,IAAIe,SAASf,OAAO,CAAA,CAAA,CAAE,KAAKA,OAAO,CAAA,CAAA,CAAA,CAAGC,iBAAiB,KAAW,CAAA,EAAA;UAChDD,cAAAA,CAAAA,OAAAA,CAAO,GAAGC,WAAY,CAAA,CAAA,CAAA;AACvC,SAAA;AAEA,QAAA,IAAIc,SAASf,OAAO,CAAA,CAAA,CAAE,KAAKA,OAAO,CAAA,CAAA,CAAA,CAAGC,iBAAiB,KAAW,CAAA,EAAA;UAChDD,cAAAA,CAAAA,OAAAA,CAAO,GAAGC,WAAY,CAAA,CAAA,CAAA;AACvC,SAAA;AACF,OAAA;KACF;IACAc,QAAA,EAAU,SAACf,UAAAA,CAAAA,OAAiC,EAAA;MAC1C,IAAIe,QAASf,CAAAA,OAAM,CAAKA,IAAAA,OAAAA,CAAOC,WAAc,CAAA,EAAA;QAC3C,IAAIY,KAAM,CAAAD,OAAA,CAAQZ,OAAM,CAAA,IAAKA,QAAOc,MAAQ,EAAA;UAC3Bd,cAAAA,CAAAA,OAAAA,CAAOC,aAAa,CAAE,CAAA,CAAA,CAAA;UACtBD,cAAAA,CAAAA,OAAAA,CAAOC,aAAa,CAAE,CAAA,CAAA,CAAA;AACvC,SAAO,MAAA;AACLE,UAAAA,cAAA,CAAeH,QAAOC,WAAY,CAAA,CAAA,CAAA;AACpC,SAAA;AACF,OAAA;AACF,KAAA;GACF,CAAA;EAEAG,MAAA,CAAOY,IAAK,CAAAN,WAAW,CAAE,CAAAO,OAAA,CAAQ,UAACC,IAAS,EAAA;AACzCR,IAAAA,WAAA,CAAYQ,MAAMlB,MAAM,CAAA,CAAA;AAC1B,GAAC,CAAA,CAAA;AAEM,EAAA,OAAAE,QAAA,CAAA;AACT,CAAA;AAOO,SAASiB,UAAUC,IAAkC,EAAA;AACtD,EAAA,IAAA,OAAOA,SAAS,QAAU,EAAA;IAC5B,OAAUA,EAAAA,CAAAA,MAAAA,CAAAA,IAAQ,cAAAA,IAAA,EAAA,IAAA,CAAA,CAAA;AACpB,GAAA;AAEI,EAAA,IAAA,0BAAA,CAA2BC,IAAK,CAAAD,IAAI,CAAG,EAAA;AACzC,IAAA,OAAA,MAAA,CAAA,MAAA,CAAcA,IAAA,CAAA,CAAA;AAChB,GAAA;AACO,EAAA,OAAAA,IAAA,CAAA;AACT,CAAA;AAQgB,SAAAE,cAAA,CAAetB,QAA8BC,WAAqB,EAAA;EAChF,IAAMsB,aAAa,EAAC,CAAA;AACpB,EAAA,IAAMC,eAAkB,GAAA,SAAlBA,eAAkB,CAACxB,OACvB,EAAA;AAAA,IAAA,OAAAI,MAAA,CAAOC,OAAOkB,UAAY,EAAA;AACxBE,MAAAA,WAAA,EAAgBzB,EAAAA,CAAAA,MAAAA,CAAAA,OAAS,GAAA,CAAA,EAAA,IAAA,CAAA;MACzB0B,YAAA,EAAA,EAAA,CAAA,MAAA,CAAiB1B,OAAS,GAAA,CAAA,EAAA,IAAA,CAAA;AAC5B,KAAC,CAAA,CAAA;AAAA,GAAA,CAAA;AAEH,EAAA,IAAMU,WAAc,GAAA;IAClBC,QAAA,EAAU,SAACX,QAAAA,CAAAA,OAAiC,EAAA;AACtC,MAAA,IAAA,OAAOA,YAAW,QAAU,EAAA;QAC9BwB,eAAA,CAAgBxB,OAAM,CAAA,CAAA;AACxB,OAAA;KACF;IACAY,OAAA,EAAS,SAACZ,OAAAA,CAAAA,OAAiC,EAAA;MACzC,IAAIa,KAAM,CAAAD,OAAA,CAAQZ,OAAM,CAAA,IAAKA,QAAOc,MAAQ,EAAA;AACtC,QAAA,IAAA,OAAOd,OAAO,CAAA,CAAA,CAAA,KAAO,QAAU,EAAA;AACjCwB,UAAAA,eAAA,CAAgBxB,QAAO,CAAE,CAAA,CAAA,CAAA;AAC3B,SAAA;AACA,QAAA,IAAIe,SAASf,OAAO,CAAA,CAAA,CAAE,CAAKA,IAAAA,OAAAA,CAAO,GAAGC,WAAc,CAAA,EAAA;UACjCD,eAAAA,CAAAA,OAAAA,CAAO,GAAGC,WAAY,CAAA,CAAA,CAAA;AACxC,SAAA;AACF,OAAA;KACF;IACAc,QAAA,EAAU,SAACf,UAAAA,CAAAA,OAAiC,EAAA;MAC1C,IAAIe,QAASf,CAAAA,OAAM,CAAKA,IAAAA,OAAAA,CAAOC,WAAc,CAAA,EAAA;AAC3CuB,QAAAA,eAAA,CAAgBxB,QAAOC,WAAY,CAAA,CAAA,CAAA;AACrC,OAAA;AACF,KAAA;GACF,CAAA;EAEAG,MAAA,CAAOY,IAAK,CAAAN,WAAW,CAAE,CAAAO,OAAA,CAAQ,UAACC,IAAS,EAAA;AACzCR,IAAAA,WAAA,CAAYQ,MAAMlB,MAAM,CAAA,CAAA;AAC1B,GAAC,CAAA,CAAA;AAEM,EAAA,OAAAuB,UAAA,CAAA;AACT,CAAA;AAOgB,SAAAI,aAAA,CAAchC,MAAcC,KAAmB,EAAA;AAAA,EAAA,IAAA,cAAA,CAAA;AAC7D,EAAA,IAAQgC,IAAM,GAA8BhC,KAAA,CAApCgC,IAAM;IAAAC,KAAA,GAA8BjC,KAAA,CAA9BiC,KAAA;IAAOC,MAAQ,GAAelC,KAAA,CAAvBkC,MAAQ;IAAAC,IAAA,GAAenC,KAAA,CAAfmC,IAAA;IAAMC,OAASpC,KAAA,CAAToC;AACnC,EAAA,IAAMC,WAAW,CAAC,IAAA,EAAM,MAAM,IAAM,EAAA,IAAA,EAAM,MAAM,KAAK,CAAA,CAAA;EAErD,IAAMC,cAAiB,GAAAD,QAAA,CAASE,MAAO,CAAA,UAACC,KAAKC,QAAa,EAAA;AAAA,IAAA,IAAA,cAAA,CAAA;AACxD,IAAA,IAAMC,WAAW1C,KAAM,CAAAyC,QAAA,CAAA,CAAA;IACvB,IAAIE,aAAkB,EAAC,CAAA;AACnB,IAAA,IAAA,OAAOD,aAAa,QAAU,EAAA;MAChCC,UAAA,CAAWX,IAAO,GAAAU,QAAA,CAAA;AACpB,KAAA,MAAA,IAAWvB,QAAS,CAAAuB,QAAQ,CAAG,EAAA;AAC7BC,MAAAA,UAAA,GAAaD,YAAY,EAAC,CAAA;AAC5B,KAAA;AACO,IAAA,OAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EACFF,GAAA,CACCzC,EAAAA,EAAAA,GAAAA,cAAAA,GAAAA,EAAAA,EAAAA,eAAAA,CAAAA,cAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,cAAQ0C,sBAAYE,UAAW,CAAAX,IAAA,GAASW,WAAWX,IAAS,KAAA,KAAA,CAAA,CAC5DjC,EAAAA,eAAAA,CAAAA,cAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,cAAQ0C,QAAkB,EAAA,SAAA,CAAA,CAAA,MAAA,CAAAE,UAAA,CAAWV,QAAUW,QAAS,CAAAD,UAAA,CAAWV,KAAO,EAAA,EAAE,CAAK,IAAA,CAAA,CAAA,EAAA,eAAA,CAAA,cAAA,EAAA,EAAA,CAAA,MAAA,CACjFlC,IAAA,EAAQ0C,GAAAA,CAAAA,CAAAA,MAAAA,CAAAA,QAAmB,qBAAAE,UAAA,CAAWT,OAAWU,EAAAA,QAAS,CAAAD,UAAA,CAAWT,MAAQ,EAAA,EAAE,CAAK,IAAA,CAAA,6CACpFnC,IAAA,EAAA,GAAA,CAAA,CAAA,MAAA,CAAQ0C,QAAiB,EAAAE,QAAAA,CAAAA,CAAAA,MAAAA,CAAAA,UAAA,CAAWR,OAASS,QAAS,CAAAD,UAAA,CAAWR,IAAM,EAAA,EAAE,CAAK,IAAA,CAAA,CAC9EpC,EAAAA,eAAAA,CAAAA,cAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,cAAQ0C,QAAiB,EAAA,QAAA,CAAA,CAAA,MAAA,CAAAE,UAAA,CAAWP,OAASQ,QAAS,CAAAD,UAAA,CAAWP,IAAM,EAAA,EAAE,CAAK,IAAA,CAAA,CAAA,EAAA,cAAA,EAAA,CAAA;GAEtF,EAAG,EAAE,CAAA,CAAA;AAEE,EAAA,OAAA,aAAA,EAAA,cAAA,GAAA,EAAA,EAAA,eAAA,CAAA,cAAA,EAAA,EAAA,CAAA,MAAA,CACDrC,IAAS,CAAA,EAAA,IAAA,CACTA,EAAAA,eAAAA,CAAAA,cAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,IAAQ,cAAAiC,IAAA,CAAA,EAASA,IAAS,KAAA,KAAA,CAAA,CAAA,EAAA,eAAA,CAAA,cAAA,EAAA,EAAA,CAAA,MAAA,CAC1BjC,IAAA,EAAA,SAAA,CAAA,CAAA,MAAA,CAAckC,KAAU,CAAAA,EAAAA,KAAA,CACxBlC,EAAAA,eAAAA,CAAAA,cAAAA,EAAAA,EAAAA,CAAAA,MAAAA,CAAAA,IAAA,qBAAemC,MAAW,CAAA,EAAAA,MAAA,CAAA,EAAA,eAAA,CAAA,cAAA,EAAA,EAAA,CAAA,MAAA,CAC1BnC,IAAA,EAAaoC,QAAAA,CAAAA,CAAAA,MAAAA,CAAAA,IAAS,CAAAA,EAAAA,IAAA,6CACtBpC,IAAA,EAAA,QAAA,CAAA,CAAA,MAAA,CAAaqC,IAAS,CAAAA,EAAAA,IAAA,oBACvBE,cAAA,CAAA,CAAA;AAEP;;;;"}