{"version":3,"file":"useInputNumber.js","sources":["../../src/input-number/useInputNumber.tsx"],"sourcesContent":["import { computed, onMounted, ref, toRefs, watch } from 'vue';\nimport useCommonClassName from '../hooks/useCommonClassName';\nimport useVModel from '../hooks/useVModel';\nimport { InputNumberValue, TdInputNumberProps } from './type';\n// 计算逻辑，统一到 common 中，方便各框架复用（如超过 16 位的大数处理）\nimport {\n  canAddNumber,\n  canInputNumber,\n  canReduceNumber,\n  formatToNumber,\n  getMaxOrMinValidateResult,\n  getStepValue,\n} from '../_common/js/input-number/number';\nimport { useFormDisabled } from '../form/hooks';\n\nexport const specialCode = ['-', '.', 'e', 'E'];\n\n/**\n * 独立一个组件 Hook 方便用户直接使用相关逻辑 自定义任何样式的数字输入框\n */\nexport default function useInputNumber(props: TdInputNumberProps) {\n  const { classPrefix, sizeClassNames, statusClassNames } = useCommonClassName();\n  const { value, modelValue, max, min } = toRefs(props);\n  // 统一处理受控、非受控、语法糖 v-model 等\n  const [tValue, setTValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n  const inputRef = ref();\n  const userInput = ref('');\n\n  const tDisabled = useFormDisabled();\n\n  const isError = ref<'exceed-maximum' | 'below-minimum'>();\n\n  const disabledReduce = computed(\n    () => tDisabled.value || !canReduceNumber(tValue.value, props.min, props.largeNumber),\n  );\n\n  const disabledAdd = computed(() => tDisabled.value || !canAddNumber(tValue.value, props.max, props.largeNumber));\n\n  const wrapClasses = computed(() => [\n    `${classPrefix.value}-input-number`,\n    sizeClassNames[props.size],\n    {\n      [statusClassNames.disabled]: tDisabled.value,\n      [`${classPrefix.value}-is-controls-right`]: props.theme === 'column',\n      [`${classPrefix.value}-input-number--${props.theme}`]: props.theme,\n      [`${classPrefix.value}-input-number--auto-width`]: props.autoWidth,\n    },\n  ]);\n\n  const reduceClasses = computed(() => [\n    `${classPrefix.value}-input-number__decrease`,\n    { [statusClassNames.disabled]: disabledReduce.value },\n  ]);\n\n  const addClasses = computed(() => [\n    `${classPrefix.value}-input-number__increase`,\n    { [statusClassNames.disabled]: disabledAdd.value },\n  ]);\n\n  const getUserInput = (value: InputNumberValue) => {\n    if (!value && value !== 0) return '';\n    let inputStr = value || value === 0 ? String(value) : '';\n    if (!inputRef.value?.inputRef?.contains(document.activeElement)) {\n      const num = formatToNumber(inputStr, {\n        decimalPlaces: props.decimalPlaces,\n        largeNumber: props.largeNumber,\n      });\n      inputStr = num || num === 0 ? String(num) : '';\n      if (props.format) {\n        inputStr = String(props.format(value, { fixedNumber: inputStr }));\n      }\n    }\n    return inputStr;\n  };\n\n  watch(\n    tValue,\n    (val) => {\n      const inputValue = [undefined, null].includes(val) ? '' : String(val);\n      userInput.value = getUserInput(inputValue);\n    },\n    { immediate: true },\n  );\n\n  onMounted(() => {\n    userInput.value = getUserInput(tValue.value);\n  });\n\n  watch(\n    [tValue, max, min],\n    () => {\n      // @ts-ignore 没有输入完成，则无需校验\n      if ([undefined, '', null].includes(tValue.value)) return;\n      const { max, min, largeNumber } = props;\n      const error = getMaxOrMinValidateResult({\n        value: tValue.value,\n        largeNumber,\n        max,\n        min,\n      });\n      isError.value = error;\n      props.onValidate?.({ error });\n    },\n    { immediate: true },\n  );\n\n  const handleStepValue = (op: 'add' | 'reduce') => {\n    const newValue = getStepValue({\n      op,\n      step: props.step,\n      max: props.max,\n      min: props.min,\n      lastValue: tValue.value,\n      largeNumber: props.largeNumber,\n    });\n    const { largeNumber, max, min } = props;\n    const overLimit = getMaxOrMinValidateResult({\n      value: newValue,\n      largeNumber,\n      max,\n      min,\n    });\n    return {\n      overLimit,\n      newValue,\n    };\n  };\n\n  const handleReduce = (e: KeyboardEvent | MouseEvent) => {\n    if (disabledReduce.value || props.readonly) return;\n    const r = handleStepValue('reduce');\n    if (r.overLimit && !props.allowInputOverLimit) return;\n    setTValue(r.newValue, { type: 'reduce', e });\n  };\n\n  const handleAdd = (e: KeyboardEvent | MouseEvent) => {\n    if (disabledAdd.value || props.readonly) return;\n    const r = handleStepValue('add');\n    if (r.overLimit && !props.allowInputOverLimit) return;\n    setTValue(r.newValue, { type: 'add', e });\n  };\n\n  const onInnerInputChange = (val: string, { e }: { e: InputEvent }) => {\n    if (!canInputNumber(val, props.largeNumber)) return;\n    if (props.largeNumber) {\n      setTValue(val, { type: 'input', e });\n      return;\n    }\n    // specialCode 新增或删除这些字符时不触发 change 事件\n    const isDelete = e.inputType === 'deleteContentBackward';\n    const inputSpecialCode = specialCode.includes(val.slice(-1));\n    const deleteSpecialCode = isDelete && specialCode.includes(String(userInput.value).slice(-1));\n    if ((!isNaN(Number(val)) && !inputSpecialCode) || deleteSpecialCode) {\n      const newVal = val === '' ? undefined : Number(val);\n      setTValue(newVal, { type: 'input', e });\n    }\n    if (inputSpecialCode || deleteSpecialCode) {\n      userInput.value = val;\n    }\n  };\n\n  const handleBlur = (value: string, ctx: { e: FocusEvent }) => {\n    const { largeNumber, max, min, decimalPlaces } = props;\n    if (!props.allowInputOverLimit) {\n      const r = getMaxOrMinValidateResult({ value: tValue.value, largeNumber, max, min });\n      if (r === 'below-minimum') {\n        setTValue(min, { type: 'blur', e: ctx.e });\n      } else if (r === 'exceed-maximum') {\n        setTValue(max, { type: 'blur', e: ctx.e });\n      }\n      return;\n    }\n    userInput.value = getUserInput(tValue.value);\n    const newValue = formatToNumber(value, {\n      decimalPlaces,\n      largeNumber,\n    });\n    if (newValue !== value && String(newValue) !== value) {\n      setTValue(newValue, { type: 'blur', e: ctx.e });\n    }\n    props.onBlur?.(newValue, ctx);\n  };\n\n  const handleFocus = (value: string, ctx: { e: FocusEvent }) => {\n    userInput.value = tValue.value || tValue.value === 0 ? String(tValue.value) : '';\n    props.onFocus?.(value, ctx);\n  };\n\n  const handleKeydown = (value: string, ctx: { e: KeyboardEvent }) => {\n    const { e } = ctx;\n    const keyEvent = {\n      ArrowUp: handleAdd,\n      ArrowDown: handleReduce,\n    };\n    const code = e.code || e.key;\n    if (keyEvent[code] !== undefined) {\n      keyEvent[code](e);\n    }\n    props.onKeydown?.(value, ctx);\n  };\n\n  const handleKeyup = (value: string, ctx: { e: KeyboardEvent }) => {\n    props.onKeyup?.(value, ctx);\n  };\n\n  const handleKeypress = (value: string, ctx: { e: KeyboardEvent }) => {\n    props.onKeypress?.(value, ctx);\n  };\n\n  const handleEnter = (value: string, ctx: { e: KeyboardEvent }) => {\n    userInput.value = getUserInput(value);\n    const newValue = formatToNumber(value, {\n      decimalPlaces: props.decimalPlaces,\n      largeNumber: props.largeNumber,\n    });\n    if (newValue !== value && String(newValue) !== value) {\n      setTValue(newValue, { type: 'enter', e: ctx.e });\n    }\n    props.onEnter?.(newValue, ctx);\n  };\n\n  const focus = () => {\n    (inputRef.value as any).focus();\n  };\n\n  const blur = () => {\n    (inputRef.value as any).blur();\n  };\n\n  const listeners = {\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    onKeydown: handleKeydown,\n    onKeyup: handleKeyup,\n    onKeypress: handleKeypress,\n    onEnter: handleEnter,\n    onClick: focus,\n  };\n\n  return {\n    classPrefix,\n    wrapClasses,\n    reduceClasses,\n    addClasses,\n    tDisabled,\n    isError,\n    listeners,\n    userInput,\n    tValue,\n    inputRef,\n    focus,\n    blur,\n    handleReduce,\n    handleAdd,\n    onInnerInputChange,\n  };\n}\n"],"names":["specialCode","useInputNumber","props","useCommonClassName","classPrefix","sizeClassNames","statusClassNames","toRefs","value","modelValue","max","min","useVModel","defaultValue","onChange","tValue","setTValue","inputRef","ref","userInput","tDisabled","useFormDisabled","isError","disabledReduce","computed","canReduceNumber","largeNumber","disabledAdd","canAddNumber","wrapClasses","size","disabled","theme","autoWidth","reduceClasses","addClasses","getUserInput","inputStr","String","contains","document","activeElement","num","formatToNumber","decimalPlaces","format","fixedNumber","watch","val","inputValue","includes","immediate","onMounted","error","getMaxOrMinValidateResult","onValidate","handleStepValue","op","newValue","getStepValue","step","lastValue","overLimit","handleReduce","e","readonly","r","allowInputOverLimit","type","handleAdd","onInnerInputChange","canInputNumber","isDelete","inputType","inputSpecialCode","slice","deleteSpecialCode","isNaN","Number","newVal","handleBlur","ctx","onBlur","handleFocus","onFocus","handleKeydown","keyEvent","ArrowUp","ArrowDown","code","key","onKeydown","handleKeyup","onKeyup","handleKeypress","onKeypress","handleEnter","onEnter","focus","blur","listeners","onClick"],"mappings":"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"}