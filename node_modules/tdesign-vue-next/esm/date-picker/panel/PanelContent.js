/**
 * tdesign v0.24.9
 * (c) 2022 tdesign
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, createVNode } from 'vue';
import { usePrefixClass } from '../../hooks/useConfig.js';
import TDateHeader from '../base/Header.js';
import TDateTable from '../base/Table.js';
import _TimePickerPanel from '../../time-picker/panel/time-picker-panel.js';
import { getDefaultFormat } from '../../_common/js/date-picker/format.js';
import '../../config-provider/useConfig.js';
import '../../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import '../../_common/js/global-config/default-config.js';
import '../../_common/js/global-config/locale/zh_CN.js';
import '../../config-provider/type.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../../jumper/index.js';
import '../../jumper/jumper.js';
import 'lodash/isObject';
import 'tdesign-icons-vue-next';
import '../../jumper/props.js';
import '../../hooks/useGlobalIcon.js';
import '../../button/index.js';
import '../../button/button.js';
import '../../loading/index.js';
import '../../loading/directive.js';
import '../../loading/plugin.js';
import '../../loading/loading.js';
import '@babel/runtime/helpers/slicedToArray';
import '../../loading/icon/gradient.js';
import '../../_common/js/loading/circle-adapter.js';
import '../../_common/js/utils/set-style.js';
import '../../_common/js/utils/helper.js';
import '@babel/runtime/helpers/objectWithoutProperties';
import '../../utils/dom.js';
import '../../_chunks/dep-ff6303d0.js';
import 'lodash/isString';
import '../../utils/easing.js';
import '../../utils/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isFunction';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../../utils/transfer-dom.js';
import '../../loading/props.js';
import '../../utils/withInstall.js';
import '../../loading/style';
import '../../loading/type.js';
import '../../button/props.js';
import '../../hooks/useRipple.js';
import '../../hooks/useKeepAnimation.js';
import '../../utils/set-style.js';
import '../../form/hooks.js';
import '../../hooks/tnode.js';
import '../../button/style';
import '../../button/type.js';
import '../../jumper/style';
import '../../jumper/type.js';
import '../../select/select.js';
import 'lodash/pick';
import 'lodash/isArray';
import 'lodash/debounce';
import 'lodash/cloneDeep';
import 'lodash/get';
import 'lodash/intersection';
import '../../common-components/fake-arrow.js';
import '../../select-input/index.js';
import '../../select-input/select-input.js';
import '../../popup/index.js';
import '../../popup/popup.js';
import '@babel/runtime/helpers/typeof';
import '@popperjs/core';
import '../../popup/props.js';
import '../../popup/container.js';
import '../../hooks/useVModel.js';
import '../../popup/style';
import '../../popup/type.js';
import '../../select-input/props.js';
import '../../select-input/useSingle.js';
import '../../input/index.js';
import '../../input/input.js';
import '../../input/props.js';
import '../../input/useInput.js';
import '../../form/const.js';
import '../../hooks/index.js';
import '../../hooks/icon.js';
import '../../hooks/slot.js';
import '../../hooks/useCommonClassName.js';
import '../../hooks/useDefaultValue.js';
import '../../hooks/useDestroyOnClose.js';
import '../../hooks/useVirtualScroll.js';
import '../../input/useLengthLimit.js';
import '../../_common/js/log/index.js';
import '../../_common/js/log/log.js';
import '../../input/useInputEventHandler.js';
import '../../input/useInputWidth.js';
import '../../input/input-group.js';
import '../../input/style';
import '../../input/type.js';
import '../../select-input/useMultiple.js';
import '../../tag-input/index.js';
import '../../tag-input/tag-input.js';
import '../../tag-input/props.js';
import '../../tag-input/hooks/useTagScroll.js';
import '../../tag-input/useTagList.js';
import '../../tag/index.js';
import '../../tag/tag.js';
import '../../tag/props.js';
import '../../tag/check-tag.js';
import '../../tag/check-tag-props.js';
import '../../tag/style';
import '../../tag/type.js';
import '../../tag-input/hooks/useHover.js';
import '../../tag-input/hooks/useDragSorter.js';
import '../../tag-input/style';
import '../../tag-input/type.js';
import '../../select-input/useOverlayInnerStyle.js';
import '../../select-input/style';
import '../../select-input/type.js';
import '../../select/select-panel.js';
import 'lodash/omit';
import '../../select/option.js';
import '../../select/option-props.js';
import '../../checkbox/index.js';
import '../../checkbox/checkbox.js';
import '../../checkbox/props.js';
import '../../checkbox/constants.js';
import '../../checkbox/group.js';
import '../../checkbox/checkbox-group-props.js';
import '../../checkbox/style';
import '../../checkbox/type.js';
import '../../select/helper.js';
import '../../select/optionGroup.js';
import '../../select/option-group-props.js';
import '../../select/props.js';
import '../../select/hooks/usePanelVirtualScroll.js';
import '../../select/hooks/useSelectOptions.js';
import '../base/Cell.js';
import '../../_common/js/date-picker/utils.js';
import '@babel/runtime/helpers/objectDestructuringEmpty';
import '@babel/runtime/helpers/extends';
import 'dayjs';
import '../../_chunks/dep-cae0fb66.js';
import 'lodash/chunk';
import '../../_common/js/time-picker/const.js';
import '../../time-picker/panel/props.js';
import '../../time-picker/props.js';
import '../../time-picker/panel/single-panel.js';
import 'lodash/range';
import 'lodash/padStart';
import '../../_common/js/time-picker/utils.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var TPanelContent = defineComponent({
  name: "TPanelContent",
  props: {
    mode: String,
    format: String,
    enableTimePicker: Boolean,
    timePickerProps: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    year: Number,
    month: Number,
    tableData: Array,
    time: String,
    firstDayOfWeek: Number,
    partial: String,
    popupVisible: Boolean,
    onYearChange: Function,
    onMonthChange: Function,
    onJumperClick: Function,
    onCellMouseEnter: Function,
    onCellClick: Function,
    onCellMouseLeave: Function,
    onTimePickerChange: Function,
    value: [String, Number, Array, Date]
  },
  setup: function setup(props) {
    var COMPONENT_NAME = usePrefixClass("date-picker__panel");
    var _getDefaultFormat = getDefaultFormat({
        mode: props.mode,
        format: props.format,
        enableTimePicker: props.enableTimePicker
      }),
      timeFormat = _getDefaultFormat.timeFormat;
    var defaultTimeValue = "00:00:00";
    return function () {
      return createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "-content")
      }, [createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "-").concat(props.mode)
      }, [createVNode(TDateHeader, {
        "mode": props.mode,
        "year": props.year,
        "month": props.month,
        "onMonthChange": function onMonthChange(val) {
          var _props$onMonthChange;
          return (_props$onMonthChange = props.onMonthChange) === null || _props$onMonthChange === void 0 ? void 0 : _props$onMonthChange.call(props, val, {
            partial: props.partial
          });
        },
        "onYearChange": function onYearChange(val) {
          var _props$onYearChange;
          return (_props$onYearChange = props.onYearChange) === null || _props$onYearChange === void 0 ? void 0 : _props$onYearChange.call(props, val, {
            partial: props.partial
          });
        },
        "onJumperClick": function onJumperClick(_ref) {
          var _props$onJumperClick;
          var trigger = _ref.trigger;
          return (_props$onJumperClick = props.onJumperClick) === null || _props$onJumperClick === void 0 ? void 0 : _props$onJumperClick.call(props, {
            trigger: trigger,
            partial: props.partial
          });
        }
      }, null), createVNode(TDateTable, {
        "mode": props.mode,
        "data": props.tableData,
        "time": props.time,
        "value": props.value,
        "format": props.format,
        "firstDayOfWeek": props.firstDayOfWeek,
        "onCellClick": function onCellClick(date, _ref2) {
          var _props$onCellClick;
          var e = _ref2.e;
          return (_props$onCellClick = props.onCellClick) === null || _props$onCellClick === void 0 ? void 0 : _props$onCellClick.call(props, date, {
            e: e,
            partial: props.partial
          });
        },
        "onCellMouseEnter": function onCellMouseEnter(date) {
          var _props$onCellMouseEnt;
          return (_props$onCellMouseEnt = props.onCellMouseEnter) === null || _props$onCellMouseEnt === void 0 ? void 0 : _props$onCellMouseEnt.call(props, date, {
            partial: props.partial
          });
        },
        "onCellMouseLeave": props.onCellMouseLeave
      }, null)]), props.enableTimePicker && createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "-time")
      }, [createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "-time-viewer")
      }, [props.time || defaultTimeValue]), createVNode(_TimePickerPanel, _objectSpread({
        key: props.partial,
        isShowPanel: props.popupVisible,
        format: timeFormat,
        value: props.time || defaultTimeValue,
        onChange: props.onTimePickerChange
      }, props.timePickerProps), null)])]);
    };
  }
});

export { TPanelContent as default };
//# sourceMappingURL=PanelContent.js.map
