{"version":3,"file":"transfer.js","sources":["../../src/transfer/transfer.tsx"],"sourcesContent":["import { defineComponent, computed, toRefs } from 'vue';\nimport pick from 'lodash/pick';\nimport TransferList from './components/transfer-list';\nimport TransferOperations from './components/transfer-operations';\nimport { TransferListType, CheckedOptions, TransferValue, EmptyType, TargetParams, SearchEvent } from './interface';\n\nimport { getTransferListOption, getDataValues, getTransferData, filterTransferData, TRANSFER_NAME } from './utils';\nimport { PageInfo, TdPaginationProps } from '../pagination/type';\nimport props from './props';\nimport { TNode } from '../common';\nimport useVModel from '../hooks/useVModel';\nimport useDefaultValue from '../hooks/useDefaultValue';\n\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport { usePrefixClass } from '../hooks/useConfig';\n\nconst SOURCE = 'source';\nconst TARGET = 'target';\n\nexport default defineComponent({\n  name: TRANSFER_NAME,\n  props: { ...props },\n\n  setup(props, { slots }) {\n    const disabled = useFormDisabled();\n    const classPrefix = usePrefixClass();\n    const { value, modelValue, checked } = toRefs(props);\n    const [innerValue, setInnerValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const [innerChecked] = useDefaultValue(checked, props.defaultChecked, props.onCheckedChange, 'checked');\n    const valueList = computed(() => innerValue.value);\n\n    const isTreeMode = computed(() => {\n      const treeSlot = slots.tree;\n      return typeof treeSlot === 'function';\n    });\n\n    const leftButtonDisabled = computed(() => props.direction === 'right');\n    const rightButtonDisabled = computed(() => props.direction === 'left');\n    // props 传入的 data 格式化后的数据\n    const transferData = computed(() => {\n      return getTransferData(props.data, props.keys, isTreeMode.value);\n    });\n    const sourceList = computed(() => {\n      return filterTransferData(transferData.value, valueList.value as TransferValue[], false, isTreeMode.value);\n    });\n    const targetList = computed(() => {\n      return filterTransferData(transferData.value, valueList.value as TransferValue[], true, isTreeMode.value);\n    });\n    // 被选中的value\n    const checkedValue = computed(() => {\n      return {\n        [SOURCE]: getDataValues(sourceList.value, innerChecked.value, { isTreeMode: isTreeMode.value }),\n        [TARGET]: getDataValues(targetList.value, innerChecked.value, { isTreeMode: isTreeMode.value }),\n      };\n    });\n    const hasFooter = computed(() => {\n      return !!slots.footer || !!props.footer;\n    });\n    const showPagination = computed(() => {\n      // 翻页在自定义列表无效\n      return !!props.pagination && !slots.content;\n    });\n    const showSearch = computed(() => {\n      // 翻页在自定义列表无效\n      return !!props.search;\n    });\n    const footerOption = computed(() => {\n      const footer = props.footer || '';\n      return getTransferListOption<string | Function>(footer);\n    });\n    const emptyOption = computed(() => {\n      return getTransferListOption<EmptyType>(props.empty);\n    });\n    const searchOption = computed(() => {\n      return getTransferListOption<boolean>(props.search);\n    });\n    const checkAllOption = computed(() => {\n      return getTransferListOption<boolean>(props.showCheckAll);\n    });\n    const disabledOption = computed(() => {\n      return getTransferListOption<boolean>(disabled.value);\n    });\n    const titleOption = computed(() => {\n      return getTransferListOption<string | TNode<{ type: TransferListType }>>(props.title);\n    });\n    const paginationOption = computed(() => {\n      return getTransferListOption<TdPaginationProps>(props.pagination);\n    });\n\n    const handleCheckedChange = (val: Array<TransferValue>, listType: TransferListType) => {\n      const sourceChecked = listType === SOURCE ? val : checkedValue.value[SOURCE];\n      const targetChecked = listType === TARGET ? val : checkedValue.value[TARGET];\n      const checked = [...sourceChecked, ...targetChecked];\n      const event: CheckedOptions = {\n        checked,\n        sourceChecked,\n        targetChecked,\n        type: listType,\n      };\n      // TODO onCheckedChange 参数有点不合理\n      innerChecked.value = checked;\n      props.onCheckedChange?.(event);\n    };\n\n    const transferTo = (toDirection: TransferListType) => {\n      const oldTargetValue: Array<TransferValue> = JSON.parse(JSON.stringify(valueList.value));\n      let newTargetValue: Array<TransferValue>;\n      const selfCheckedValue = toDirection === TARGET ? checkedValue.value[SOURCE] : checkedValue.value[TARGET];\n      // target->source\n      if (toDirection === SOURCE) {\n        newTargetValue = oldTargetValue.filter((v) => !selfCheckedValue.includes(v));\n      } else if (props.targetSort === 'original') {\n        // 按照原始顺序\n        newTargetValue = getDataValues(transferData.value, oldTargetValue.concat(selfCheckedValue), {\n          isTreeMode: isTreeMode.value,\n        });\n      } else if (props.targetSort === 'unshift') {\n        newTargetValue = selfCheckedValue.concat(oldTargetValue);\n      } else {\n        newTargetValue = oldTargetValue.concat(selfCheckedValue);\n      }\n\n      // 清空checked。与toDirection相反\n      handleCheckedChange([], toDirection === SOURCE ? TARGET : SOURCE);\n\n      const params: TargetParams = {\n        type: toDirection,\n        movedValue: selfCheckedValue,\n      };\n      setInnerValue(newTargetValue, params);\n    };\n\n    // 点击移到右边按钮触发的函数\n    const transferToRight = () => {\n      transferTo(TARGET);\n    };\n    // 点击移到左边按钮触发的函数\n    const transferToLeft = () => {\n      transferTo(SOURCE);\n    };\n\n    const handleScroll = (e: Event, listType: TransferListType) => {\n      const target = e.target as HTMLElement;\n      const bottomDistance = target.scrollHeight - target.scrollTop - target.clientHeight;\n      const event: { e: Event; bottomDistance: number; type: TransferListType } = {\n        e,\n        bottomDistance,\n        type: listType,\n      };\n      props.onScroll?.(event);\n    };\n    const handleSearch = (e: SearchEvent) => {\n      props.onSearch?.(e);\n    };\n    const handlePageChange = (pageInfo: PageInfo, listType: TransferListType) => {\n      props.onPageChange?.(pageInfo, { type: listType });\n    };\n    const renderTransferList = (listType: TransferListType) => {\n      const scopedSlots = pick(slots, ['title', 'empty', 'footer', 'operation', 'transferItem', 'default', 'tree']);\n      return (\n        <TransferList\n          checkboxProps={props.checkboxProps}\n          transferItem={props.transferItem}\n          list-type={listType}\n          title={titleOption.value[listType]}\n          data-source={listType === SOURCE ? sourceList.value : targetList.value}\n          checked-value={checkedValue.value[listType]}\n          disabled={disabledOption.value[listType]}\n          search={searchOption.value[listType]}\n          pagination={paginationOption.value[listType]}\n          check-all={checkAllOption.value[listType]}\n          footer={footerOption.value[listType]}\n          empty={emptyOption.value[listType]}\n          onCheckedChange={($event: any) => handleCheckedChange($event, listType)}\n          onScroll={($event: any) => handleScroll($event, listType)}\n          onSearch={handleSearch}\n          onPageChange={($event: any) => handlePageChange($event, listType)}\n          isTreeMode={isTreeMode.value}\n        >\n          {scopedSlots}\n        </TransferList>\n      );\n    };\n\n    return () => (\n      <div\n        class={[\n          `${classPrefix.value}-transfer`,\n          showSearch.value ? `${classPrefix.value}-transfer__search` : '',\n          hasFooter.value ? `${classPrefix.value}-transfer__footer` : '',\n          showPagination.value ? `${classPrefix.value}-transfer__pagination` : '',\n          isTreeMode.value ? `${classPrefix.value}-transfer--with-tree` : '',\n        ]}\n      >\n        {renderTransferList(SOURCE)}\n        <TransferOperations\n          leftDisabled={\n            disabledOption.value[TARGET] || leftButtonDisabled.value || checkedValue.value[TARGET].length === 0\n          }\n          rightDisabled={\n            disabledOption.value[SOURCE] || rightButtonDisabled.value || checkedValue.value[SOURCE].length === 0\n          }\n          operation={props.operation}\n          onMoveToRight={transferToRight}\n          onMoveToLeft={transferToLeft}\n          v-slots={{ operation: slots.operation }}\n        />\n        {renderTransferList(TARGET)}\n      </div>\n    );\n  },\n});\n"],"names":["_isVNode","SOURCE","TARGET","defineComponent","name","TRANSFER_NAME","props","setup","slots","disabled","useFormDisabled","classPrefix","usePrefixClass","toRefs","value","modelValue","checked","useVModel","defaultValue","onChange","innerValue","setInnerValue","useDefaultValue","defaultChecked","onCheckedChange","innerChecked","valueList","computed","isTreeMode","treeSlot","tree","leftButtonDisabled","direction","rightButtonDisabled","transferData","getTransferData","data","keys","sourceList","filterTransferData","targetList","checkedValue","getDataValues","hasFooter","footer","showPagination","pagination","content","showSearch","search","footerOption","getTransferListOption","emptyOption","empty","searchOption","checkAllOption","showCheckAll","disabledOption","titleOption","title","paginationOption","handleCheckedChange","val","listType","sourceChecked","targetChecked","event","type","transferTo","toDirection","oldTargetValue","JSON","parse","stringify","newTargetValue","selfCheckedValue","filter","v","includes","targetSort","concat","params","movedValue","transferToRight","transferToLeft","handleScroll","e","target","bottomDistance","scrollHeight","scrollTop","clientHeight","onScroll","handleSearch","onSearch","handlePageChange","pageInfo","onPageChange","renderTransferList","scopedSlots","pick","_createVNode","checkboxProps","transferItem","$event","length","operation"],"mappings":"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"}